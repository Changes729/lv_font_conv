{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../src/opentype.js","../node_modules/string.prototype.codepointat/codepointat.js","../node_modules/tiny-inflate/index.js","../src/bbox.js","../src/path.js","../src/check.js","../src/types.js","../src/table.js","../src/parse.js","../src/tables/cmap.js","../src/encoding.js","../src/draw.js","../src/glyph.js","../src/glyphset.js","../src/tables/cff.js","../src/tables/head.js","../src/tables/hhea.js","../src/tables/hmtx.js","../src/tables/ltag.js","../src/tables/maxp.js","../src/tables/name.js","../src/tables/os2.js","../src/tables/post.js","../src/tables/gsub.js","../src/tables/meta.js","../src/tables/sfnt.js","../src/layout.js","../src/position.js","../src/substitution.js","../src/util.js","../src/tables/glyf.js","../src/hintingtt.js","../src/tokenizer.js","../src/char.js","../src/features/featureQuery.js","../src/features/arab/contextCheck/arabicWord.js","../src/features/arab/contextCheck/arabicSentence.js","../src/features/applySubstitution.js","../src/features/arab/arabicPresentationForms.js","../src/features/arab/arabicRequiredLigatures.js","../src/features/latn/contextCheck/latinWord.js","../src/features/latn/latinLigatures.js","../src/bidi.js","../src/font.js","../src/tables/fvar.js","../src/tables/gpos.js","../src/tables/kern.js","../src/tables/loca.js","../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../lib/freetype/build/ft_render.js","../lib/freetype/index.js","../node_modules/make-error/index.js","../lib/app_error.js","../lib/ranger.js","../lib/collect_font_data.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/util/node_modules/inherits/inherits_browser.js","../node_modules/util/util.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process-nextick-args/index.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/readable-stream/node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","../node_modules/object-assign/index.js","../node_modules/assert/node_modules/util/support/isBufferBrowser.js","../node_modules/assert/node_modules/inherits/inherits_browser.js","../node_modules/assert/node_modules/util/util.js","../node_modules/assert/assert.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/utils/common.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/browserify-zlib/lib/binding.js","../node_modules/browserify-zlib/lib/index.js","../node_modules/pngjs/lib/chunkstream.js","../node_modules/pngjs/lib/interlace.js","../node_modules/pngjs/lib/paeth-predictor.js","../node_modules/pngjs/lib/filter-parse.js","../node_modules/pngjs/lib/filter-parse-async.js","../node_modules/pngjs/lib/constants.js","../node_modules/pngjs/lib/crc.js","../node_modules/pngjs/lib/parser.js","../node_modules/pngjs/lib/bitmapper.js","../node_modules/pngjs/lib/format-normaliser.js","../node_modules/pngjs/lib/parser-async.js","../node_modules/pngjs/lib/bitpacker.js","../node_modules/pngjs/lib/filter-pack.js","../node_modules/pngjs/lib/packer.js","../node_modules/pngjs/lib/packer-async.js","../node_modules/pngjs/lib/sync-inflate.js","../node_modules/pngjs/lib/sync-reader.js","../node_modules/pngjs/lib/filter-parse-sync.js","../node_modules/pngjs/lib/parser-sync.js","../node_modules/pngjs/lib/packer-sync.js","../node_modules/pngjs/lib/png-sync.js","../node_modules/pngjs/lib/png.js","../node_modules/lodash/lodash.js","../lib/utils.js","../lib/writers/dump.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../lib/font/table_head.js","../lib/font/cmap_build_subtables.js","../lib/font/table_cmap.js","../node_modules/bit-buffer/bit-buffer.js","../lib/font/compress.js","../lib/font/table_glyf.js","../lib/font/table_loca.js","../lib/font/table_kern.js","../lib/font/font.js","../lib/writers/bin.js","../lib/writers/lvgl/lv_table_head.js","../lib/writers/lvgl/lv_table_cmap.js","../lib/writers/lvgl/lv_table_glyf.js","../lib/writers/lvgl/lv_table_kern.js","../lib/writers/lvgl/lv_font.js","../lib/writers/lvgl/index.js","../lib/convert.js","../src/FileSaver.js","index.js"],"names":["let","arguments","i","ii","const","pair","this","subtable","singleSubstitutionFormat1","singleSubstitutionFormat2","chainingSubstitutionFormat3","ligatureSubstitutionFormat1","getContextParams","HintingTrueType","subtableParsers","subtableMakers","inflate","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","Module","_scriptDir","document","currentScript","src","undefined","moduleOverrides","key","hasOwnProperty","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_HAS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","node","scriptDirectory","read_","readAsync","readBinary","setWindowTitle","nodeFS","nodePath","locateFile","path","__dirname","filename","binary","ret","tryParseAsDataURI","require","toString","buffer","Uint8Array","assert","replace","slice","read","f","data","intArrayToString","readbuffer","scriptArgs","quit","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","err","responseType","response","onload","onerror","out","bind","dynamicAlloc","size","HEAP32","DYNAMICTOP_PTR","end","_emscripten_get_heap_size","abort","asm2wasmImports","x","y","functionPointers","tempRet0","setTempRet0","value","getTempRet0","wasmBinary","noExitRuntime","wasmMemory","wasmTable","getValue","ptr","type","noSafe","charAt","HEAP8","HEAP16","HEAPF32","HEAPF64","WebAssembly","ABORT","EXITSTATUS","condition","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","str","stringToUTF8","stackAlloc","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","convertReturnValue","UTF8ToString","Boolean","stackRestore","cwrap","numericArgs","every","numericRet","getMemory","runtimeInitialized","_malloc","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","u0","u1","u2","String","fromCharCode","ch","HEAPU8","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","UTF16Decoder","allocateUTF8","set","writeAsciiToMemory","dontAddNull","WASM_PAGE_SIZE","HEAPU16","HEAPU32","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","Promise","resolve","reject","credentials","then","catch","createWasm","info","NaN","Infinity","Math","receiveInstance","instance","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateAsync","instantiateStreaming","result","global","providedBuffer","Table","globalCtors","ENV","___buildEnvironment","environ","MAX_ENV_VALUES","poolPtr","envPtr","called","navigator","languages","strings","totalSize","line","ptrSize","getShiftFromSize","TypeError","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","Object","create","constructor","BindingError","throwBindingError","InternalError","registerType","rawType","registeredInstance","options","ignoreDuplicateRegistrations","forEach","__embind_register_bool","trueValue","falseValue","wt","destructors","o","pointer","heap","destructorFunction","emval_free_list","emval_handle_array","__emval_decref","handle","refcount","count_emval_handles","count","get_first_emval","init_emval","__emval_register","pop","simpleReadValueFromPointer","__embind_register_emval","rv","_embind_repr","v","t","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","signed","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","join","_free","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","start","__embind_register_void","isVoid","_emscripten_run_script","eval","_getenv","_longjmp","_setThrew","_emscripten_memcpy_big","dest","num","___setErrNo","abortOnCannotGrowMemory","requestedSize","emscripten_realloc_buffer","grow","_emscripten_resize_heap","oldSize","newSize","MIN_TOTAL_MEMORY","max","min","ASSERTIONS","chr","decodeBase64","atob","input","keyStr","chr1","chr2","chr3","enc2","enc3","enc4","intArrayFromBase64","s","Buffer","from","_","byteOffset","decoded","bytes","invoke_iii","index","a1","a2","sp","dynCall_iii","invoke_iiii","a3","dynCall_iiii","invoke_iiiii","a4","dynCall_iiiii","invoke_vi","dynCall_vi","invoke_viiii","dynCall_viiii","asmGlobalArg","asmLibraryArg","asm","_FT_Done_Face","_FT_Done_FreeType","_FT_Get_Char_Index","_FT_Get_Kerning","_FT_Get_Sfnt_Table","_FT_Init_FreeType","_FT_Load_Glyph","_FT_New_Memory_Face","_FT_Render_Glyph","_FT_Set_Char_Size","_FT_Set_Pixel_Sizes","___embind_register_native_and_builtin_types","___getTypeName","_init_constants","calledRun","doRun","what","old","runCaller","define","ft_render_fabric","m","library","runtime_initialized","module_instance","from_16_16","fixed_point","from_26_6","int8_to_uint8","FT_New_Memory_Face","FT_Set_Char_Size","FT_Set_Pixel_Sizes","FT_Get_Char_Index","FT_Load_Glyph","FT_Get_Sfnt_Table","FT_Get_Kerning","FT_Done_Face","init","fontface_create","source","face","font","units_per_em","OFFSET_FACE_UNITS_PER_EM","ascender","OFFSET_FACE_ASCENDER","descender","OFFSET_FACE_DESCENDER","height","OFFSET_FACE_HEIGHT","assign","fontface_os2_table","sfnt_ptr","FT_SFNT_OS2","typoAscent","OFFSET_TT_OS2_ASCENDER","typoDescent","OFFSET_TT_OS2_DESCENDER","typoLineGap","OFFSET_TT_OS2_LINEGAP","get_kerning","code1","code2","glyph1","glyph2","FT_KERNING_DEFAULT","glyph_exists","code","glyph_index","glyph_render","load_flags","FT_LOAD_RENDER","FT_LOAD_BITMAP_METRICS_ONLY","mono","FT_LOAD_TARGET_MONO","lcd","FT_LOAD_TARGET_LCD","lcd_v","FT_LOAD_TARGET_LCD_V","autohint_strong","FT_LOAD_TARGET_NORMAL","FT_LOAD_TARGET_LIGHT","autohint_off","FT_LOAD_NO_AUTOHINT","FT_LOAD_FORCE_AUTOHINT","glyph","OFFSET_FACE_GLYPH","glyph_data","OFFSET_GLYPH_INDEX","metrics","width","OFFSET_GLYPH_METRICS_WIDTH","OFFSET_GLYPH_METRICS_HEIGHT","horiBearingX","OFFSET_GLYPH_METRICS_HORI_BEARING_X","horiBearingY","OFFSET_GLYPH_METRICS_HORI_BEARING_Y","horiAdvance","OFFSET_GLYPH_METRICS_HORI_ADVANCE","vertBearingX","OFFSET_GLYPH_METRICS_VERT_BEARING_X","vertBearingY","OFFSET_GLYPH_METRICS_VERT_BEARING_Y","vertAdvance","OFFSET_GLYPH_METRICS_VERT_ADVANCE","linearHoriAdvance","OFFSET_GLYPH_LINEAR_HORI_ADVANCE","linearVertAdvance","OFFSET_GLYPH_LINEAR_VERT_ADVANCE","advance","OFFSET_GLYPH_ADVANCE_X","OFFSET_GLYPH_ADVANCE_Y","bitmap","OFFSET_GLYPH_BITMAP_WIDTH","rows","OFFSET_GLYPH_BITMAP_ROWS","pitch","OFFSET_GLYPH_BITMAP_PITCH","num_grays","OFFSET_GLYPH_BITMAP_NUM_GRAYS","pixel_mode","OFFSET_GLYPH_BITMAP_PIXEL_MODE","palette_mode","OFFSET_GLYPH_BITMAP_PALETTE_MODE","bitmap_left","OFFSET_GLYPH_BITMAP_LEFT","bitmap_top","OFFSET_GLYPH_BITMAP_TOP","lsb_delta","OFFSET_GLYPH_LSB_DELTA","rsb_delta","OFFSET_GLYPH_RSB_DELTA","g_w","g_h","g_x","g_y","OFFSET_GLYPH_BITMAP_BUFFER","abs","advance_x","advance_y","row_start","pixels","freetype","fontface_destroy","destroy","Ranger","add_range","mapped_start","offset","_set_char","add_symbols","codePointAt","mapped_to","get","opentype","ft_render","AppError","fonts_options","source_path","fonts_opentype","fonts_freetype","source_bin","b","isBuffer","parse","ranger","ranges","item","range","chars","is_empty","symbols","mapping","glyphs","all_dst_charcodes","keys","sort","map","Number","dst_code","src_code","src_font","ft_result","bpp","advanceWidth","bbox","kerning","no_kerning","existing_dst_charcodes","g","charToGlyph","fromCodePoint","dst_code2","src_code2","krn_value","getKerningValue","unitsPerEm","first_font","first_font_scale","os2_metrics","post_table","tables","post","values","ascent","descent","round","underlinePosition","underlineThickness","getOwnPropertyDescriptors","obj","descriptors","getOwnPropertyDescriptor","formatRegExp","format","isString","objects","inspect","JSON","stringify","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","ctx","seen","stylize","stylizeNoColor","formatValue","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","styleType","style","styles","arrayToHash","hash","val","recurseTimes","isFunction","primitive","formatPrimitive","visibleKeys","isError","getOwnPropertyNames","formatError","isRegExp","RegExp","isDate","Date","base","braces","isArray","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","l","match","desc","split","reduce","prev","cur","numLinesEst","ar","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","pad","n","debuglog","toUpperCase","test","pid","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","add","kCustomPromisifiedSymbol","Symbol","callbackifyOnRejected","newReason","callbackify","original","callbackified","maybeCb","rej","setPrototypeOf","getPrototypeOf","defineProperties","promisify","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","custom","ReflectOwnKeys","R","Reflect","ReflectApply","target","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","isNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","newListener","w","emitter","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","copy","spliceOne","list","eventListener","errorListener","RangeError","setMaxListeners","getMaxListeners","doError","er","context","handler","position","originalListener","rawListeners","eventNames","pna","WriteReq","chunk","encoding","next","CorkedRequest","_this","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","internalUtil","Stream","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","floor","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","write","_write","writev","_writev","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","current","hasInstance","object","pipe","cork","uncork","setDefaultEncoding","toLowerCase","_undestroy","undestroy","propIsEnumerable","propertyIsEnumerable","toObject","shouldUseNative","test1","test2","order2","test3","letter","to","ChunkStream","_buffers","_buffered","_reads","_paused","_encoding","allowLess","_process","dataBuffer","_end","destroySoon","_processReadAllowingLess","smallerBuf","_processRead","pos","alloc","splice","ex","imagePasses","getImagePasses","images","xLeftOver","yLeftOver","xRepeats","yRepeats","pass","passWidth","passHeight","j","getInterlaceIterator","outerXLeftOver","outerX","outerYLeftOver","left","above","upLeft","paeth","pLeft","pAbove","pUpLeft","interlaceUtils","paethPredictor","getByteWidth","byteWidth","ceil","Filter","bitmapInfo","dependencies","interlace","complete","_imageIndex","_images","passes","lineIndex","_xComparison","_reverseFilterLine","_unFilterType1","rawData","unfilteredLine","xComparison","xBiggerThan","rawByte","f1Left","_unFilterType2","lastLine","_lastLine","f2Up","_unFilterType3","f3Up","f3Left","f3Add","_unFilterType4","f4Up","f4Left","f4UpLeft","f4Add","filter","currentImage","FilterAsync","buffers","_filter","PNG_SIGNATURE","TYPE_IHDR","TYPE_IEND","TYPE_IDAT","TYPE_PLTE","TYPE_tRNS","TYPE_gAMA","COLORTYPE_GRAYSCALE","COLORTYPE_PALETTE","COLORTYPE_COLOR","COLORTYPE_ALPHA","COLORTYPE_PALETTE_COLOR","COLORTYPE_COLOR_ALPHA","COLORTYPE_TO_BPP_MAP","GAMMA_DIVISION","crcTable","currentCrc","CrcCalculator","_crc","crc32","crc","constants","Parser","_options","checkCRC","_hasIHDR","_hasIEND","_emittedHeadersFinished","_palette","_colorType","_chunks","_handleIHDR","_handleIEND","_handleIDAT","_handlePLTE","_handleTRNS","_handleGAMA","metadata","gamma","transColor","palette","parsed","inflateData","simpleTransparency","headersFinished","_parseSignature","signature","_parseChunkBegin","readUInt32BE","ancillary","_skipChunk","_handleChunkEnd","_parseChunkEnd","fileCrc","readInt32BE","calcCrc","_parseIHDR","colorType","compr","color","alpha","_parsePLTE","entries","_parseTRNS","readUInt16BE","_parseGAMA","_parseIDAT","leftOverLength","_parseIEND","pixelBppMapper","pxData","pxPos","rawPos","pixel","pixelBppCustomMapper","pixelData","maxBit","bitRetriever","leftOver","byte","byte8","byte7","byte6","byte5","byte4","byte3","byte2","byte1","returner","resetAfterLine","mapImage8Bit","image","getPxPos","imageWidth","imageHeight","imagePass","mapImageCustomBit","bits","dataToBitMap","pow","nonInterlacedPxPos","imageIndex","dePalette","indata","outdata","replaceTransparentColor","makeTrans","scaleDepth","maxOutSample","maxInSample","imageData","zlib","bitmapper","formatNormaliser","ParserAsync","_parser","_handleError","_handleMetaData","_handlePalette","_handleTransColor","_finished","_inflateData","_simpleTransparency","_headersFinished","_inflate","errord","_bitmapInfo","createInflate","_complete","rowSize","imageSize","chunkSize","Z_MIN_CHUNK","leftToInflate","emitError","filterWrite","metaData","_metaData","filteredData","normalisedBitmapData","bitmapData","dataIn","outHasAlpha","inputColorType","bigEndian","DataView","setInt16","bitDepth","maxValue","inBpp","inputHasAlpha","outBpp","outData","inIndex","outIndex","bgColor","getRGBA","red","green","blue","rgba","writeUInt16BE","grayscale","filterNone","filterSumNone","sum","filterSub","filterSumSub","filterUp","up","filterSumUp","filterAvg","filterSumAvg","filterPaeth","upleft","filterSumPaeth","filters","filterSums","filterTypes","filterType","sel","CrcStream","bitPacker","Packer","deflateChunkSize","deflateLevel","deflateStrategy","deflateFactory","createDeflate","getDeflateOptions","level","strategy","filterData","packedData","_packChunk","writeUInt32BE","writeInt32BE","packGAMA","packIHDR","packIDAT","packIEND","PackerAsync","opt","_packer","_deflate","readable","pack","compressedData","ok","kMaxLength","Inflate","_offset","_outOffset","_buffer","_outBuffer","maxLength","_maxLength","_close","engine","_handle","close","zlibBufferSync","flushFlag","_finishFlushFlag","Z_FINISH","_processChunk","inflateSync","asyncCb","res","availInBefore","availOutBefore","_chunkSize","inOff","nread","handleChunk","availInAfter","availOutAfter","_hadError","have","allocUnsafe","writeSync","_writeState","SyncReader","inBuffer","outBuffers","reader","bufferPart","hasSyncZlib","deflateSync","FilterSync","inflateDataList","handleError","_err_","handleMetaData","_metaData_","handleGamma","_gamma_","handlePalette","handleTransColor","handleInflateData","inflatedData","handleSimpleTransparency","unfilteredData","packer","chunks","png","PNGSync","PNG","fill","_handleClose","_metadata","_gamma","onParsed","onError","parsedData","bitblt","dst","srcX","srcY","deltaX","deltaY","adjustGamma","sample","set_byte_depth","count_bits","align4","set_depth","unsigned_bits","signed_bits","balign4","buf_aligned","prefilter","l_idx","p","bFromA16","writeUInt16LE","bFromA32","writeUInt32LE","long_dump","col","indent","hex","repeat","utils","normal_color","outside_color","files","minX","maxX","minY","maxY","r","k","full_info","useColors","__nwjs","userAgent","documentElement","WebkitAppearance","firebug","exception","table","parseInt","$1","formatArgs","namespace","humanize","diff","lastC","save","namespaces","storage","setItem","removeItem","load","getItem","localstorage","localStorage","formatters","debug","O_SIZE","O_LABEL","O_VERSION","O_TABLES","O_FONT_SIZE","O_ASCENT","O_DESCENT","O_TYPO_ASCENT","O_TYPO_DESCENT","O_TYPO_LINE_GAP","O_MIN_Y","O_MAX_Y","O_DEF_ADVANCE_WIDTH","O_KERNING_SCALE","O_INDEX_TO_LOC_FORMAT","O_GLYPH_ID_FORMAT","O_ADVANCE_WIDTH_FORMAT","O_BITS_PER_PIXEL","O_XY_BITS","O_WH_BITS","O_ADVANCE_WIDTH_BITS","O_COMPRESSION_ID","O_SUBPIXELS_MODE","O_TMP_RESERVED1","O_UNDERLINE_POSITION","O_UNDERLINE_THICKNESS","HEAD_LENGTH","Head","label","toBin","tables_count","hasKerning","writeInt16LE","monospaced","widthToInt","kerningScale","writeUInt8","indexToLocFormat","glyphIdFormat","advanceWidthFormat","xy_bits","wh_bits","advanceWidthBits","glyf","getCompressionCode","subpixels_mode","estimate_format0_tiny_size","estimate_format0_size","start_code","end_code","estimate_sparse_size","estimate_sparse_tiny_size","all_codepoints","min_paths","dist","prev_dist","build_subtables","O_COUNT","SUB_FORMAT_0","SUB_FORMAT_0_TINY","SUB_FORMAT_SPARSE","SUB_FORMAT_SPARSE_TINY","Cmap","sub_heads","sub_data","compiled","compile","subtables_plan","count_format0","count_sparse","codepoints","glyphByCode","start_glyph_id","glyph_id","min_code","max_code","entries_count","format_code","create_format0_data","create_sparse_tiny_data","create_sparse_data","createSubHeader","subHeaderUpdateAllOffsets","rangeStart","rangeLen","glyphIdOffset","total","subHeaderUpdateOffset","header","h","collect_format0_data","id_delta","collect_sparse_data","codepoints_list","ids_list","code_delta","ids","count_same","same","bitStream","RLE_MAX_REPEATS","writeBits","RLE_BIT_COLLAPSED_COUNT","BitStream","compress","Glyf","binData","pixelsToBpp","compileGlyph","bs","storePixels","byteIndex","storePixelsRaw","storePixelsCompressed","no_prefilter","flatten","getSize","getOffset","no_compress","Loca","offsets","last_id","O_FORMAT","Kern","format3_forced","sortBy","kernSorted","isEmpty","paired","glyph_id2","kerned_glyphs","kerning_list_max","subheader","pairs_buf","values_buf","writeInt8","kernToFP","collect_format3_data","left_kernings","right_kernings","build_classes","kernings","classes","left_classes","right_classes","kern_class_mapping","members","left_mapping","right_mapping","kern_class_values","left_class","right_class","create_format3_data","should_use_format3","format0_data","format3_data","fast_kerning","Font","fontData","cloneDeep","createIDs","init_tables","kerningMax","head","cmap","loca","kern","LvHead","kern_ref","scale","dsc","toLVGL","subpixels","readUInt32LE","font_name","trim","LvCmap","lv_compiled","lv_subtables","lv_format2enum","lv_compile","has_charcodes","has_ids","defs","u_list","LvGlyf","lv_data","lv_bitmap","glyph_bitmap","bin","to_lv_bitmaps","txt","to_lv_glyph_dsc","adv_w","LvKern","to_lv_format0","kern_pairs","to_lv_format3","LvFont","ext","extname","basename","guard_name","lv_include","collect_font_data","writers","dump","lvgl","font_data","formats","convert","FileSaver","handleFiles","fileList","$fontControls","$","closest","file","FileReader","readAsArrayBuffer","addFontFileChangeHandlers","resetInput","$e","wrap","reset","addFont","$clone","clone","find","insertBefore","addClass","click","parent","remove","querySelector","addEventListener","preventDefault","_name","getElementById","_size","_bpp","fcnt","r_str","syms","fonts","each","el","selectedFile","r_sub","checked","blob","Blob","saveAs","alert"],"mappings":"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QACA,MAAA,QACA,KAAA,QACA,KAAA,KACA,MAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,UACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,SACA,KAAA,MACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,MACA,KAAA,SACA,KAAA,MACA,KAAA,KACA,KAAA,aACA,KAAA,KACA,KAAA,aACA,KAAA,UACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,MAAA,QACA,MAAA,QACA,MAAA,QACA,KAAA,QACA,KAAA,QACA,KAAA,QACA,MAAA,QACA,MAAA,QACA,KAAA,QACA,MAAA,QACA,KAAA,QACA,MAAA,QACA,KAAA,QACA,MAAA,QACA,MAAA,QACA,MAAA,QASA,KAAA,KACA,KAAA,KAEA,MAAA,QACA,MAAA,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AK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,O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K,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG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","file":"web.47e1845a.js","sourceRoot":"../web","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// opentype.js\n// https://github.com/opentypejs/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\nimport 'string.prototype.codepointat';\nimport inflate from 'tiny-inflate';\nimport Font from './font';\nimport Glyph from './glyph';\nimport { CmapEncoding, GlyphNames, addGlyphNames } from './encoding';\nimport parse from './parse';\nimport BoundingBox from './bbox';\nimport Path from './path';\nimport { nodeBufferToArrayBuffer } from './util';\nimport cmap from './tables/cmap';\nimport cff from './tables/cff';\nimport fvar from './tables/fvar';\nimport glyf from './tables/glyf';\nimport gpos from './tables/gpos';\nimport gsub from './tables/gsub';\nimport head from './tables/head';\nimport hhea from './tables/hhea';\nimport hmtx from './tables/hmtx';\nimport kern from './tables/kern';\nimport ltag from './tables/ltag';\nimport loca from './tables/loca';\nimport maxp from './tables/maxp';\nimport _name from './tables/name';\nimport os2 from './tables/os2';\nimport post from './tables/post';\nimport meta from './tables/meta';\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// File loaders /////////////////////////////////////////////////////////\n/**\n * Loads a font from a file. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} path - The path of the file\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromFile(path, callback) {\n    const fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, nodeBufferToArrayBuffer(buffer));\n    });\n}\n/**\n * Loads a font from a URL. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} url - The URL of the font file.\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromUrl(url, callback) {\n    const request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.response) {\n            return callback(null, request.response);\n        } else {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n    };\n\n    request.onerror = function () {\n        callback('Font could not be loaded');\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 12;\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const checksum = parse.getULong(data, p + 4);\n        const offset = parse.getULong(data, p + 8);\n        const length = parse.getULong(data, p + 12);\n        tableEntries.push({tag: tag, checksum: checksum, offset: offset, length: length, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 44; // offset to the first table directory entry.\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const offset = parse.getULong(data, p + 4);\n        const compLength = parse.getULong(data, p + 8);\n        const origLength = parse.getULong(data, p + 12);\n        let compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, length: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        const inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        const outBuffer = new Uint8Array(tableEntry.length);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        const view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @param  {Object} opt - options for parsing\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer, opt) {\n    opt = (opt === undefined || opt === null) ?  {} : opt;\n\n    let indexToLocFormat;\n    let ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    const font = new Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    const data = new DataView(buffer, 0);\n    let numTables;\n    let tableEntries = [];\n    const signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0) || signature === 'true' || signature === 'typ1') {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        const flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    let cffTableEntry;\n    let fvarTableEntry;\n    let glyfTableEntry;\n    let gposTableEntry;\n    let gsubTableEntry;\n    let hmtxTableEntry;\n    let kernTableEntry;\n    let locaTableEntry;\n    let nameTableEntry;\n    let metaTableEntry;\n    let p;\n\n    for (let i = 0; i < numTables; i += 1) {\n        const tableEntry = tableEntries[i];\n        let table;\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameTableEntry = tableEntry;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                font.glyphNames = new GlyphNames(font.tables.post);\n                break;\n            case 'prep' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    const nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        const shortVersion = indexToLocFormat === 0;\n        const locaTable = uncompressTable(data, locaTableEntry);\n        const locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        const glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font, opt);\n    } else if (cffTableEntry) {\n        const cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font, opt);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    const hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(font, hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs, opt);\n    addGlyphNames(font, opt);\n\n    if (kernTableEntry) {\n        const kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        const gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        const gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        const fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    if (metaTableEntry) {\n        const metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\n/**\n * Asynchronously load the font from a URL or a filesystem. When done, call the callback\n * with two arguments `(err, font)`. The `err` will be null on success,\n * the `font` is a Font object.\n * We use the node.js callback convention so that\n * opentype.js can integrate with frameworks like async.js.\n * @alias opentype.load\n * @param  {string} url - The URL of the font to load.\n * @param  {Function} callback - The callback.\n */\nfunction load(url, callback, opt) {\n    const isNode = typeof window === 'undefined';\n    const loadFn = isNode ? loadFromFile : loadFromUrl;\n\n    return new Promise((resolve, reject) => {\n        loadFn(url, function(err, arrayBuffer) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                } else {\n                    reject(err);\n                }\n            }\n            let font;\n            try {\n                font = parseBuffer(arrayBuffer, opt);\n            } catch (e) {\n                if (callback) {\n                    return callback(e, null);\n                } else {\n                    reject(e);\n                }\n            }\n            if (callback) {\n                return callback(null, font);\n            } else {\n                resolve(font);\n            }\n        });\n    });\n}\n\n/**\n * Synchronously load the font from a URL or file.\n * When done, returns the font object or throws an error.\n * @alias opentype.loadSync\n * @param  {string} url - The URL of the font to load.\n * @param  {Object} opt - opt.lowMemory\n * @return {opentype.Font}\n */\nfunction loadSync(url, opt) {\n    const fs = require('fs');\n    const buffer = fs.readFileSync(url);\n    return parseBuffer(nodeBufferToArrayBuffer(buffer), opt);\n}\n\nexport {\n    Font,\n    Glyph,\n    Path,\n    BoundingBox,\n    parse as _parse,\n    parseBuffer as parse,\n    load,\n    loadSync\n};\n","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","// The Bounding Box object\n\nfunction derive(v0, v1, v2, v3, t) {\n    return Math.pow(1 - t, 3) * v0 +\n        3 * Math.pow(1 - t, 2) * t * v1 +\n        3 * (1 - t) * Math.pow(t, 2) * v2 +\n        Math.pow(t, 3) * v3;\n}\n/**\n * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.\n * It is used to calculate the bounding box of a glyph or text path.\n *\n * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.\n *\n * @exports opentype.BoundingBox\n * @class\n * @constructor\n */\nfunction BoundingBox() {\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n}\n\n/**\n * Returns true if the bounding box is empty, that is, no points have been added to the box yet.\n */\nBoundingBox.prototype.isEmpty = function() {\n    return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);\n};\n\n/**\n * Add the point to the bounding box.\n * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.\n * @param {number} x - The X coordinate of the point.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addPoint = function(x, y) {\n    if (typeof x === 'number') {\n        if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n        }\n        if (x < this.x1) {\n            this.x1 = x;\n        }\n        if (x > this.x2) {\n            this.x2 = x;\n        }\n    }\n    if (typeof y === 'number') {\n        if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n        }\n        if (y < this.y1) {\n            this.y1 = y;\n        }\n        if (y > this.y2) {\n            this.y2 = y;\n        }\n    }\n};\n\n/**\n * Add a X coordinate to the bounding box.\n * This extends the bounding box to include the X coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} x - The X coordinate of the point.\n */\nBoundingBox.prototype.addX = function(x) {\n    this.addPoint(x, null);\n};\n\n/**\n * Add a Y coordinate to the bounding box.\n * This extends the bounding box to include the Y coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addY = function(y) {\n    this.addPoint(null, y);\n};\n\n/**\n * Add a Bézier curve to the bounding box.\n * This extends the bounding box to include the entire Bézier.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the first control point.\n * @param {number} y1 - The Y coordinate of the first control point.\n * @param {number} x2 - The X coordinate of the second control point.\n * @param {number} y2 - The Y coordinate of the second control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {\n    // This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // and https://github.com/icons8/svg-path-bounding-box\n\n    const p0 = [x0, y0];\n    const p1 = [x1, y1];\n    const p2 = [x2, y2];\n    const p3 = [x, y];\n\n    this.addPoint(x0, y0);\n    this.addPoint(x, y);\n\n    for (let i = 0; i <= 1; i++) {\n        const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n        const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n        const c = 3 * p1[i] - 3 * p0[i];\n\n        if (a === 0) {\n            if (b === 0) continue;\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));\n                if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));\n            }\n            continue;\n        }\n\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) continue;\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));\n        }\n    }\n};\n\n/**\n * Add a quadratic curve to the bounding box.\n * This extends the bounding box to include the entire quadratic curve.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the control point.\n * @param {number} y1 - The Y coordinate of the control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {\n    const cp1x = x0 + 2 / 3 * (x1 - x0);\n    const cp1y = y0 + 2 / 3 * (y1 - y0);\n    const cp2x = cp1x + 1 / 3 * (x - x0);\n    const cp2y = cp1y + 1 / 3 * (y - y0);\n    this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);\n};\n\nexport default BoundingBox;\n","// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n","// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n","// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\nimport check from './check';\n\nconst LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nconst LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nconst decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nconst encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nconst sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    let value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    const m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        const epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    let nibbles = '';\n    for (let i = 0, ii = value.length; i < ii; i += 1) {\n        const c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    const out = [30];\n    for (let i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes;\n    for (let j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes / 2;\n    for (let j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        const codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nconst eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    const table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    let result = '';\n    for (let i = 0; i < dataLength; i++) {\n        const c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nconst macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nlet macEncodingCacheKeys;\nconst getMacEncodingTable = function (encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (let e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    const cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        const cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    const decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    const encodingTable = {};\n    for (let i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    const table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    const b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Helper for encode.VARDELTAS\nfunction isByteEncodable(value) {\n    return value >= -128 && value <= 127;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsZeroes(deltas, pos, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x80 | (runLength - 1));\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsBytes(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n        if (!isByteEncodable(value)) {\n            break;\n        }\n\n        // Within a byte-encoded run of deltas, a single zero is best\n        // stored literally as 0x00 value. However, if we have two or\n        // more zeroes in a sequence, it is better to start a new run.\n        // Fore example, the sequence of deltas [15, 15, 0, 15, 15]\n        // becomes 6 bytes (04 0F 0F 00 0F 0F) when storing the zero\n        // within the current run, but 7 bytes (01 0F 0F 80 01 0F 0F)\n        // when starting a new run.\n        if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(runLength - 1);\n    for (let i = offset; i < pos; ++i) {\n        result.push((deltas[i] + 256) & 0xff);\n    }\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsWords(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n\n        // Within a word-encoded run of deltas, it is easiest to start\n        // a new run (with a different encoding) whenever we encounter\n        // a zero value. For example, the sequence [0x6666, 0, 0x7777]\n        // needs 7 bytes when storing the zero inside the current run\n        // (42 66 66 00 00 77 77), and equally 7 bytes when starting a\n        // new run (40 66 66 80 40 77 77).\n        if (value === 0) {\n            break;\n        }\n\n        // Within a word-encoded run of deltas, a single value in the\n        // range (-128..127) should be encoded within the current run\n        // because it is more compact. For example, the sequence\n        // [0x6666, 2, 0x7777] becomes 7 bytes when storing the value\n        // literally (42 66 66 00 02 77 77), but 8 bytes when starting\n        // a new run (40 66 66 00 02 40 77 77).\n        if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x40 | (runLength - 1));\n    for (let i = offset; i < pos; ++i) {\n        const val = deltas[i];\n        result.push(((val + 0x10000) >> 8) & 0xff, (val + 0x100) & 0xff);\n    }\n    return pos;\n}\n\n/**\n * Encode a list of variation adjustment deltas.\n *\n * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.\n * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted\n * when generating instances of variation fonts.\n *\n * @see https://www.microsoft.com/typography/otspec/gvar.htm\n * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html\n * @param {Array}\n * @return {Array}\n */\nencode.VARDELTAS = function(deltas) {\n    let pos = 0;\n    const result = [];\n    while (pos < deltas.length) {\n        const value = deltas[pos];\n        if (value === 0) {\n            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);\n        } else if (value >= -128 && value <= 127) {\n            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);\n        } else {\n            pos = encodeVarDeltaRunAsWords(deltas, pos, result);\n        }\n    }\n    return result;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offsets, then again to encode the offsets using the fitting data type.\n    let offset = 1; // First offset is always 1.\n    const offsets = [offset];\n    const data = [];\n    for (let i = 0; i < l.length; i += 1) {\n        const v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    const encodedOffsets = [];\n    const offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    const offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (let i = 0; i < offsets.length; i += 1) {\n        const encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    let d = [];\n    const keys = Object.keys(m);\n    const length = keys.length;\n\n    for (let i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        const k = parseInt(keys[i], 0);\n        const v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    let d = [];\n    if (Array.isArray(type)) {\n        for (let i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nconst wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        const cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    let d = [];\n    const length = ops.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    const encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    const sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    let d = [];\n    const length = table.fields.length;\n    const subtables = [];\n    const subtableOffsets = [];\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        const bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (let i = 0; i < subtables.length; i += 1) {\n        const o = subtableOffsets[i];\n        const offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    let numBytes = 0;\n    const length = table.fields.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexport { decode, encode, sizeOf };\n","// Table metadata\n\nimport check from './check';\nimport { encode, sizeOf } from './types';\n\n/**\n * @exports opentype.Table\n * @class\n * @param {string} tableName\n * @param {Array} fields\n * @param {Object} options\n * @constructor\n */\nfunction Table(tableName, fields, options) {\n    for (let i = 0; i < fields.length; i += 1) {\n        const field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        const optionKeys = Object.keys(options);\n        for (let i = 0; i < optionKeys.length; i += 1) {\n            const k = optionKeys[i];\n            const v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\n/**\n * Encodes the table and returns an array of bytes\n * @return {Array}\n */\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\n/**\n * Get the size of the table.\n * @return {number}\n */\nTable.prototype.sizeOf = function() {\n    return sizeOf.TABLE(this);\n};\n\n/**\n * @private\n */\nfunction ushortList(itemName, list, count) {\n    if (count === undefined) {\n        count = list.length;\n    }\n    const fields = new Array(list.length + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < list.length; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'USHORT', value: list[i]};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction tableList(itemName, records, itemCallback) {\n    const count = records.length;\n    const fields = new Array(count + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'TABLE', value: itemCallback(records[i], i)};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction recordList(itemName, records, itemCallback) {\n    const count = records.length;\n    let fields = [];\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields = fields.concat(itemCallback(records[i], i));\n    }\n    return fields;\n}\n\n// Common Layout Tables\n\n/**\n * @exports opentype.Coverage\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction Coverage(coverageTable) {\n    if (coverageTable.format === 1) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 1}]\n            .concat(ushortList('glyph', coverageTable.glyphs))\n        );\n    } else {\n        check.assert(false, 'Can\\'t create coverage table format 2 yet.');\n    }\n}\nCoverage.prototype = Object.create(Table.prototype);\nCoverage.prototype.constructor = Coverage;\n\nfunction ScriptList(scriptListTable) {\n    Table.call(this, 'scriptListTable',\n        recordList('scriptRecord', scriptListTable, function(scriptRecord, i) {\n            const script = scriptRecord.script;\n            let defaultLangSys = script.defaultLangSys;\n            check.assert(!!defaultLangSys, 'Unable to write GSUB: script ' + scriptRecord.tag + ' has no default language system.');\n            return [\n                {name: 'scriptTag' + i, type: 'TAG', value: scriptRecord.tag},\n                {name: 'script' + i, type: 'TABLE', value: new Table('scriptTable', [\n                    {name: 'defaultLangSys', type: 'TABLE', value: new Table('defaultLangSys', [\n                        {name: 'lookupOrder', type: 'USHORT', value: 0},\n                        {name: 'reqFeatureIndex', type: 'USHORT', value: defaultLangSys.reqFeatureIndex}]\n                        .concat(ushortList('featureIndex', defaultLangSys.featureIndexes)))}\n                    ].concat(recordList('langSys', script.langSysRecords, function(langSysRecord, i) {\n                        const langSys = langSysRecord.langSys;\n                        return [\n                            {name: 'langSysTag' + i, type: 'TAG', value: langSysRecord.tag},\n                            {name: 'langSys' + i, type: 'TABLE', value: new Table('langSys', [\n                                {name: 'lookupOrder', type: 'USHORT', value: 0},\n                                {name: 'reqFeatureIndex', type: 'USHORT', value: langSys.reqFeatureIndex}\n                                ].concat(ushortList('featureIndex', langSys.featureIndexes)))}\n                        ];\n                    })))}\n            ];\n        })\n    );\n}\nScriptList.prototype = Object.create(Table.prototype);\nScriptList.prototype.constructor = ScriptList;\n\n/**\n * @exports opentype.FeatureList\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction FeatureList(featureListTable) {\n    Table.call(this, 'featureListTable',\n        recordList('featureRecord', featureListTable, function(featureRecord, i) {\n            const feature = featureRecord.feature;\n            return [\n                {name: 'featureTag' + i, type: 'TAG', value: featureRecord.tag},\n                {name: 'feature' + i, type: 'TABLE', value: new Table('featureTable', [\n                    {name: 'featureParams', type: 'USHORT', value: feature.featureParams},\n                    ].concat(ushortList('lookupListIndex', feature.lookupListIndexes)))}\n            ];\n        })\n    );\n}\nFeatureList.prototype = Object.create(Table.prototype);\nFeatureList.prototype.constructor = FeatureList;\n\n/**\n * @exports opentype.LookupList\n * @class\n * @param {opentype.Table}\n * @param {Object}\n * @constructor\n * @extends opentype.Table\n */\nfunction LookupList(lookupListTable, subtableMakers) {\n    Table.call(this, 'lookupListTable', tableList('lookup', lookupListTable, function(lookupTable) {\n        let subtableCallback = subtableMakers[lookupTable.lookupType];\n        check.assert(!!subtableCallback, 'Unable to write GSUB lookup type ' + lookupTable.lookupType + ' tables.');\n        return new Table('lookupTable', [\n            {name: 'lookupType', type: 'USHORT', value: lookupTable.lookupType},\n            {name: 'lookupFlag', type: 'USHORT', value: lookupTable.lookupFlag}\n        ].concat(tableList('subtable', lookupTable.subtables, subtableCallback)));\n    }));\n}\nLookupList.prototype = Object.create(Table.prototype);\nLookupList.prototype.constructor = LookupList;\n\n// Record = same as Table, but inlined (a Table has an offset and its data is further in the stream)\n// Don't use offsets inside Records (probable bug), only in Tables.\nexport default {\n    Table,\n    Record: Table,\n    Coverage,\n    ScriptList,\n    FeatureList,\n    LookupList,\n    ushortList,\n    tableList,\n    recordList,\n};\n","// Parsing utility functions\n\nimport check from './check';\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    const decimal = dataView.getInt16(offset, false);\n    const fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    let tag = '';\n    for (let i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    let v = 0;\n    for (let i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    const bytes = [];\n    for (let i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    let s = '';\n    for (let i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nconst typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    const v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    const v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    const v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    const v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    const v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    const dataView = this.data;\n    const offset = this.offset + this.relativeOffset;\n    let string = '';\n    this.relativeOffset += length;\n    for (let i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    let v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    const major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    const minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) minorBase = 0x1000;\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        const fields = Object.keys(description);\n        const struct = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    const valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    const valueFormat = this.parseUShort();\n    const valueCount = this.parseUShort();\n    const values = new Array(valueCount);\n    for (let i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    const structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    const structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    const offsets = this.parseOffset16List();\n    const count = offsets.length;\n    const relativeOffset = this.relativeOffset;\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            const subOffsets = this.parseOffset16List();\n            const subList = new Array(subOffsets.length);\n            for (let j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    const count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        const ranges = new Array(count);\n        for (let i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nconst langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        const lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        const lookupFlag = this.parseUShort();\n        const useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        const majorVersion = this.parseUShort();\n        const minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        const featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nexport default {\n    getByte,\n    getCard8: getByte,\n    getUShort,\n    getCard16: getUShort,\n    getShort,\n    getULong,\n    getFixed,\n    getTag,\n    getOffset,\n    getBytes,\n    bytesToString,\n    Parser,\n};\n\nexport { Parser };\n","// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    let groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (let i = 0; i < groupCount; i += 1) {\n        const startCharCode = p.parseULong();\n        const endCharCode = p.parseULong();\n        let startGlyphId = p.parseULong();\n\n        for (let c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    let segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    const endCountParser = new parse.Parser(data, start + offset + 14);\n    const startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    const idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    const idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    let glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (let i = 0; i < segCount - 1; i += 1) {\n        let glyphIndex;\n        const endCount = endCountParser.parseUShort();\n        const startCount = startCountParser.parseUShort();\n        const idDelta = idDeltaParser.parseShort();\n        const idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (let c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    const cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    let offset = -1;\n    for (let i = cmap.numTables - 1; i >= 0; i -= 1) {\n        const platformId = parse.getUShort(data, start + 4 + (i * 8));\n        const encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if ((platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4))) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    const p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error('Only format 4 and 12 cmap tables are supported (found format ' + cmap.format + ').');\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0,\n        glyphIndex: glyphIndex\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\n// Make cmap table, format 4 by default, 12 if needed only\nfunction makeCmapTable(glyphs) {\n    // Plan 0 is the base Unicode Plan but emojis, for example are on another plan, and needs cmap 12 format (with 32bit)\n    let isPlan0Only = true;\n    let i;\n\n    // Check if we need to add cmap format 12 or if format 4 only is fine\n    for (i = glyphs.length - 1; i > 0; i -= 1) {\n        const g = glyphs.get(i);\n        if (g.unicode > 65535) {\n            console.log('Adding CMAP format 12 (needed!)');\n            isPlan0Only = false;\n            break;\n        }\n    }\n\n    let cmapTable = [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: isPlan0Only ? 1 : 2},\n\n        // CMAP 4 header\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: isPlan0Only ? 12 : (12 + 8)}\n    ];\n\n    if (!isPlan0Only)\n        cmapTable = cmapTable.concat([\n            // CMAP 12 header\n            {name: 'cmap12PlatformID', type: 'USHORT', value: 3}, // We encode only for PlatformID = 3 (Windows) because it is supported everywhere\n            {name: 'cmap12EncodingID', type: 'USHORT', value: 10},\n            {name: 'cmap12Offset', type: 'ULONG', value: 0}\n        ]);\n\n    cmapTable = cmapTable.concat([\n        // CMAP 4 Subtable\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'cmap4Length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    const t = new table.Table('cmap', cmapTable);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        for (let j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function (a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    const segCount = t.segments.length;\n    let segCountToRemove = 0;\n\n    // CMAP 4\n    // Set up parallel segment arrays.\n    let endCounts = [];\n    let startCounts = [];\n    let idDeltas = [];\n    let idRangeOffsets = [];\n    let glyphIds = [];\n\n    // CMAP 12\n    let cmap12Groups = [];\n\n    // Reminder this loop is not following the specification at 100%\n    // The specification -> find suites of characters and make a group\n    // Here we're doing one group for each letter\n    // Doing as the spec can save 8 times (or more) space\n    for (i = 0; i < segCount; i += 1) {\n        const segment = t.segments[i];\n\n        // CMAP 4\n        if (segment.end <= 65535 && segment.start <= 65535) {\n            endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n            startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n            idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n            idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n            if (segment.glyphId !== undefined) {\n                glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n            }\n        } else {\n            // Skip Unicode > 65535 (16bit unsigned max) for CMAP 4, will be added in CMAP 12\n            segCountToRemove += 1;\n        }\n\n        // CMAP 12\n        // Skip Terminator Segment\n        if (!isPlan0Only && segment.glyphIndex !== undefined) {\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Start_' + i, type: 'ULONG', value: segment.start});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12End_' + i, type: 'ULONG', value: segment.end});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Glyph_' + i, type: 'ULONG', value: segment.glyphIndex});\n        }\n    }\n\n    // CMAP 4 Subtable\n    t.segCountX2 = (segCount - segCountToRemove) * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log((segCount - segCountToRemove)) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.cmap4Length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    if (!isPlan0Only) {\n        // CMAP 12 Subtable\n        const cmap12Length = 16 + // Subtable header\n            cmap12Groups.length * 4;\n\n        t.cmap12Offset = 12 + (2 * 2) + 4 + t.cmap4Length;\n        t.fields = t.fields.concat([\n            {name: 'cmap12Format', type: 'USHORT', value: 12},\n            {name: 'cmap12Reserved', type: 'USHORT', value: 0},\n            {name: 'cmap12Length', type: 'ULONG', value: cmap12Length},\n            {name: 'cmap12Language', type: 'ULONG', value: 0},\n            {name: 'cmap12nGroups', type: 'ULONG', value: cmap12Groups.length / 3}\n        ]);\n\n        t.fields = t.fields.concat(cmap12Groups);\n    }\n\n    return t;\n}\n\nexport default { parse: parseCmapTable, make: makeCmapTable };\n","// Glyph encoding\n\nconst cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nconst cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nconst cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nconst standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    const code = c.codePointAt(0);\n    const glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (let i = 0; i < glyphs.length; i += 1) {\n            const glyph = glyphs.get(i);\n            for (let j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    const code = s.codePointAt(0);\n    const charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\n/**\n * @exports opentype.GlyphNames\n * @class\n * @constructor\n * @param {Object} post\n */\nfunction GlyphNames(post) {\n    switch (post.version) {\n        case 1:\n            this.names = standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < standardNames.length) {\n                    this.names[i] = standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        default:\n            this.names = [];\n            break;\n    }\n}\n\n/**\n * Gets the index of a glyph by name.\n * @param  {string} name - The glyph name\n * @return {number} The index\n */\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\n/**\n * @param  {number} gid\n * @return {string}\n */\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNamesAll(font) {\n    let glyph;\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        const glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            if (font.isCIDFont) {\n                glyph.name = 'gid' + i;\n            } else {\n                glyph.name = font.cffEncoding.charset[i];\n            }\n        } else if (font.glyphNames.names) {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nfunction addGlyphNamesToUnicodeMap(font) {\n    font._IndexToUnicodeMap = {};\n\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        let glyphIndex = glyphIndexMap[c];\n        if (font._IndexToUnicodeMap[glyphIndex] === undefined) {\n            font._IndexToUnicodeMap[glyphIndex] = {\n                unicodes: [parseInt(c)]\n            };\n        } else {\n            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));\n        }\n    }\n}\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n * @param {Object}\n */\nfunction addGlyphNames(font, opt) {\n    if (opt.lowMemory) {\n        addGlyphNamesToUnicodeMap(font);\n    } else {\n        addGlyphNamesAll(font);\n    }\n}\n\nexport {\n    cffStandardStrings,\n    cffStandardEncoding,\n    cffExpertEncoding,\n    standardNames,\n    DefaultEncoding,\n    CmapEncoding,\n    CffEncoding,\n    GlyphNames,\n    addGlyphNames\n};\n","// Drawing utility functions.\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport default { line };\n","// The Glyph object\n\nimport check from './check';\nimport draw from './draw';\nimport Path from './path';\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    let _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if ('xMin' in options) {\n        this.xMin = options.xMin;\n    }\n\n    if ('yMin' in options) {\n        this.yMin = options.yMin;\n    }\n\n    if ('xMax' in options) {\n        this.xMax = options.xMax;\n    }\n\n    if ('yMax' in options) {\n        this.yMax = options.yMax;\n    }\n\n    if ('advanceWidth' in options) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n/**\n * Calculate the minimum bounding box for this glyph.\n * @return {opentype.BoundingBox}\n */\nGlyph.prototype.getBoundingBox = function() {\n    return this.path.getBoundingBox();\n};\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function(x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    let commands;\n    let hPoints;\n    if (!options) options = { };\n    let xScale = options.xScale;\n    let yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        const scale = 1 / (this.path.unitsPerEm || 1000) * fontSize;\n        if (xScale === undefined) xScale = scale;\n        if (yScale === undefined) yScale = scale;\n    }\n\n    const p = new Path();\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                               x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                      x + (cmd.x2 * xScale), y + (-cmd.y2 * yScale),\n                      x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < this.points.length; i += 1) {\n        const pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function() {\n    const commands = this.path.commands;\n    const xCoords = [];\n    const yCoords = [];\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    const metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n/**\n * Draw the glyph on the given context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n */\nGlyph.prototype.draw = function(ctx, x, y, fontSize, options) {\n    this.getPath(x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of the glyph.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n    function drawCircles(l, x, y, scale) {\n        ctx.beginPath();\n        for (let j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, Math.PI * 2, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    const scale = 1 / this.path.unitsPerEm * fontSize;\n\n    const blueCircles = [];\n    const redCircles = [];\n    const path = this.path;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        const cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n/**\n * Draw lines indicating important font measurements.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    let scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    const xMin = this.xMin || 0;\n    let yMin = this.yMin || 0;\n    const xMax = this.xMax || 0;\n    let yMax = this.yMax || 0;\n    const advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexport default Glyph;\n","// The GlyphSet object\n\nimport Glyph from './glyph';\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (let i = 0; i < glyphs.length; i++) {\n            const glyph = glyphs[i];\n            glyph.path.unitsPerEm = font.unitsPerEm;\n            this.glyphs[i] = glyph;\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    // this.glyphs[index] is 'undefined' when low memory mode is on. glyph is pushed on request only.\n    if (this.glyphs[index] === undefined) {\n        this.font._push(index);\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        let glyph = this.glyphs[index];\n        let unicodeObj = this.font._IndexToUnicodeMap[index];\n\n        if (unicodeObj) {\n            for (let j = 0; j < unicodeObj.unicodes.length; j++)\n                glyph.addUnicode(unicodeObj.unicodes[j]);\n        }\n\n        if (this.font.cffEncoding) {\n            if (this.font.isCIDFont) {\n                glyph.name = 'gid' + index;\n            } else {\n                glyph.name = this.font.cffEncoding.charset[index];\n            }\n        } else if (this.font.glyphNames.names) {\n            glyph.name = this.font.glyphNames.glyphIndexToName(index);\n        }\n\n        this.glyphs[index].advanceWidth = this.font._hmtxTableData[index].advanceWidth;\n        this.glyphs[index].leftSideBearing = this.font._hmtxTableData[index].leftSideBearing;\n    } else {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            const path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            const path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexport default { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };\n","// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\nimport { CffEncoding, cffStandardEncoding, cffExpertEncoding, cffStandardStrings } from '../encoding';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\nimport table from '../table';\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    let bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    const offsets = [];\n    const objects = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (let i = 0; i < offsets.length - 1; i += 1) {\n        let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\nfunction parseCFFIndexLowMemory(data, start) {\n    const offsets = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    return {offsets: offsets, startOffset: start, endOffset: endOffset};\n}\nfunction getCffIndexObject(i, offsets, data, start, conversionFn) {\n    const count = parse.getCard16(data, start);\n    let objectOffset = 0;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n    }\n\n    let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n    if (conversionFn) {\n        value = conversionFn(value);\n    }\n    return value;\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    let s = '';\n    const eof = 15;\n    const lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        const b = parser.parseByte();\n        const n1 = b >> 4;\n        const n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    let b1;\n    let b2;\n    let b3;\n    let b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    const o = {};\n    for (let i = 0; i < entries.length; i += 1) {\n        const key = entries[i][0];\n        const values = entries[i][1];\n        let value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    const parser = new parse.Parser(data, start);\n    const entries = [];\n    let operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        let op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    const newDict = {};\n    let value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (let i = 0; i < meta.length; i += 1) {\n        const m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            const values = [];\n            values.length = m.type.length;\n            for (let j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value = m.value !== undefined && m.value[j] !== undefined ? m.value[j] : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    const header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nconst TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0]\n    },\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]},\n    {name: 'ros', op: 1230, type: ['SID', 'SID', 'number']},\n    {name: 'cidFontVersion', op: 1231, type: 'number', value: 0},\n    {name: 'cidFontRevision', op: 1232, type: 'number', value: 0},\n    {name: 'cidFontType', op: 1233, type: 'number', value: 0},\n    {name: 'cidCount', op: 1234, type: 'number', value: 8720},\n    {name: 'uidBase', op: 1235, type: 'number'},\n    {name: 'fdArray', op: 1236, type: 'offset'},\n    {name: 'fdSelect', op: 1237, type: 'offset'},\n    {name: 'fontName', op: 1238, type: 'SID'}\n];\n\nconst PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    const dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    const dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    const topDictArray = [];\n    for (let iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        const topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);\n        const topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        const privateSize = topDict.private[0];\n        const privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            const privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                const subrOffset = privateOffset + privateDict.subrs;\n                const subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    let sid;\n    let count;\n    const parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    const charset = ['.notdef'];\n\n    const format = parser.parseCard8();\n    if (format === 0) {\n        for (let i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    let code;\n    const enc = {};\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        const nCodes = parser.parseCard8();\n        for (let i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        const nRanges = parser.parseCard8();\n        code = 1;\n        for (let i = 0; i < nRanges; i += 1) {\n            const first = parser.parseCard8();\n            const nLeft = parser.parseCard8();\n            for (let j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    let c1x;\n    let c1y;\n    let c2x;\n    let c2y;\n    const p = new Path();\n    const stack = [];\n    let nStems = 0;\n    let haveWidth = false;\n    let open = false;\n    let x = 0;\n    let y = 0;\n    let subrs;\n    let subrsBias;\n    let defaultWidthX;\n    let nominalWidthX;\n    if (font.isCIDFont) {\n        const fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        const fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    let width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        let hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        let b1;\n        let b2;\n        let b3;\n        let b4;\n        let codeIndex;\n        let subrCode;\n        let jpx;\n        let jpy;\n        let c3x;\n        let c3y;\n        let c4x;\n        let c4y;\n\n        let i = 0;\n        while (i < code.length) {\n            let v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x   + stack.shift();    // dx6\n                            y = c4y   + stack.shift();    // dy6\n                            stack.shift();                // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y;                      // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = y;                      // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    const fdSelect = [];\n    let fdIndex;\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (let iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        const nRanges = parser.parseCard16();\n        let first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad initial GID ' + first);\n        }\n        let next;\n        for (let iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            if (next > nGlyphs) {\n                throw new Error('CFF Table CID Font FDSelect format 3 range has bad GID ' + next);\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad final GID ' + next);\n        }\n    } else {\n        throw new Error('CFF Table CID Font FDSelect table has unsupported format ' + format);\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font, opt) {\n    font.tables.cff = {};\n    const header = parseCFFHeader(data, start);\n    const nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    const topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    const stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    const globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    const topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);\n    if (topDictArray.length !== 1) {\n        throw new Error('CFF table has too many fonts in \\'FontSet\\' - count of fonts NameIndex.length = ' + topDictArray.length);\n    }\n\n    const topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        let fdArrayOffset = topDict.fdArray;\n        let fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error('Font is marked as a CID font, but FDArray and/or FDSelect information is missing');\n        }\n        fdArrayOffset += start;\n        const fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        const fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);\n    }\n\n    const privateDictOffset = start + topDict.private[1];\n    const privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        const subrOffset = privateDictOffset + privateDict.subrs;\n        const subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    let charStringsIndex;\n    if (opt.lowMemory) {\n        charStringsIndex = parseCFFIndexLowMemory(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.offsets.length;\n    } else {\n        charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n    }\n\n    const charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    if (opt.lowMemory) {\n        font._push = function(i) {\n            const charString = getCffIndexObject(i, charStringsIndex.offsets, data, start + topDict.charStrings);\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        };\n    } else {\n        for (let i = 0; i < font.nGlyphs; i += 1) {\n            const charString = charStringsIndex.objects[i];\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        }\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    let sid;\n\n    // Is the string in the CFF standard strings?\n    let i = cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + cffStandardStrings.length;\n    } else {\n        sid = cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Record('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    const t = new table.Record('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (let i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    const m = {};\n    for (let i = 0; i < meta.length; i += 1) {\n        const entry = meta[i];\n        let value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    const t = new table.Record('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    const t = new table.Record('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    const t = new table.Record('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (let i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Record('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    const t = new table.Record('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (let i = 0; i < glyphNames.length; i += 1) {\n        const glyphName = glyphNames[i];\n        const glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    const ops = [];\n    const path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    let x = 0;\n    let y = 0;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        let dx;\n        let dy;\n        let cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            const _13 = 1 / 3;\n            const _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            const dx1 = Math.round(cmd.x1 - x);\n            const dy1 = Math.round(cmd.y1 - y);\n            const dx2 = Math.round(cmd.x2 - cmd.x1);\n            const dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    const t = new table.Record('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    const t = new table.Record('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    const t = new table.Table('CFF ', [\n        {name: 'header', type: 'RECORD'},\n        {name: 'nameIndex', type: 'RECORD'},\n        {name: 'topDictIndex', type: 'RECORD'},\n        {name: 'stringIndex', type: 'RECORD'},\n        {name: 'globalSubrIndex', type: 'RECORD'},\n        {name: 'charsets', type: 'RECORD'},\n        {name: 'charStringsIndex', type: 'RECORD'},\n        {name: 'privateDict', type: 'RECORD'}\n    ]);\n\n    const fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    const attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    const privateAttrs = {};\n\n    const glyphNames = [];\n    let glyph;\n\n    // Skip first glyph (.notdef)\n    for (let i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    const strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    let topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    const startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexport default { parse: parseCFFTable, make: makeCFFTable };\n","// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    const head = {};\n    const p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    // Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970\n    const timestamp = Math.round(new Date().getTime() / 1000) + 2082844800;\n    let createdTimestamp = timestamp;\n\n    if (options.createdTimestamp) {\n        createdTimestamp = options.createdTimestamp + 2082844800;\n    }\n\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: createdTimestamp},\n        {name: 'modified', type: 'LONGDATETIME', value: timestamp},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHeadTable, make: makeHeadTable };\n","// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n","// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        const glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {\n    font._hmtxTableData = {};\n\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        font._hmtxTableData[i] = {\n            advanceWidth: advanceWidth,\n            leftSideBearing: leftSideBearing\n        };\n    }\n}\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {\n    if (opt.lowMemory)\n        parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs);\n    else\n        parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs);\n}\n\nfunction makeHmtxTable(glyphs) {\n    const t = new table.Table('hmtx', []);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const advanceWidth = glyph.advanceWidth || 0;\n        const leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexport default { parse: parseHmtxTable, make: makeHmtxTable };\n","// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction makeLtagTable(tags) {\n    const result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    let stringPool = '';\n    const stringPoolOffset = 12 + tags.length * 4;\n    for (let i = 0; i < tags.length; ++i) {\n        let pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    const numTags = p.parseULong();\n\n    const tags = [];\n    for (let i = 0; i < numTags; i++) {\n        let tag = '';\n        const offset = start + p.parseUShort();\n        const length = p.parseUShort();\n        for (let j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexport default { make: makeLtagTable, parse: parseLtagTable };\n","// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    const maxp = {};\n    const p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexport default { parse: parseMaxpTable, make: makeMaxpTable };\n","// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\nimport { decode, encode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// NameIDs for the name table.\nconst nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nconst macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nconst windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nconst utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nconst macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    const name = {};\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    const count = p.parseUShort();\n    const stringOffset = p.offset + p.parseUShort();\n    for (let i = 0; i < count; i++) {\n        const platformID = p.parseUShort();\n        const encodingID = p.parseUShort();\n        const languageID = p.parseUShort();\n        const nameID = p.parseUShort();\n        const property = nameTableNames[nameID] || nameID;\n        const byteLength = p.parseUShort();\n        const offset = p.parseUShort();\n        const language = getLanguageCode(platformID, languageID, ltag);\n        const encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            let text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                let translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    let langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    const result = {};\n    for (let key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Record('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    const needleLength = needle.length;\n    const limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (let pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (let k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    let offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        let i = 0;\n        const len = s.length;\n        for (; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    let nameID;\n    const nameIDs = [];\n\n    const namesWithNumericKeys = {};\n    const nameTableIds = reverseDict(nameTableNames);\n    for (let key in names) {\n        let id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n\n        if (isNaN(nameID)) {\n            throw new Error('Name table entry \"' + key + '\" does not exist, see nameTableNames for complete list.');\n        }\n\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    const macLanguageIds = reverseDict(macLanguages);\n    const windowsLanguageIds = reverseDict(windowsLanguages);\n\n    const nameRecords = [];\n    const stringPool = [];\n\n    for (let i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        const translations = namesWithNumericKeys[nameID];\n        for (let lang in translations) {\n            const text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            let macPlatform = 1;  // Macintosh\n            let macLanguage = macLanguageIds[lang];\n            let macScript = macLanguageToScript[macLanguage];\n            const macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            let macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            const macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            const winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                const winName = encode.UTF16(text);\n                const winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    const t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (let r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'RECORD', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexport default { parse: parseNameTable, make: makeNameTable };\n","// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nconst unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (let i = 0; i < unicodeRanges.length; i += 1) {\n        const range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    const os2 = {};\n    const p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (let i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange };\n","// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\nimport { standardNames } from '../encoding';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    const post = {};\n    const p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n        case 1:\n            post.names = standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= standardNames.length) {\n                    const nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexport default { parse: parsePostTable, make: makePostTable };\n","// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(9);         // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nconst lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        const glyphCount = this.parseUShort();\n        const substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    const extensionLookupType = this.parseUShort();\n    const extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GSUB table version.');\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GSUB Writing //////////////////////////////////////////////\nconst subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGsubTable, make: makeGsubTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport { decode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    const numDataMaps = p.parseULong();\n\n    const tags = {};\n    for (let i = 0; i < numDataMaps; i++) {\n        const tag = p.parseTag();\n        const dataOffset = p.parseULong();\n        const dataLength = p.parseULong();\n        const text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    const numTags = Object.keys(tags).length;\n    let stringPool = '';\n    const stringPoolOffset = 16 + numTags * 12;\n\n    const result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (let tag in tags) {\n        const pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexport default { parse: parseMetaTable, make: makeMetaTable };\n","// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\nimport check from '../check';\nimport table from '../table';\n\nimport cmap from './cmap';\nimport cff from './cff';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport ltag from './ltag';\nimport maxp from './maxp';\nimport _name from './name';\nimport os2 from './os2';\nimport post from './post';\nimport gsub from './gsub';\nimport meta from './meta';\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    let sum = 0;\n    for (let i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Record('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    const sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    const highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    const recordFields = [];\n    const tableFields = [];\n\n    let offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (let i = 0; i < tables.length; i += 1) {\n        const t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        const tableLength = t.sizeOf();\n        const tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'RECORD', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'RECORD', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (let i = 0; i < chars.length; i += 1) {\n        const glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            const glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    let sum = 0;\n    for (let i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    const xMins = [];\n    const yMins = [];\n    const xMaxs = [];\n    const yMaxs = [];\n    const advanceWidths = [];\n    const leftSideBearings = [];\n    const rightSideBearings = [];\n    let firstCharIndex;\n    let lastCharIndex = 0;\n    let ulUnicodeRange1 = 0;\n    let ulUnicodeRange2 = 0;\n    let ulUnicodeRange3 = 0;\n    let ulUnicodeRange4 = 0;\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        const glyph = font.glyphs.get(i);\n        const unicode = glyph.unicode | 0;\n\n        if (isNaN(glyph.advanceWidth)) {\n            throw new Error('Glyph ' + glyph.name + ' (' + i + '): advanceWidth is not a number.');\n        }\n\n        if (firstCharIndex > unicode || firstCharIndex === undefined) {\n            // ignore .notdef char\n            if (unicode > 0) {\n                firstCharIndex = unicode;\n            }\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        const position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        const metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    const globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender;\n    globals.descender = font.descender;\n\n    const headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3,\n        createdTimestamp: font.createdTimestamp\n    });\n\n    const hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    const maxpTable = maxp.make(font.glyphs.length);\n\n    const os2Table = os2.make(Object.assign({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0, // Use space as the break character, if available.\n    }, font.tables.os2));\n\n    const hmtxTable = hmtx.make(font.glyphs);\n    const cmapTable = cmap.make(font.glyphs);\n\n    const englishFamilyName = font.getEnglishName('fontFamily');\n    const englishStyleName = font.getEnglishName('fontSubfamily');\n    const englishFullName = englishFamilyName + ' ' + englishStyleName;\n    let postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    const names = {};\n    for (let n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    const languageTags = [];\n    const nameTable = _name.make(names, languageTags);\n    const ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    const postTable = post.make();\n    const cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    const metaTable = (font.metas && Object.keys(font.metas).length > 0) ? meta.make(font.metas) : undefined;\n\n    // The order does not matter because makeSfntTable() will sort them.\n    const tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n    // Optional tables\n    if (font.tables.gsub) {\n        tables.push(gsub.make(font.tables.gsub));\n    }\n    if (metaTable) {\n        tables.push(metaTable);\n    }\n\n    const sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    const bytes = sfntTable.encode();\n    const checkSum = computeCheckSum(bytes);\n    const tableFields = sfntTable.fields;\n    let checkSumAdjusted = false;\n    for (let i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexport default { make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum };\n","// The Layout object is the prototype of Substitution objects, and provides\n// utility methods to manipulate common layout tables (GPOS, GSUB, GDEF...)\n\nimport check from './check';\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    let range;\n    let imin = 0;\n    let imax = ranges.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        const start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) return 0;\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        let layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        let layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        let layout = this.getTable();\n        if (!layout) { return; }\n        let hasLatn = false;\n        for (let i = 0; i < layout.scripts.length; i++) {\n            const name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        const layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            const scripts = layout.scripts;\n            const pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                const scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []},\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        const scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            const pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                const langSysRecord = {\n                    tag: language,\n                    langSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []}\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        const langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            let featureRecord;\n            const featIndexes = langSysTable.featureIndexes;\n            const allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (let i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                const index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        const featureTable = this.getFeatureTable(script, language, feature, create);\n        const tables = [];\n        if (featureTable) {\n            let lookupTable;\n            const lookupListIndexes = featureTable.lookupListIndexes;\n            const allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (let i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                const index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function(classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {\n                    return classDefTable.classes[glyphIndex - classDefTable.startGlyph];\n                }\n                return 0;\n            case 2:\n                const range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function(coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                const index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                const range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            const glyphs = [];\n            const ranges = coverageTable.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                const start = range.start;\n                const end = range.end;\n                for (let j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nexport default Layout;\n","// The Position object provides utility methods to manipulate\n// the GPOS position table.\n\nimport Layout from './layout';\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    const script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (let i = 0; i < kerningLookups.length; i++) {\n        const subtables = kerningLookups[i].subtables;\n        for (let j = 0; j < subtables.length; j++) {\n            const subtable = subtables[j];\n            const covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) continue;\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    let pairSet = subtable.pairSets[covIndex];\n                    for (let k = 0; k < pairSet.length; k++) {\n                        let pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    const class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    const class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    const pair = subtable.classRecords[class1][class2];\n                    return pair.value1 && pair.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\nexport default Position;\n","// The Substitution object provides utility methods to manipulate\n// the GSUB substitution table.\n\nimport check from './check';\nimport Layout from './layout';\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    const n = ar1.length;\n    if (n !== ar2.length) { return false; }\n    for (let i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) { return false; }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    const subtables = lookupTable.subtables;\n    for (let i = 0; i < subtables.length; i++) {\n        const subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function() {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [{\n            tag: 'DFLT',\n            script: {\n                defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                langSysRecords: []\n            }\n        }],\n        features: [],\n        lookups: []\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n            if (subtable.substFormat === 1) {\n                const delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    const glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                const substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function(feature, script, language) {\n    const alternates = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const alternateSets = subtable.alternateSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function(feature, script, language) {\n    const ligatures = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const ligatureSets = subtable.ligatureSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                const startGlyph = glyphs[j];\n                const ligSet = ligatureSets[j];\n                for (let k = 0; k < ligSet.length; k++) {\n                    const lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, delta: number } for format 1 or { sub: id, by: id } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];\n    const subtable = getSubstFormat(lookupTable, 2, {                // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: {format: 1, glyphs: []},\n        substitute: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 1)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        alternateSets: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function(feature, ligature, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];\n    let subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {                // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: []\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = ligature.sub[0];\n    const ligComponents = ligature.sub.slice(1);\n    const ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents\n    };\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        const ligatureSet = subtable.ligatureSets[pos];\n        for (let i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function(feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language)\n                    .concat(this.getAlternates(feature, script, language));\n        case 'dlig':\n        case 'liga':\n        case 'rlig': return this.getLigatures(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function(feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nexport default Substitution;\n","function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isNode() {\n    return typeof window === 'undefined';\n}\n\nfunction nodeBufferToArrayBuffer(buffer) {\n    const ab = new ArrayBuffer(buffer.length);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n}\n\nfunction arrayBufferToNodeBuffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n}\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\nexport { isBrowser, isNode, nodeBufferToArrayBuffer, arrayBufferToNodeBuffer, checkArgument };\n","// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\nimport check from '../check';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    let v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    const p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    let flags;\n    let flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        const endPointIndices = glyph.endPointIndices = [];\n        for (let i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (let i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        const numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (let i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                const repeatCount = p.parseByte();\n                for (let j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            const points = [];\n            let point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                let px = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                let py = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        let moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            const component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (let i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    const newPoints = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        const newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    const p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    const contours = getContours(points);\n\n    for (let contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        const contour = contours[contourIndex];\n\n        let prev = null;\n        let curr = contour[contour.length - 1];\n        let next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                const start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (let i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                let prev2 = prev;\n                let next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (let j = 0; j < glyph.components.length; j += 1) {\n            const component = glyph.components[j];\n            const componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                let transformedPoints;\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    const firstPt = glyph.points[component.matchedPoints[0]];\n                    let secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    const transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\nfunction parseGlyfTableAll(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (let i = 0; i < loca.length - 1; i += 1) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nfunction parseGlyfTableOnLowMemory(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    font._push = function(i) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    };\n\n    return glyphs;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font, opt) {\n    if (opt.lowMemory)\n        return parseGlyfTableOnLowMemory(data, start, loca, font);\n    else\n        return parseGlyfTableAll(data, start, loca, font);\n}\n\nexport default { getPath, parse: parseGlyfTable};\n","/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n'use strict';\n\nimport glyf from './tables/glyf';\n\nlet instructionTable;\nlet exec;\nlet execGlyph;\nlet execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nconst roundSuper = function (v) {\n    const period = this.srPeriod;\n    let phase = this.srPhase;\n    const threshold = this.srThreshold;\n    let sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) return phase * sign;\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nconst xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nconst yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    let dm1;\n    let dm2;\n    let do1;\n    let do2;\n    let doa1;\n    let doa2;\n    let dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    const rpx = org ? rp.xo : rp.x;\n    const rpy = org ? rp.yo : rp.y;\n    const rpdx = rpx + d * pv.x;\n    const rpdy = rpy + d * pv.y;\n\n    const pvns = pv.normalSlope;\n    const fvs = this.slope;\n\n    const px = p.x;\n    const py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    const d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) return xUnitVector;\n    else if (x === 0 && y === 1) return yUnitVector;\n    else return new UnitVector(x, y);\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    let p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.nextPointOnContour;\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    let p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.prevPointOnContour;\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nconst HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nconst defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) return;\n\n    const font = this.font;\n    let prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        let fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        const oCvt = font.tables.cvt;\n        if (oCvt) {\n            const cvt = prepState.cvt = new Array(oCvt.length);\n            const scale = ppem / font.unitsPerEm;\n            for (let c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) return;\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    const xScale = prepState.ppem / prepState.font.unitsPerEm;\n    const yScale = xScale;\n    let components = glyph.components;\n    let contours;\n    let gZone;\n    let state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        const font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (let i = 0; i < components.length; i++) {\n            const c = components[i];\n            const cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            const dx = Math.round(c.dx * xScale);\n            const dy = Math.round(c.dy * yScale);\n            const gz = state.gZone;\n            const cc = state.contours;\n            for (let pi = 0; pi < gz.length; pi++) {\n                const p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            const gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (let j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    const points = glyph.points || [];\n    const pLen = points.length;\n    const gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    const contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    let cp; // current point\n    for (let i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    let sp; // start point\n    let np; // next point\n\n    for (let i = 0; i < pLen; i++) {\n        cp = gZone[i];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) return;\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    let prog = state.prog;\n\n    if (!prog) return;\n\n    const pLen = prog.length;\n    let ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) state.step++;\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    const tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (let i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    const prog = state.prog;\n    let ip = state.ip;\n    let nesting = 1;\n    let ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            nesting++;\n        else if (ins === 0x59) // EIF\n            nesting--;\n        else if (ins === 0x40) // NPUSHB\n            ip += prog[ip + 1] + 1;\n        else if (ins === 0x41) // NPUSHW\n            ip += 2 * prog[ip + 1] + 1;\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            ip += ins - 0xB0 + 1;\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            ip += (ins - 0xB8 + 1) * 2;\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            break;\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SVTCA[' + v.axis + ']');\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SPVTCA[' + v.axis + ']');\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SFVTCA[' + v.axis + ']');\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SFVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    const stack = state.stack;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'GPV[]');\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    const stack = state.stack;\n    const fv = state.fv;\n\n    if (exports.DEBUG) console.log(state.step, 'GFV[]');\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'SFVTPV[]');\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    const stack = state.stack;\n    const pa0i = stack.pop();\n    const pa1i = stack.pop();\n    const pb0i = stack.pop();\n    const pb1i = stack.pop();\n    const pi = stack.pop();\n    const z0 = state.z0;\n    const z1 = state.z1;\n    const pa0 = z0[pa0i];\n    const pa1 = z0[pa1i];\n    const pb0 = z1[pb0i];\n    const pb1 = z1[pb1i];\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi);\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    const x1 = pa0.x;\n    const y1 = pa0.y;\n    const x2 = pa1.x;\n    const y2 = pa1.y;\n    const x3 = pb0.x;\n    const y3 = pb0.y;\n    const x4 = pb1.x;\n    const y4 = pb1.y;\n\n    const div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    const f1 = x1 * y2 - y1 * x2;\n    const f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP0[]', state.rp0);\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP1[]', state.rp1);\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP2[]', state.rp2);\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP0[]', n);\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP1[]', n);\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP2[]', n);\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZPS[]', n);\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SLOOP[]', state.loop);\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTG[]');\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTHG[]');\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    const d = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SMD[]', d);\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) console.log(state.step, 'ELSE[]');\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    const o = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'JMPR[]', o);\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SCVTCI[]', n);\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DUP[]');\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) console.log(state.step, 'POP[]');\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) console.log(state.step, 'CLEAR[]');\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    const stack = state.stack;\n\n    const a = stack.pop();\n    const b = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SWAP[]');\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DEPTH[]');\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    const stack = state.stack;\n    const fn = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LOOPCALL[]', fn, c);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (let i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        );\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    const fn = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CALL[]', fn);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) console.log(++state.step, 'returning from', fn);\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CINDEX[]', k);\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MINDEX[]', k);\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') throw new Error('FDEF not allowed here');\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    const fn = stack.pop();\n    const ipBegin = ip;\n\n    if (exports.DEBUG) console.log(state.step, 'FDEF[]', fn);\n\n    while (prog[++ip] !== 0x2D);\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    const pi = state.stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'MDAP[' + round + ']', pi);\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) d = state.round(d);\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    const z2 = state.z2;\n    const pLen = z2.length - 2;\n    let cp;\n    let pp;\n    let np;\n\n    if (exports.DEBUG) console.log(state.step, 'IUP[' + v.axis + ']');\n\n    for (let i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) continue;\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) continue;\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let loop = state.loop;\n    const z2 = state.z2;\n\n    while (loop--)\n    {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        const d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    const ci = stack.pop();\n    const sp = state.z2[state.contours[ci]];\n    let p = sp;\n\n    if (exports.DEBUG) console.log(state.step, 'SHC[' + a + ']', ci);\n\n    const d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SHZ[' + a + ']', e);\n\n    let z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    let p;\n    const d = pv.distance(rp, rp, false, true);\n    const pLen = z.length - 2;\n    for (let i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    const stack = state.stack;\n    let loop = state.loop;\n    const fv = state.fv;\n    const d = stack.pop() / 0x40;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    const stack = state.stack;\n    const rp1i = state.rp1;\n    const rp2i = state.rp2;\n    let loop = state.loop;\n    const rp1 = state.z0[rp1i];\n    const rp2 = state.z1[rp2i];\n    const fv = state.fv;\n    const pv = state.dpv;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    const stack = state.stack;\n    const d = stack.pop() / 64;\n    const pi = stack.pop();\n    const p = state.z1[pi];\n    const rp0 = state.z0[state.rp0];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) console.log(state.step, 'MSIRP[' + a + ']', d, pi);\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) state.rp0 = pi;\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    const stack = state.stack;\n    const rp0i = state.rp0;\n    const rp0 = state.z0[rp0i];\n    let loop = state.loop;\n    const fv = state.fv;\n    const pv = state.pv;\n    const z1 = state.z1;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTDG[]');\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const pi = stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) d = cv;\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    const prog = state.prog;\n    let ip = state.ip;\n    const stack = state.stack;\n\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHB[]', n);\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHW[]', n);\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    const stack = state.stack;\n    let store = state.store;\n\n    if (!store) store = state.store = [];\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WS', v, l);\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    const stack = state.stack;\n    const store = state.store;\n\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RS', l);\n\n    const v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    const stack = state.stack;\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTP', v, l);\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    const stack = state.stack;\n    const cvte = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RCVT', cvte);\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    const stack = state.stack;\n    const pi = stack.pop();\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log(state.step, 'GC[' + a + ']', pi);\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    const stack = state.stack;\n    const pi2 = stack.pop();\n    const pi1 = stack.pop();\n    const p2 = state.z1[pi2];\n    const p1 = state.z0[pi1];\n    const d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d);\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) console.log(state.step, 'MPPEM[]');\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) console.log(state.step, 'FLIPON[]');\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LT[]', e2, e1);\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LTEQ[]', e2, e1);\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GT[]', e2, e1);\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GTEQ[]', e2, e1);\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EQ[]', e2, e1);\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEQ[]', e2, e1);\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ODD[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EVEN[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    let test = state.stack.pop();\n    let ins;\n\n    if (exports.DEBUG) console.log(state.step, 'IF[]', test);\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) console.log(state.step, ins === 0x1B ? 'ELSE[]' : 'EIF[]');\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) console.log(state.step, 'EIF[]');\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'AND[]', e2, e1);\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'OR[]', e2, e1);\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    const stack = state.stack;\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NOT[]', e);\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const fv = state.fv;\n    const pv = state.pv;\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n    const z0 = state.z0;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAP[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const pi = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n        if (exports.DEBUG) console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds);\n\n        const p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDB[]', n);\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDS[]', n);\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ADD[]', n2, n1);\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SUB[]', n2, n1);\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'DIV[]', n2, n1);\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MUL[]', n2, n1);\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ABS[]', n);\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    const stack = state.stack;\n    let n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEG[]', n);\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'FLOOR[]', n);\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CEILING[]', n);\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROUND[]');\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    const stack = state.stack;\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTF[]', v, l);\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAC[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const c = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n\n        const delta = mag * ds;\n\n        if (exports.DEBUG) console.log(state.step, 'DELTACFIX', c, 'by', delta);\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'S45ROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) console.log(state.step, 'ROFF[]');\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RUTG[]');\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RDTG[]');\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    const n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) console.log(state.step, 'SCANCTRL[]', n);\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    const stack = state.stack;\n    const sel = stack.pop();\n    let r = 0;\n\n    if (exports.DEBUG) console.log(state.step, 'GETINFO[]', sel);\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) r = 35;\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) r |= 0x1000;\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    const stack = state.stack;\n    const a = stack.pop();\n    const b = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROLL[]');\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MAX[]', e2, e1);\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MIN[]', e2, e1);\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    const n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) console.log(state.step, 'SCANTYPE[]', n);\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    const s = state.stack.pop();\n    let v = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'INSTCTRL[]', s, v);\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    if (exports.DEBUG) console.log(state.step, 'PUSHB[' + n + ']');\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.ip, 'PUSHW[' + n + ']');\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    const stack = state.stack;\n    const cvte = indirect && stack.pop();\n    const pi = stack.pop();\n    const rp0i = state.rp0;\n    const rp = state.z0[rp0i];\n    const p = state.z1[pi];\n\n    const md = state.minDis;\n    const fv = state.fv;\n    const pv = state.dpv;\n    let od; // original distance\n    let d; // moving distance\n    let sign; // sign of distance\n    let cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) d = cv;\n    }\n\n    if (keepD && d < md) d = md;\n\n    if (ro) d = state.round(d);\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) state.rp0 = pi;\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\nexport default Hinting;\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n","/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * @typedef ContextParams\n * @type Object\n * @property {array} context context items\n * @property {number} currentIndex current item index\n */\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    const coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(eventId => {\n        Object.defineProperty(this.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(eventId => {\n            const event = events[eventId];\n            if (typeof event === 'function') {\n                this.events[eventId].subscribe(event);\n            }\n        });\n    }\n    const requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(eventId => {\n        this.events[eventId].subscribe(\n            this.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    const silent = true;\n    const state = RUDs.map(RUD => (\n        this[RUD[0]].apply(this, RUD.slice(1).concat(silent))\n    ));\n    const hasFAILObject = obj => (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    );\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: `composeRUD: one or more operations hasn't completed successfully`,\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(op => !hasFAILObject(op))]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    const isTokenType = tokens.every(token => token instanceof Token);\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        const replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) this.dispatch('replaceToken', [startIndex, offset, tokens]);\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        const replaced = this.tokens.splice(index, 1, token);\n        if (!silent) this.dispatch('replaceToken', [index, token]);\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    const tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) this.dispatch('removeRange', [tokens, startIndex, offset]);\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        const token = this.tokens.splice(index, 1);\n        if (!silent) this.dispatch('removeToken', [token, index]);\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    const tokenType = tokens.every(\n        token => token instanceof Token\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) this.dispatch('insertToken', [tokens, index]);\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        const conditionParams = [token, contextParams];\n        const canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        const modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            let newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: `invalid '${this.eventId}' event handler`};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(token => token.char).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(token => token.char).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    let context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    const event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    const event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(subscriber => {\n            subscriber.apply(this, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) return {\n        FAIL:\n        `context name '${contextName}' is already registered.`\n    };\n    if (typeof contextStartCheck !== 'function') return {\n        FAIL:\n        `missing context start check.`\n    };\n    if (typeof contextEndCheck !== 'function') return {\n        FAIL:\n        `missing context end check.`\n    };\n    const contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    const endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    const context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: `context checker '${contextName}' is not registered.` };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    const registeredContexts = this.registeredContexts;\n    for (const contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            const context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    const chars = this.tokens.map(token => token.char);\n    for (let i = 0; i < chars.length; i++) {\n        const contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    const startIndex = this.getContext(contextName).openRange.startIndex;\n    let range = new ContextRange(startIndex, offset, contextName);\n    const ranges = this.getContext(contextName).ranges;\n    range.rangeId = `${contextName}.${ranges.length}`;\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    const index = contextParams.index;\n    this.contextCheckers.forEach(contextChecker => {\n        let contextName = contextChecker.contextName;\n        let openRange = this.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this.getContext(contextName).openRange = openRange;\n            this.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            const offset = (index - openRange.startIndex) + 1;\n            const range = this.setEndOffset(offset, contextName);\n            this.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    let chars = Array.from(text);\n    this.dispatch('start');\n    for (let i = 0; i < chars.length; i++) {\n        const char = chars[i];\n        const contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        let token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\nexport default Tokenizer;\nexport { Token, Event, ContextRange, ContextParams };\n","// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nexport function isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nexport function isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nexport function isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is Latin\n * @param {string} c a single char\n */\nexport function isLatinChar(c) {\n    return /[A-z]/.test(c);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nexport function isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n","/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\nimport { ContextParams } from '../tokenizer';\nimport { isTashkeelArabicChar } from '../char';\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n */\nfunction FeatureQuery(font) {\n    this.font = font;\n    this.features = {};\n}\n\n/**\n * @typedef SubstitutionAction\n * @type Object\n * @property {number} id substitution type\n * @property {string} tag feature tag\n * @property {any} substitution substitution value(s)\n */\n\n/**\n * Create a substitution action instance\n * @param {SubstitutionAction} action\n */\nfunction SubstitutionAction(action) {\n    this.id = action.id;\n    this.tag = action.tag;\n    this.substitution = action.substitution;\n}\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex glyph index\n * @param {CoverageTable} coverage coverage table\n */\nfunction lookupCoverage(glyphIndex, coverage) {\n    if (!glyphIndex) return -1;\n    switch (coverage.format) {\n        case 1:\n            return coverage.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            let ranges = coverage.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    let offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n}\n\n/**\n * Handle a single substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return glyphIndex + subtable.deltaGlyphId;\n}\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.substitute[substituteIndex];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    let lookupList = [];\n    for (let i = 0; i < coverageList.length; i++) {\n        const coverage = coverageList[i];\n        let glyphIndex = contextParams.current;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        const lookupIndex = lookupCoverage(glyphIndex, coverage);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) return -1;\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams, subtable) {\n    const lookupsCount = (\n        subtable.inputCoverage.length +\n        subtable.lookaheadCoverage.length +\n        subtable.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) return [];\n    // INPUT LOOKUP //\n    let inputLookups = lookupCoverageList(\n        subtable.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) return [];\n    // LOOKAHEAD LOOKUP //\n    const lookaheadOffset = subtable.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) return [];\n    let lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    const lookaheadParams = new ContextParams(lookaheadContext, 0);\n    let lookaheadLookups = lookupCoverageList(\n        subtable.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    let backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < subtable.backtrackCoverage.length) return [];\n    const backtrackParams = new ContextParams(backtrackContext, 0);\n    let backtrackLookups = lookupCoverageList(\n        subtable.backtrackCoverage, backtrackParams\n    );\n    const contextRulesMatch = (\n        inputLookups.length === subtable.inputCoverage.length &&\n        lookaheadLookups.length === subtable.lookaheadCoverage.length &&\n        backtrackLookups.length === subtable.backtrackCoverage.length\n    );\n    let substitutions = [];\n    if (contextRulesMatch) {\n        for (let i = 0; i < subtable.lookupRecords.length; i++) {\n            const lookupRecord = subtable.lookupRecords[i];\n            const lookupListIndex = lookupRecord.lookupListIndex;\n            const lookupTable = this.getLookupByIndex(lookupListIndex);\n            for (let s = 0; s < lookupTable.subtables.length; s++) {\n                const subtable = lookupTable.subtables[s];\n                const lookup = this.getLookupMethod(lookupTable, subtable);\n                const substitutionType = this.getSubstitutionType(lookupTable, subtable);\n                if (substitutionType === '12') {\n                    for (let n = 0; n < inputLookups.length; n++) {\n                        const glyphIndex = contextParams.get(n);\n                        const substitution = lookup(glyphIndex);\n                        if (substitution) substitutions.push(substitution);\n                    }\n                }\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams, subtable) {\n    // COVERAGE LOOKUP //\n    let glyphIndex = contextParams.current;\n    let ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (ligSetIndex === -1) return null;\n    // COMPONENTS LOOKUP\n    // (!) note, components are ordered in the written direction.\n    let ligature;\n    let ligatureSet = subtable.ligatureSets[ligSetIndex];\n    for (let s = 0; s < ligatureSet.length; s++) {\n        ligature = ligatureSet[s];\n        for (let l = 0; l < ligature.components.length; l++) {\n            const lookaheadItem = contextParams.lookahead[l];\n            const component = ligature.components[l];\n            if (lookaheadItem !== component) break;\n            if (l === ligature.components.length - 1) return ligature;\n        }\n    }\n    return null;\n}\n\n/**\n * Handle decomposition substitution - format 1\n * @param {number} glyphIndex glyph index\n * @param {any} subtable subtable\n */\nfunction decompositionSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.sequences[substituteIndex];\n}\n\n/**\n * Get default script features indexes\n */\nFeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function () {\n    const scripts = this.font.tables.gsub.scripts;\n    for (let s = 0; s < scripts.length; s++) {\n        const script = scripts[s];\n        if (script.tag === 'DFLT') return (\n            script.script.defaultLangSys.featureIndexes\n        );\n    }\n    return [];\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    const tables = this.font.tables;\n    if (!tables.gsub) return [];\n    if (!scriptTag) return this.getDefaultScriptFeaturesIndexes();\n    const scripts = this.font.tables.gsub.scripts;\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (script.tag === scriptTag && script.script.defaultLangSys) {\n            return script.script.defaultLangSys.featureIndexes;\n        } else {\n            let langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (let j = 0; j < langSysRecords.length; j++) {\n                    const langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        let langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return this.getDefaultScriptFeaturesIndexes();\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    let tags = {};\n    for (let i = 0; i < features.length; i++) {\n        const tag = features[i].tag;\n        const feature = features[i].feature;\n        tags[tag] = feature;\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    let features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) return features;\n    const featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) return null;\n    const gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(index => gsub.features[index]);\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Get substitution type\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {\n    const lookupType = lookupTable.lookupType.toString();\n    const substFormat = subtable.substFormat.toString();\n    return lookupType + substFormat;\n};\n\n/**\n * Get lookup method\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {\n    let substitutionType = this.getSubstitutionType(lookupTable, subtable);\n    switch (substitutionType) {\n        case '11':\n            return glyphIndex => singleSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '12':\n            return glyphIndex => singleSubstitutionFormat2.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '63':\n            return contextParams => chainingSubstitutionFormat3.apply(\n                this, [contextParams, subtable]\n            );\n        case '41':\n            return contextParams => ligatureSubstitutionFormat1.apply(\n                this, [contextParams, subtable]\n            );\n        case '21':\n            return glyphIndex => decompositionSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        default:\n            throw new Error(\n                `lookupType: ${lookupTable.lookupType} - ` +\n                `substFormat: ${subtable.substFormat} ` +\n                `is not yet supported`\n            );\n    }\n};\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n *\n */\n\n/**\n * @typedef FQuery\n * @type Object\n * @param {string} tag feature tag\n * @param {string} script feature script\n * @param {ContextParams} contextParams context params\n */\n\n/**\n * Lookup a feature using a query parameters\n * @param {FQuery} query feature query\n */\nFeatureQuery.prototype.lookupFeature = function (query) {\n    let contextParams = query.contextParams;\n    let currentIndex = contextParams.index;\n    const feature = this.getFeature({\n        tag: query.tag, script: query.script\n    });\n    if (!feature) return new Error(\n        `font '${this.font.names.fullName.en}' ` +\n        `doesn't support feature '${query.tag}' ` +\n        `for script '${query.script}'.`\n    );\n    const lookups = this.getFeatureLookups(feature);\n    const substitutions = [].concat(contextParams.context);\n    for (let l = 0; l < lookups.length; l++) {\n        const lookupTable = lookups[l];\n        const subtables = this.getLookupSubtables(lookupTable);\n        for (let s = 0; s < subtables.length; s++) {\n            const subtable = subtables[s];\n            const substType = this.getSubstitutionType(lookupTable, subtable);\n            const lookup = this.getLookupMethod(lookupTable, subtable);\n            let substitution;\n            switch (substType) {\n                case '11':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 11, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '12':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 12, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '63':\n                    substitution = lookup(contextParams);\n                    if (Array.isArray(substitution) && substitution.length) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 63, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '41':\n                    substitution = lookup(contextParams);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 41, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '21':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 21, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n            }\n            contextParams = new ContextParams(substitutions, currentIndex);\n            if (Array.isArray(substitution) && !substitution.length) continue;\n            substitution = null;\n        }\n    }\n    return substitutions.length ? substitutions : null;\n};\n\n/**\n * Checks if a font supports a specific features\n * @param {FQuery} query feature query object\n */\nFeatureQuery.prototype.supports = function (query) {\n    if (!query.script) return false;\n    this.getScriptFeatures(query.script);\n    const supportedScript = this.features.hasOwnProperty(query.script);\n    if (!query.tag) return supportedScript;\n    const supportedFeature = (\n        this.features[query.script].some(feature => feature.tag === query.tag)\n    );\n    return supportedScript && supportedFeature;\n};\n\n/**\n * Get lookup table subtables\n * @param {any} lookupTable lookup table\n */\nFeatureQuery.prototype.getLookupSubtables = function (lookupTable) {\n    return lookupTable.subtables || null;\n};\n\n/**\n * Get lookup table by index\n * @param {number} index lookup table index\n */\nFeatureQuery.prototype.getLookupByIndex = function (index) {\n    const lookups = this.font.tables.gsub.lookups;\n    return lookups[index] || null;\n};\n\n/**\n * Get lookup tables for a feature\n * @param {string} feature\n */\nFeatureQuery.prototype.getFeatureLookups = function (feature) {\n    // TODO: memoize\n    return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function getFeature(query) {\n    if (!this.font) return { FAIL: `No font was found`};\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    const scriptFeatures = this.features[query.script];\n    if (!scriptFeatures) return (\n        { FAIL: `No feature for script ${query.script}`}\n    );\n    if (!scriptFeatures.tags[query.tag]) return null;\n    return this.features[query.script].tags[query.tag];\n};\n\nexport default FeatureQuery;\nexport { FeatureQuery, SubstitutionAction };\n","/**\n * Arabic word context checkers\n */\n\nimport { isArabicChar } from '../../../char';\n\nfunction arabicWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: arabicWordStartCheck,\n    endCheck: arabicWordEndCheck\n};\n","/**\n * Arabic sentence context checkers\n */\n\nimport { isArabicChar, isWhiteSpace, isTashkeelArabicChar } from '../../../char';\n\nfunction arabicSentenceStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            const nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) return true;\n            if (nextIsWhitespace) {\n                let arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        c => isArabicChar(c) || isTashkeelArabicChar(c)\n                    )\n                );\n                if (!arabicCharAhead) return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nexport default {\n    startCheck: arabicSentenceStartCheck,\n    endCheck: arabicSentenceEndCheck\n};\n","import { SubstitutionAction } from './featureQuery';\n\n/**\n * Apply single substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply single substitution format 2\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat2(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply chaining context substitution format 3\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction chainingSubstitutionFormat3(action, tokens, index) {\n    action.substitution.forEach((subst, offset) => {\n        const token = tokens[index + offset];\n        token.setState(action.tag, subst);\n    });\n}\n\n/**\n * Apply ligature substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction ligatureSubstitutionFormat1(action, tokens, index) {\n    let token = tokens[index];\n    token.setState(action.tag, action.substitution.ligGlyph);\n    const compsCount = action.substitution.components.length;\n    for (let i = 0; i < compsCount; i++) {\n        token = tokens[index + i + 1];\n        token.setState('deleted', true);\n    }\n}\n\n/**\n * Supported substitutions\n */\nconst SUBSTITUTIONS = {\n    11: singleSubstitutionFormat1,\n    12: singleSubstitutionFormat2,\n    63: chainingSubstitutionFormat3,\n    41: ligatureSubstitutionFormat1\n};\n\n/**\n * Apply substitutions to a list of tokens\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction applySubstitution(action, tokens, index) {\n    if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {\n        SUBSTITUTIONS[action.id](action, tokens, index);\n    }\n}\n\nexport default applySubstitution;\n","/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport { isIsolatedArabicChar, isTashkeelArabicChar } from '../../char';\nimport { SubstitutionAction } from '../featureQuery';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    let backtrack = [].concat(charContextParams.backtrack);\n    for (let i = backtrack.length - 1; i >= 0; i--) {\n        const prevChar = backtrack[i];\n        const isolated = isIsolatedArabicChar(prevChar);\n        const tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) return true;\n        if (isolated) return false;\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) return false;\n    for (let i = 0; i < charContextParams.lookahead.length; i++) {\n        const nextChar = charContextParams.lookahead[i];\n        const tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) return true;\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    const script = 'arab';\n    const tags = this.featuresTags[script];\n    const tokens = this.tokenizer.getRangeTokens(range);\n    if (tokens.length === 1) return;\n    let contextParams = new ContextParams(\n        tokens.map(token => token.getState('glyphIndex')\n    ), 0);\n    const charContextParams = new ContextParams(\n        tokens.map(token => token.char\n    ), 0);\n    tokens.forEach((token, index) => {\n        if (isTashkeelArabicChar(token.char)) return;\n        contextParams.setCurrentIndex(index);\n        charContextParams.setCurrentIndex(index);\n        let CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) CONNECT |= 1;\n        if (willConnectNext(charContextParams)) CONNECT |= 2;\n        let tag;\n        switch (CONNECT) {\n            case 1: (tag = 'fina'); break;\n            case 2: (tag = 'init'); break;\n            case 3: (tag = 'medi'); break;\n        }\n        if (tags.indexOf(tag) === -1) return;\n        let substitutions = this.query.lookupFeature({\n            tag, script, contextParams\n        });\n        if (substitutions instanceof Error) return console.info(substitutions.message);\n        substitutions.forEach((action, index) => {\n            if (action instanceof SubstitutionAction) {\n                applySubstitution(action, tokens, index);\n                contextParams.context[index] = action.substitution;\n            }\n        });\n    });\n}\n\nexport default arabicPresentationForms;\nexport { arabicPresentationForms };\n","/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    const script = 'arab';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'rlig', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default arabicRequiredLigatures;\nexport { arabicRequiredLigatures };\n","/**\n * Latin word context checkers\n */\n\nimport { isLatinChar } from '../../../char';\n\nfunction latinWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? latin first char\n        (prevChar === null && isLatinChar(char)) ||\n        // ? latin char preceded with a non latin char\n        (!isLatinChar(prevChar) && isLatinChar(char))\n    );\n}\n\nfunction latinWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last latin char\n        (nextChar === null) ||\n        // ? next char is not latin\n        (!isLatinChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: latinWordStartCheck,\n    endCheck: latinWordEndCheck\n};\n","/**\n * Apply Latin ligature feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction latinLigature(range) {\n    const script = 'latn';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'liga', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default latinLigature;\n","/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\nimport Tokenizer from './tokenizer';\nimport FeatureQuery from './features/featureQuery';\nimport arabicWordCheck from './features/arab/contextCheck/arabicWord';\nimport arabicSentenceCheck from './features/arab/contextCheck/arabicSentence';\nimport arabicPresentationForms from './features/arab/arabicPresentationForms';\nimport arabicRequiredLigatures from './features/arab/arabicRequiredLigatures';\nimport latinWordCheck from './features/latn/contextCheck/latinWord';\nimport latinLigature from './features/latn/latinLigatures';\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.featuresTags = {};\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    latinWordCheck,\n    arabicWordCheck,\n    arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerContextChecker(checkId) {\n    const check = this.contextChecks[`${checkId}Check`];\n    return this.tokenizer.registerContextChecker(\n        checkId, check.startCheck, check.endCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerContextChecker.call(this, 'latinWord');\n    registerContextChecker.call(this, 'arabicWord');\n    registerContextChecker.call(this, 'arabicSentence');\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    const ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(range => {\n        let rangeTokens = this.tokenizer.getRangeTokens(range);\n        this.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Register supported features tags\n * @param {script} script script tag\n * @param {Array} tags features tags list\n */\nBidi.prototype.registerFeatures = function (script, tags) {\n    const supportedTags = tags.filter(\n        tag => this.query.supports({script, tag})\n    );\n    if (!this.featuresTags.hasOwnProperty(script)) {\n        this.featuresTags[script] = supportedTags;\n    } else {\n        this.featuresTags[script] =\n        this.featuresTags[script].concat(supportedTags);\n    }\n};\n\n/**\n * Apply GSUB features\n * @param {Array} tagsList a list of features tags\n * @param {string} script a script tag\n * @param {Font} font opentype font instance\n */\nBidi.prototype.applyFeatures = function (font, features) {\n    if (!font) throw new Error(\n        'No valid font was provided to apply features'\n    );\n    if (!this.query) this.query = new FeatureQuery(font);\n    for (let f = 0; f < features.length; f++) {\n        const feature = features[f];\n        if (!this.query.supports({script: feature.script})) continue;\n        this.registerFeatures(feature.script, feature.tags);\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicPresentationForms.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('rlig') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicRequiredLigatures.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyLatinLigatures() {\n    const script = 'latn';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('liga') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('latinWord');\n    ranges.forEach(range => {\n        latinLigature.call(this, range);\n    });\n}\n\n/**\n * Check if a context is registered\n * @param {string} contextId context id\n */\nBidi.prototype.checkContextReady = function (contextId) {\n    return !!this.tokenizer.getContext(contextId);\n};\n\n/**\n * Apply features to registered contexts\n */\nBidi.prototype.applyFeaturesToContexts = function () {\n    if (this.checkContextReady('arabicWord')) {\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n    }\n    if (this.checkContextReady('latinWord')) {\n        applyLatinLigatures.call(this);\n    }\n    if (this.checkContextReady('arabicSentence')) {\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        this.applyFeaturesToContexts();\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    let indexes = [];\n    for (let i = 0; i < this.tokenizer.tokens.length; i++) {\n        const token = this.tokenizer.tokens[i];\n        if (token.state.deleted) continue;\n        const index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\nexport default Bidi;\n","// The Font object\n\nimport Path from './path';\nimport sfnt from './tables/sfnt';\nimport { DefaultEncoding } from './encoding';\nimport glyphset from './glyphset';\nimport Position from './position';\nimport Substitution from './substitution';\nimport { isBrowser, checkArgument, arrayBufferToNodeBuffer } from './util';\nimport HintingTrueType from './hintingtt';\nimport Bidi from './bidi';\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n    options.tables = options.tables || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        checkArgument(options.descender <= 0, 'When creating a new Font object, negative descender value is required.');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            // postScriptName may not contain any whitespace\n            postScriptName: {en: options.postScriptName || (options.familyName + options.styleName).replace(/\\s/g, '')},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = Object.assign(options.tables, {\n            os2: Object.assign({\n                usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,\n                usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,\n                fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR,\n            }, options.tables.os2)\n        });\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    // needed for low memory mode only.\n    this._push = null;\n    this._hmtxTableData = {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function() {\n            if (this._hinting) return this._hinting;\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new HintingTrueType(this));\n            }\n        }\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function(c) {\n    const glyphIndex = this.charToGlyphIndex(c);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Update features\n * @param {any} options features options\n */\nFont.prototype.updateFeatures = function (options) {\n    // TODO: update all features options not only 'latn'.\n    return this.defaultRenderOptions.features.map(feature => {\n        if (feature.script === 'latn') {\n            return {\n                script: 'latn',\n                tags: feature.tags.filter(tag => options[tag])\n            };\n        } else {\n            return feature;\n        }\n    });\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function(s, options) {\n\n    const bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    const charToGlyphIndexMod = token => this.charToGlyphIndex(token.char);\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    // roll-back to default features\n    let features = options ?\n    this.updateFeatures(options.features) :\n    this.defaultRenderOptions.features;\n\n    bidi.applyFeatures(this, features);\n\n    const indexes = bidi.getTextGlyphs(s);\n\n    let length = indexes.length;\n\n    // convert glyph indexes to glyph objects\n    const glyphs = new Array(length);\n    const notdef = this.glyphs.get(0);\n    for (let i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\n/**\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.nameToGlyph = function(name) {\n    const glyphIndex = this.nameToGlyphIndex(name);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * @param  {Number}\n * @return {String}\n */\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    const gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(gposKerning, leftGlyph, rightGlyph);\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: [\n        /**\n         * these 4 features are required to render Arabic text properly\n         * and shouldn't be turned off when rendering arabic text.\n         */\n        { script: 'arab', tags: ['init', 'medi', 'fina', 'rlig'] },\n        { script: 'latn', tags: ['liga', 'rlig'] }\n    ]\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = Object.assign({}, this.defaultRenderOptions, options);\n    const fontScale = 1 / this.unitsPerEm * fontSize;\n    const glyphs = this.stringToGlyphs(text, options);\n    let kerningLookups;\n    if (options.kerning) {\n        const script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(script, options.language);\n    }\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            const kerningValue = kerningLookups ?\n                  this.position.getKerningValue(kerningLookups, glyph.index, glyphs[i + 1].index) :\n                  this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    const fullPath = new Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    const glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function(text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function() {});\n};\n\n/**\n * Draw the text on the given drawing context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n */\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of all glyphs in the text.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * Draw lines indicating important font measurements for all glyphs in the text.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * @param  {string}\n * @return {string}\n */\nFont.prototype.getEnglishName = function(name) {\n    const translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n/**\n * Validate\n */\nFont.prototype.validate = function() {\n    const warnings = [];\n    const _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        const englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n/**\n * Convert the font object to a SFNT data structure.\n * This structure contains all the necessary tables and metadata to create a binary OTF file.\n * @return {opentype.Table}\n */\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n/**\n * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.\n */\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n/**\n * Converts a `opentype.Font` into an `ArrayBuffer`\n * @return {ArrayBuffer}\n */\nFont.prototype.toArrayBuffer = function() {\n    const sfntTable = this.toTables();\n    const bytes = sfntTable.encode();\n    const buffer = new ArrayBuffer(bytes.length);\n    const intArray = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n/**\n * Initiate a download of the OpenType font.\n */\nFont.prototype.download = function(fileName) {\n    const familyName = this.getEnglishName('fontFamily');\n    const styleName = this.getEnglishName('fontSubfamily');\n    fileName = fileName || familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    const arrayBuffer = this.toArrayBuffer();\n\n    if (isBrowser()) {\n        window.URL = window.URL || window.webkitURL;\n\n        if (window.URL) {\n            const dataView = new DataView(arrayBuffer);\n            const blob = new Blob([dataView], {type: 'font/opentype'});\n\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.download = fileName;\n\n            let event = document.createEvent('MouseEvents');\n            event.initEvent('click', true, false);\n            link.dispatchEvent(event);\n        } else {\n            console.warn('Font file could not be downloaded. Try using a different browser.');\n        }\n    } else {\n        const fs = require('fs');\n        const buffer = arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC:              0x001, //1\n    UNDERSCORE:          0x002, //2\n    NEGATIVE:            0x004, //4\n    OUTLINED:            0x008, //8\n    STRIKEOUT:           0x010, //16\n    BOLD:                0x020, //32\n    REGULAR:             0x040, //64\n    USER_TYPO_METRICS:   0x080, //128\n    WWS:                 0x100, //256\n    OBLIQUE:             0x200  //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK:    900\n};\n\nexport default Font;\n","// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(10);         // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord()\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': GPOS lookup type 1 format must be 1 or 2.');\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    const start = this.offset + this.relativeOffset;\n    const posFormat = this.parseUShort();\n    check.assert(posFormat === 1 || posFormat === 2, '0x' + start.toString(16) + ': GPOS lookup type 2 format must be 1 or 2.');\n    const coverage = this.parsePointer(Parser.coverage);\n    const valueFormat1 = this.parseUShort();\n    const valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(Parser.pointer(Parser.list(function() {\n                return {        // pairValueRecord\n                    secondGlyph: this.parseUShort(),\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            })))\n        };\n    } else if (posFormat === 2) {\n        const classDef1 = this.parsePointer(Parser.classDef);\n        const classDef2 = this.parsePointer(Parser.classDef);\n        const class1Count = this.parseUShort();\n        const class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(class1Count, Parser.list(class2Count, function() {\n                return {\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            }))\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() { return { error: 'GPOS Lookup 3 not supported' }; };\nsubtableParsers[4] = function parseLookup4() { return { error: 'GPOS Lookup 4 not supported' }; };\nsubtableParsers[5] = function parseLookup5() { return { error: 'GPOS Lookup 5 not supported' }; };\nsubtableParsers[6] = function parseLookup6() { return { error: 'GPOS Lookup 6 not supported' }; };\nsubtableParsers[7] = function parseLookup7() { return { error: 'GPOS Lookup 7 not supported' }; };\nsubtableParsers[8] = function parseLookup8() { return { error: 'GPOS Lookup 8 not supported' }; };\nsubtableParsers[9] = function parseLookup9() { return { error: 'GPOS Lookup 9 not supported' }; };\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GPOS table version ' + tableVersion);\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GPOS Writing //////////////////////////////////////////////\n// NOT SUPPORTED\nconst subtableMakers = new Array(10);\n\nfunction makeGposTable(gpos) {\n    return new table.Table('GPOS', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gpos.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gpos.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gpos.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGposTable, make: makeGposTable };\n","// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\nfunction parseWindowsKernTable(p) {\n    const pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    const subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    const nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (let i = 0; i < nPairs; i += 1) {\n        const leftIndex = p.parseUShort();\n        const rightIndex = p.parseUShort();\n        const value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    const pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    const nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    const coverage = p.parseUShort();\n    const subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        const nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (let i = 0; i < nPairs; i += 1) {\n            const leftIndex = p.parseUShort();\n            const rightIndex = p.parseUShort();\n            const value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nexport default { parse: parseKernTable };\n","// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\nimport parse from '../parse';\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    const p = new parse.Parser(data, start);\n    const parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    const glyphOffsets = [];\n    for (let i = 0; i < numGlyphs + 1; i += 1) {\n        let glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexport default { parse: parseLocaTable };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename)}return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort()}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}var asm2wasmImports={\"f64-rem\":function(x,y){return x%y},\"debugger\":function(){}};var functionPointers=new Array(0);var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for getValue: \"+type)}return null}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}function getMemory(size){if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5344528,DYNAMICTOP_PTR=101616;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(wasmBinaryFile);if(binary){return binary}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={\"env\":env,\"global\":{\"NaN\":NaN,Infinity:Infinity},\"global.Math\":Math,\"asm2wasm\":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}Module[\"asm\"]=function(global,env,providedBuffer){env[\"memory\"]=wasmMemory;env[\"table\"]=wasmTable=new WebAssembly.Table({\"initial\":420,\"maximum\":420,\"element\":\"anyfunc\"});env[\"__memory_base\"]=1024;env[\"__table_base\"]=0;var exports=createWasm(env);return exports};__ATINIT__.push({func:function(){globalCtors()}});var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV[\"USER\"]=ENV[\"LOGNAME\"]=\"web_user\";ENV[\"PATH\"]=\"/\";ENV[\"PWD\"]=\"/\";ENV[\"HOME\"]=\"/home/web_user\";ENV[\"LANG\"]=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";ENV[\"_\"]=thisProgram;poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[environ>>2]=envPtr}else{envPtr=HEAP32[environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]===\"string\"){var line=key+\"=\"+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error(\"Environment size exceeded TOTAL_ENV_SIZE!\")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return __emval_register(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")},\"toWireType\":function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _emscripten_get_heap_size(){return HEAP8.length}function _emscripten_run_script(ptr){eval(UTF8ToString(ptr))}function _getenv(name){if(name===0)return 0;name=UTF8ToString(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _longjmp(env,value){_setThrew(env,value||1);throw\"longjmp\"}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_emval();var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}function invoke_iii(index,a1,a2){var sp=stackSave();try{return dynCall_iii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iiii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{dynCall_vi(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}var asmGlobalArg={};var asmLibraryArg={\"b\":abort,\"f\":setTempRet0,\"e\":getTempRet0,\"p\":invoke_iii,\"i\":invoke_iiii,\"o\":invoke_iiiii,\"n\":invoke_vi,\"m\":invoke_viiii,\"l\":___buildEnvironment,\"h\":___setErrNo,\"z\":__embind_register_bool,\"y\":__embind_register_emval,\"k\":__embind_register_float,\"g\":__embind_register_integer,\"c\":__embind_register_memory_view,\"j\":__embind_register_std_string,\"x\":__embind_register_std_wstring,\"w\":__embind_register_void,\"v\":_emscripten_get_heap_size,\"u\":_emscripten_memcpy_big,\"t\":_emscripten_resize_heap,\"s\":_emscripten_run_script,\"r\":_getenv,\"d\":_longjmp,\"q\":abortOnCannotGrowMemory,\"a\":DYNAMICTOP_PTR};var asm=Module[\"asm\"](asmGlobalArg,asmLibraryArg,buffer);Module[\"asm\"]=asm;var _FT_Done_Face=Module[\"_FT_Done_Face\"]=function(){return Module[\"asm\"][\"A\"].apply(null,arguments)};var _FT_Done_FreeType=Module[\"_FT_Done_FreeType\"]=function(){return Module[\"asm\"][\"B\"].apply(null,arguments)};var _FT_Get_Char_Index=Module[\"_FT_Get_Char_Index\"]=function(){return Module[\"asm\"][\"C\"].apply(null,arguments)};var _FT_Get_Kerning=Module[\"_FT_Get_Kerning\"]=function(){return Module[\"asm\"][\"D\"].apply(null,arguments)};var _FT_Get_Sfnt_Table=Module[\"_FT_Get_Sfnt_Table\"]=function(){return Module[\"asm\"][\"E\"].apply(null,arguments)};var _FT_Init_FreeType=Module[\"_FT_Init_FreeType\"]=function(){return Module[\"asm\"][\"F\"].apply(null,arguments)};var _FT_Load_Glyph=Module[\"_FT_Load_Glyph\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var _FT_New_Memory_Face=Module[\"_FT_New_Memory_Face\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _FT_Render_Glyph=Module[\"_FT_Render_Glyph\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _FT_Set_Char_Size=Module[\"_FT_Set_Char_Size\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var _FT_Set_Pixel_Sizes=Module[\"_FT_Set_Pixel_Sizes\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var _init_constants=Module[\"_init_constants\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var globalCtors=Module[\"globalCtors\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var dynCall_iii=Module[\"dynCall_iii\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var dynCall_iiii=Module[\"dynCall_iiii\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var dynCall_iiiii=Module[\"dynCall_iiiii\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var dynCall_viiii=Module[\"dynCall_viiii\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;Module[\"getValue\"]=getValue;Module[\"writeArrayToMemory\"]=writeArrayToMemory;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return Module\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = Module;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return Module; });\n    else if (typeof exports === 'object')\n      exports[\"Module\"] = Module;\n    ","'use strict';\n\n\nconst ft_render_fabric = require('./build/ft_render');\n\nlet m = null;     // compiled module instance\nlet library = 0;  // pointer to library struct in wasm memory\n\n\n// workaround because of bug in emscripten:\n// https://github.com/emscripten-core/emscripten/issues/5820\nconst runtime_initialized = new Promise(resolve => {\n  ft_render_fabric().then(module_instance => {\n    m = module_instance;\n    resolve();\n  });\n});\n\nfunction from_16_16(fixed_point) {\n  return fixed_point / (1 << 16);\n}\n\nfunction from_26_6(fixed_point) {\n  return fixed_point / (1 << 6);\n}\n\nfunction int8_to_uint8(value) {\n  return value >= 0 ? value : value + 0x100;\n}\n\nlet FT_New_Memory_Face,\n    FT_Set_Char_Size,\n    FT_Set_Pixel_Sizes,\n    FT_Get_Char_Index,\n    FT_Load_Glyph,\n    FT_Get_Sfnt_Table,\n    FT_Get_Kerning,\n    FT_Done_Face;\n\nmodule.exports.init = async function () {\n  await runtime_initialized;\n  m._init_constants();\n\n  FT_New_Memory_Face = module.exports.FT_New_Memory_Face =\n    m.cwrap('FT_New_Memory_Face', 'number', [ 'number', 'number', 'number', 'number', 'number' ]);\n\n  FT_Set_Char_Size = module.exports.FT_Set_Char_Size =\n    m.cwrap('FT_Set_Char_Size', 'number', [ 'number', 'number', 'number', 'number', 'number' ]);\n\n  FT_Set_Pixel_Sizes = module.exports.FT_Set_Pixel_Sizes =\n    m.cwrap('FT_Set_Pixel_Sizes', 'number', [ 'number', 'number', 'number' ]);\n\n  FT_Get_Char_Index = module.exports.FT_Get_Char_Index =\n    m.cwrap('FT_Get_Char_Index', 'number', [ 'number', 'number' ]);\n\n  FT_Load_Glyph = module.exports.FT_Load_Glyph =\n    m.cwrap('FT_Load_Glyph', 'number', [ 'number', 'number', 'number' ]);\n\n  FT_Get_Sfnt_Table = module.exports.FT_Get_Sfnt_Table =\n    m.cwrap('FT_Get_Sfnt_Table', 'number', [ 'number', 'number' ]);\n\n  FT_Get_Kerning = module.exports.FT_Get_Kerning =\n    m.cwrap('FT_Get_Kerning', 'number', [ 'number', 'number', 'number', 'number', 'number' ]);\n\n  FT_Done_Face = module.exports.FT_Done_Face =\n    m.cwrap('FT_Done_Face', 'number', [ 'number' ]);\n\n  if (!library) {\n    let ptr = m._malloc(4);\n\n    try {\n      let error = m.ccall('FT_Init_FreeType', 'number', [ 'number' ], [ ptr ]);\n\n      if (error) throw new Error(`error in FT_Init_FreeType: ${error}`);\n\n      library = m.getValue(ptr, 'i32');\n    } finally {\n      m._free(ptr);\n    }\n  }\n};\n\n\nmodule.exports.fontface_create = function (source, size) {\n  let error;\n  let face = {\n    ptr: 0,\n    font: m._malloc(source.length)\n  };\n\n  m.writeArrayToMemory(source, face.font);\n\n  let ptr = m._malloc(4);\n\n  try {\n    error = FT_New_Memory_Face(library, face.font, source.length, 0, ptr);\n\n    if (error) throw new Error(`error in FT_New_Memory_Face: ${error}`);\n\n    face.ptr = m.getValue(ptr, 'i32');\n  } finally {\n    m._free(ptr);\n  }\n\n  // error = FT_Set_Char_Size(face.ptr, 0, size * 64, 300, 300);\n\n  if (error) throw new Error(`error in FT_Set_Char_Size: ${error}`);\n\n  error = FT_Set_Pixel_Sizes(face.ptr, 0, size);\n\n  if (error) throw new Error(`error in FT_Set_Pixel_Sizes: ${error}`);\n\n  let units_per_em = m.getValue(face.ptr + m.OFFSET_FACE_UNITS_PER_EM, 'i16');\n  let ascender     = m.getValue(face.ptr + m.OFFSET_FACE_ASCENDER, 'i16');\n  let descender    = m.getValue(face.ptr + m.OFFSET_FACE_DESCENDER, 'i16');\n  let height       = m.getValue(face.ptr + m.OFFSET_FACE_HEIGHT, 'i16');\n\n  return Object.assign(face, {\n    units_per_em,\n    ascender,\n    descender,\n    height\n  });\n};\n\n\nmodule.exports.fontface_os2_table = function (face) {\n  let sfnt_ptr = FT_Get_Sfnt_Table(face.ptr, m.FT_SFNT_OS2);\n\n  if (!sfnt_ptr) throw new Error('os/2 table not found for this font');\n\n  let typoAscent  = m.getValue(sfnt_ptr + m.OFFSET_TT_OS2_ASCENDER, 'i16');\n  let typoDescent = m.getValue(sfnt_ptr + m.OFFSET_TT_OS2_DESCENDER, 'i16');\n  let typoLineGap = m.getValue(sfnt_ptr + m.OFFSET_TT_OS2_LINEGAP, 'i16');\n\n  return {\n    typoAscent,\n    typoDescent,\n    typoLineGap\n  };\n};\n\n\nmodule.exports.get_kerning = function (face, code1, code2) {\n  let glyph1 = FT_Get_Char_Index(face.ptr, code1);\n  let glyph2 = FT_Get_Char_Index(face.ptr, code2);\n  let ptr = m._malloc(4 * 2);\n\n  try {\n    let error = FT_Get_Kerning(face.ptr, glyph1, glyph2, m.FT_KERNING_DEFAULT, ptr);\n\n    if (error) throw new Error(`error in FT_Get_Kerning: ${error}`);\n  } finally {\n    m._free(ptr);\n  }\n\n  return {\n    x: from_26_6(m.getValue(ptr, 'i32')),\n    y: from_26_6(m.getValue(ptr + 4, 'i32'))\n  };\n};\n\n\nmodule.exports.glyph_exists = function (face, code) {\n  let glyph_index = FT_Get_Char_Index(face.ptr, code);\n\n  return glyph_index !== 0;\n};\n\n\nmodule.exports.glyph_render = function (face, code, opts = {}) {\n  let glyph_index = FT_Get_Char_Index(face.ptr, code);\n\n  if (glyph_index === 0) throw new Error(`glyph does not exist for codepoint ${code}`);\n\n  let load_flags = m.FT_LOAD_RENDER | m.FT_LOAD_BITMAP_METRICS_ONLY;\n\n  if (opts.mono) {\n    load_flags |= m.FT_LOAD_TARGET_MONO;\n\n  } else if (opts.lcd) {\n    load_flags |= m.FT_LOAD_TARGET_LCD;\n\n  } else if (opts.lcd_v) {\n    load_flags |= m.FT_LOAD_TARGET_LCD_V;\n\n  } else {\n    /* eslint-disable no-lonely-if */\n\n    // Use \"light\" by default, it changes horizontal lines only.\n    // \"normal\" is more strong (with vertical lines), but will break kerning, if\n    // no additional care taken. More advanced rendering requires upper level\n    // layout support (via Harfbuzz, for example).\n    if (!opts.autohint_strong) load_flags |= m.FT_LOAD_TARGET_LIGHT;\n    else load_flags |= m.FT_LOAD_TARGET_NORMAL;\n  }\n\n  if (opts.autohint_off) load_flags |= m.FT_LOAD_NO_AUTOHINT;\n  else load_flags |= m.FT_LOAD_FORCE_AUTOHINT;\n\n  let error = FT_Load_Glyph(face.ptr, glyph_index, load_flags);\n\n  if (error) throw new Error(`error in FT_Load_Glyph: ${error}`);\n\n  let glyph = m.getValue(face.ptr + m.OFFSET_FACE_GLYPH, 'i32');\n\n  let glyph_data = {\n    glyph_index: m.getValue(glyph + m.OFFSET_GLYPH_INDEX, 'i32'),\n    metrics: {\n      width:        from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_WIDTH, 'i32')),\n      height:       from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_HEIGHT, 'i32')),\n      horiBearingX: from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_HORI_BEARING_X, 'i32')),\n      horiBearingY: from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_HORI_BEARING_Y, 'i32')),\n      horiAdvance:  from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_HORI_ADVANCE, 'i32')),\n      vertBearingX: from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_VERT_BEARING_X, 'i32')),\n      vertBearingY: from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_VERT_BEARING_Y, 'i32')),\n      vertAdvance:  from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_METRICS_VERT_ADVANCE, 'i32'))\n    },\n    linearHoriAdvance: from_16_16(m.getValue(glyph + m.OFFSET_GLYPH_LINEAR_HORI_ADVANCE, 'i32')),\n    linearVertAdvance: from_16_16(m.getValue(glyph + m.OFFSET_GLYPH_LINEAR_VERT_ADVANCE, 'i32')),\n    advance: {\n      x: from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_ADVANCE_X, 'i32')),\n      y: from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_ADVANCE_Y, 'i32'))\n    },\n    bitmap: {\n      width:        m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_WIDTH, 'i32'),\n      rows:         m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_ROWS, 'i32'),\n      pitch:        m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_PITCH, 'i32'),\n      num_grays:    m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_NUM_GRAYS, 'i16'),\n      pixel_mode:   m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_PIXEL_MODE, 'i8'),\n      palette_mode: m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_PALETTE_MODE, 'i8')\n    },\n    bitmap_left: m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_LEFT, 'i32'),\n    bitmap_top:  m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_TOP, 'i32'),\n    lsb_delta:   from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_LSB_DELTA, 'i32')),\n    rsb_delta:   from_26_6(m.getValue(glyph + m.OFFSET_GLYPH_RSB_DELTA, 'i32'))\n  };\n\n  let g_w = glyph_data.bitmap.width;\n  let g_h = glyph_data.bitmap.rows;\n  let g_x = glyph_data.bitmap_left;\n  let g_y = glyph_data.bitmap_top;\n\n  let buffer = m.getValue(glyph + m.OFFSET_GLYPH_BITMAP_BUFFER, 'i32');\n  let pitch  = Math.abs(glyph_data.bitmap.pitch);\n\n  let advance_x = (glyph_data.bitmap.width > 0) ? glyph_data.metrics.horiAdvance : glyph_data.linearHoriAdvance;\n  let advance_y = (glyph_data.bitmap.width > 0) ? glyph_data.metrics.vertAdvance : glyph_data.linearVertAdvance;\n\n  let output = [];\n\n  for (let y = 0; y < g_h; y++) {\n    let row_start = buffer + y * pitch;\n    let line = [];\n\n    for (let x = 0; x < g_w; x++) {\n      if (opts.mono) {\n        let value = m.getValue(row_start + ~~(x / 8), 'i8');\n        line.push(value & (1 << (7 - (x % 8))) ? 255 : 0);\n      } else {\n        let value = m.getValue(row_start + x, 'i8');\n        line.push(int8_to_uint8(value));\n      }\n    }\n\n    output.push(line);\n  }\n\n  return {\n    x: g_x,\n    y: g_y,\n    width: g_w,\n    height: g_h,\n    advance_x,\n    advance_y,\n    pixels: output, //this\n    freetype: glyph_data\n  };\n};\n\n\nmodule.exports.fontface_destroy = function (face) {\n  let error = FT_Done_Face(face.ptr);\n\n  if (error) throw new Error(`error in FT_Done_Face: ${error}`);\n\n  m._free(face.font);\n  face.ptr = 0;\n  face.font = 0;\n};\n\n\nmodule.exports.destroy = function () {\n  let error = m.ccall('FT_Done_FreeType', 'number', ['number'], [library]);\n\n  if (error) throw new Error(`error in FT_Done_FreeType: ${error}`);\n\n  library = 0;\n\n  // don't unload wasm - slows down tests too much\n  //m = null;\n};\n","// ISC @ Julien Fontanet\n\n\"use strict\";\n\n// ===================================================================\n\nvar construct = typeof Reflect !== \"undefined\" ? Reflect.construct : undefined;\nvar defineProperty = Object.defineProperty;\n\n// -------------------------------------------------------------------\n\nvar captureStackTrace = Error.captureStackTrace;\nif (captureStackTrace === undefined) {\n  captureStackTrace = function captureStackTrace(error) {\n    var container = new Error();\n\n    defineProperty(error, \"stack\", {\n      configurable: true,\n      get: function getStack() {\n        var stack = container.stack;\n\n        // Replace property with value for faster future accesses.\n        defineProperty(this, \"stack\", {\n          configurable: true,\n          value: stack,\n          writable: true,\n        });\n\n        return stack;\n      },\n      set: function setStack(stack) {\n        defineProperty(error, \"stack\", {\n          configurable: true,\n          value: stack,\n          writable: true,\n        });\n      },\n    });\n  };\n}\n\n// -------------------------------------------------------------------\n\nfunction BaseError(message) {\n  if (message !== undefined) {\n    defineProperty(this, \"message\", {\n      configurable: true,\n      value: message,\n      writable: true,\n    });\n  }\n\n  var cname = this.constructor.name;\n  if (cname !== undefined && cname !== this.name) {\n    defineProperty(this, \"name\", {\n      configurable: true,\n      value: cname,\n      writable: true,\n    });\n  }\n\n  captureStackTrace(this, this.constructor);\n}\n\nBaseError.prototype = Object.create(Error.prototype, {\n  // See: https://github.com/JsCommunity/make-error/issues/4\n  constructor: {\n    configurable: true,\n    value: BaseError,\n    writable: true,\n  },\n});\n\n// -------------------------------------------------------------------\n\n// Sets the name of a function if possible (depends of the JS engine).\nvar setFunctionName = (function() {\n  function setFunctionName(fn, name) {\n    return defineProperty(fn, \"name\", {\n      configurable: true,\n      value: name,\n    });\n  }\n  try {\n    var f = function() {};\n    setFunctionName(f, \"foo\");\n    if (f.name === \"foo\") {\n      return setFunctionName;\n    }\n  } catch (_) {}\n})();\n\n// -------------------------------------------------------------------\n\nfunction makeError(constructor, super_) {\n  if (super_ == null || super_ === Error) {\n    super_ = BaseError;\n  } else if (typeof super_ !== \"function\") {\n    throw new TypeError(\"super_ should be a function\");\n  }\n\n  var name;\n  if (typeof constructor === \"string\") {\n    name = constructor;\n    constructor =\n      construct !== undefined\n        ? function() {\n            return construct(super_, arguments, this.constructor);\n          }\n        : function() {\n            super_.apply(this, arguments);\n          };\n\n    // If the name can be set, do it once and for all.\n    if (setFunctionName !== undefined) {\n      setFunctionName(constructor, name);\n      name = undefined;\n    }\n  } else if (typeof constructor !== \"function\") {\n    throw new TypeError(\"constructor should be either a string or a function\");\n  }\n\n  // Also register the super constructor also as `constructor.super_` just\n  // like Node's `util.inherits()`.\n  //\n  // eslint-disable-next-line dot-notation\n  constructor.super_ = constructor[\"super\"] = super_;\n\n  var properties = {\n    constructor: {\n      configurable: true,\n      value: constructor,\n      writable: true,\n    },\n  };\n\n  // If the name could not be set on the constructor, set it on the\n  // prototype.\n  if (name !== undefined) {\n    properties.name = {\n      configurable: true,\n      value: name,\n      writable: true,\n    };\n  }\n  constructor.prototype = Object.create(super_.prototype, properties);\n\n  return constructor;\n}\nexports = module.exports = makeError;\nexports.BaseError = BaseError;\n","// Custom Error type to simplify error messaging\n//\n'use strict';\n\n\n//const ExtendableError = require('es6-error');\n//module.exports = class AppError extends ExtendableError {};\n\nmodule.exports = require('make-error')('AppError');\n","// Merge ranges into single object\n\n'use strict';\n\n\nclass Ranger {\n  constructor() {\n    this.data = {};\n  }\n\n  // input:\n  //  -r 0x1F450 - single value, dec or hex format\n  //  -r 0x1F450-0x1F470 - range\n  //  -r 0x1F450=>0xF005 - single glyph with mapping\n  //  -r 0x1F450-0x1F470=>0xF005 - range with mapping\n  add_range(font, start, end, mapped_start) {\n    let offset = mapped_start - start;\n    let output = [];\n\n    for (let i = start; i <= end; i++) {\n      this._set_char(font, i, i + offset);\n      output.push(i);\n    }\n\n    return output;\n  }\n\n  // input: characters to copy, e.g. '1234567890abcdef'\n  add_symbols(font, str) {\n    let output = [];\n\n    for (let chr of str) {\n      let code = chr.codePointAt(0);\n      this._set_char(font, code, code);\n      output.push(code);\n    }\n\n    return output;\n  }\n\n  _set_char(font, code, mapped_to) {\n    this.data[mapped_to] = { font, code };\n  }\n\n  get() {\n    return this.data;\n  }\n}\n\n\nmodule.exports = Ranger;\n","// Read fonts\n\n'use strict';\n\n\nconst opentype  = require('opentype.js');\nconst ft_render = require('./freetype');\nconst AppError  = require('./app_error');\nconst Ranger    = require('./ranger');\n\n\nmodule.exports = async function collect_font_data(args) {\n  await ft_render.init();\n\n  // Duplicate font options as k/v for quick access\n  let fonts_options = {};\n  args.font.forEach(f => { fonts_options[f.source_path] = f; });\n\n  // read fonts\n  let fonts_opentype = {};\n  let fonts_freetype = {};\n\n  for (let { source_path, source_bin } of args.font) {\n    // don't load font again if it's specified multiple times in args\n    if (fonts_opentype[source_path]) continue;\n\n    try {\n      let b = source_bin; //this\n\n      if (Buffer.isBuffer(b)) {\n        // node.js Buffer -> ArrayBuffer\n        b = b.buffer.slice(b.byteOffset, b.byteOffset + b.byteLength);\n      }\n\n      fonts_opentype[source_path] = opentype.parse(b);\n    } catch (err) {\n      throw new AppError(`Cannot load font \"${source_path}\": ${err.message}`);\n    }\n    // save to this\n    fonts_freetype[source_path] = ft_render.fontface_create(source_bin, args.size);\n  }\n\n  // merge all ranges\n  let ranger = new Ranger();\n\n  for (let { source_path, ranges } of args.font) {\n    let font = fonts_freetype[source_path];\n\n    for (let item of ranges) {\n      /* eslint-disable max-depth */\n      if (item.range) {\n        for (let i = 0; i < item.range.length; i += 3) {\n          let range = item.range.slice(i, i + 3);\n          let chars = ranger.add_range(source_path, ...range);\n          let is_empty = true;\n\n          for (let code of chars) {\n            if (ft_render.glyph_exists(font, code)) {\n              is_empty = false;\n              break;\n            }\n          }\n\n          if (is_empty) {\n            let a = '0x' + range[0].toString(16);\n            let b = '0x' + range[1].toString(16);\n            throw new AppError(`Font \"${source_path}\" doesn't have any characters included in range ${a}-${b}`);\n          }\n        }\n      }\n\n      if (item.symbols) {\n        let chars = ranger.add_symbols(source_path, item.symbols);\n        let is_empty = true;\n\n        for (let code of chars) {\n          if (ft_render.glyph_exists(font, code)) {\n            is_empty = false;\n            break;\n          }\n        }\n\n        if (is_empty) {\n          throw new AppError(`Font \"${source_path}\" doesn't have any characters included in \"${item.symbols}\"`);\n        }\n      }\n    }\n  }\n\n  let mapping = ranger.get();\n  let glyphs = [];\n  let all_dst_charcodes = Object.keys(mapping).sort((a, b) => a - b).map(Number);\n\n  for (let dst_code of all_dst_charcodes) {\n    let src_code = mapping[dst_code].code;\n    let src_font = mapping[dst_code].font;\n\n    if (!ft_render.glyph_exists(fonts_freetype[src_font], src_code)) continue;\n\n    let ft_result = ft_render.glyph_render(\n      fonts_freetype[src_font],\n      src_code,\n      {\n        autohint_off: fonts_options[src_font].autohint_off,\n        autohint_strong: fonts_options[src_font].autohint_strong,\n        lcd: args.lcd,\n        lcd_v: args.lcd_v,\n        mono: !args.lcd && !args.lcd_v && args.bpp === 1\n      }\n    );\n\n    glyphs.push({\n      code: dst_code,\n      advanceWidth: ft_result.advance_x,// adv_w this\n      // look at @lv_table_glyf.js to_lv_glyph_dsc();\n      bbox: {\n        x: ft_result.x,\n        y: ft_result.y - ft_result.height,\n        width: ft_result.width,\n        height: ft_result.height\n      },\n      kerning: {},\n      freetype: ft_result.freetype,\n      pixels: ft_result.pixels // this\n    });\n  }\n\n  if (!args.no_kerning) {\n    let existing_dst_charcodes = glyphs.map(g => g.code);\n\n    for (let { code, kerning } of glyphs) {\n      let src_code = mapping[code].code;\n      let src_font = mapping[code].font;\n      let font     = fonts_opentype[src_font];\n      let glyph    = font.charToGlyph(String.fromCodePoint(src_code));\n\n      for (let dst_code2 of existing_dst_charcodes) {\n        // can't merge kerning values from 2 different fonts\n        if (mapping[dst_code2].font !== src_font) continue;\n\n        let src_code2 = mapping[dst_code2].code;\n        let glyph2 = font.charToGlyph(String.fromCodePoint(src_code2));\n        let krn_value = font.getKerningValue(glyph, glyph2);\n\n        if (krn_value) kerning[dst_code2] = krn_value * args.size / font.unitsPerEm;\n\n        //let krn_value = ft_render.get_kerning(font, src_code, src_code2).x;\n        //if (krn_value) kerning[dst_code2] = krn_value;\n      }\n    }\n  }\n\n  let first_font = fonts_freetype[args.font[0].source_path];\n  let first_font_scale = args.size / first_font.units_per_em;\n  let os2_metrics = ft_render.fontface_os2_table(first_font);\n  let post_table = fonts_opentype[args.font[0].source_path].tables.post;\n\n  for (let font of Object.values(fonts_freetype)) ft_render.fontface_destroy(font);\n\n  ft_render.destroy();\n\n  return {\n    ascent:      Math.max(...glyphs.map(g => g.bbox.y + g.bbox.height)),\n    descent:     Math.min(...glyphs.map(g => g.bbox.y)),\n    typoAscent:  Math.round(os2_metrics.typoAscent * first_font_scale),\n    typoDescent: Math.round(os2_metrics.typoDescent * first_font_scale),\n    typoLineGap: Math.round(os2_metrics.typoLineGap * first_font_scale),\n    size:        args.size,\n    glyphs,\n    underlinePosition:  Math.round(post_table.underlinePosition * first_font_scale),\n    underlineThickness: Math.round(post_table.underlineThickness * first_font_scale)\n  };\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require('events').EventEmitter;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\nvar kMaxLength = require('buffer').kMaxLength;\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys = Object.keys(binding);\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true, value: binding[bkey], writable: false\n    });\n  }\n}\n\n// translation table for return codes.\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nvar ckeys = Object.keys(codes);\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true, value: Object.freeze(codes), writable: false\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n\n  var flushFlag = engine._finishFlushFlag;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n\n  Object.defineProperty(this, '_closed', {\n    get: function () {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n      self._handle.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback);\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n\n  if (!this._handle) return cb(new Error('zlib binding closed'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n\n    assert(this._handle, 'zlib binding closed');\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\n\nlet ChunkStream = (module.exports = function () {\n  Stream.call(this);\n\n  this._buffers = [];\n  this._buffered = 0;\n\n  this._reads = [];\n  this._paused = false;\n\n  this._encoding = \"utf8\";\n  this.writable = true;\n});\nutil.inherits(ChunkStream, Stream);\n\nChunkStream.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length), // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback,\n  });\n\n  process.nextTick(\n    function () {\n      this._process();\n\n      // its paused and there is not enought data then ask for more\n      if (this._paused && this._reads && this._reads.length > 0) {\n        this._paused = false;\n\n        this.emit(\"drain\");\n      }\n    }.bind(this)\n  );\n};\n\nChunkStream.prototype.write = function (data, encoding) {\n  if (!this.writable) {\n    this.emit(\"error\", new Error(\"Stream not writable\"));\n    return false;\n  }\n\n  let dataBuffer;\n  if (Buffer.isBuffer(data)) {\n    dataBuffer = data;\n  } else {\n    dataBuffer = Buffer.from(data, encoding || this._encoding);\n  }\n\n  this._buffers.push(dataBuffer);\n  this._buffered += dataBuffer.length;\n\n  this._process();\n\n  // ok if there are no more read requests\n  if (this._reads && this._reads.length === 0) {\n    this._paused = true;\n  }\n\n  return this.writable && !this._paused;\n};\n\nChunkStream.prototype.end = function (data, encoding) {\n  if (data) {\n    this.write(data, encoding);\n  }\n\n  this.writable = false;\n\n  // already destroyed\n  if (!this._buffers) {\n    return;\n  }\n\n  // enqueue or handle end\n  if (this._buffers.length === 0) {\n    this._end();\n  } else {\n    this._buffers.push(null);\n    this._process();\n  }\n};\n\nChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\n\nChunkStream.prototype._end = function () {\n  if (this._reads.length > 0) {\n    this.emit(\"error\", new Error(\"Unexpected end of input\"));\n  }\n\n  this.destroy();\n};\n\nChunkStream.prototype.destroy = function () {\n  if (!this._buffers) {\n    return;\n  }\n\n  this.writable = false;\n  this._reads = null;\n  this._buffers = null;\n\n  this.emit(\"close\");\n};\n\nChunkStream.prototype._processReadAllowingLess = function (read) {\n  // ok there is any data so that we can satisfy this request\n  this._reads.shift(); // == read\n\n  // first we need to peek into first buffer\n  let smallerBuf = this._buffers[0];\n\n  // ok there is more data than we need\n  if (smallerBuf.length > read.length) {\n    this._buffered -= read.length;\n    this._buffers[0] = smallerBuf.slice(read.length);\n\n    read.func.call(this, smallerBuf.slice(0, read.length));\n  } else {\n    // ok this is less than maximum length so use it all\n    this._buffered -= smallerBuf.length;\n    this._buffers.shift(); // == smallerBuf\n\n    read.func.call(this, smallerBuf);\n  }\n};\n\nChunkStream.prototype._processRead = function (read) {\n  this._reads.shift(); // == read\n\n  let pos = 0;\n  let count = 0;\n  let data = Buffer.alloc(read.length);\n\n  // create buffer for all data\n  while (pos < read.length) {\n    let buf = this._buffers[count++];\n    let len = Math.min(buf.length, read.length - pos);\n\n    buf.copy(data, pos, 0, len);\n    pos += len;\n\n    // last buffer wasn't used all so just slice it and leave\n    if (len !== buf.length) {\n      this._buffers[--count] = buf.slice(len);\n    }\n  }\n\n  // remove all used buffers\n  if (count > 0) {\n    this._buffers.splice(0, count);\n  }\n\n  this._buffered -= read.length;\n\n  read.func.call(this, data);\n};\n\nChunkStream.prototype._process = function () {\n  try {\n    // as long as there is any data and read requests\n    while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n      let read = this._reads[0];\n\n      // read any data (but no more than length)\n      if (read.allowLess) {\n        this._processReadAllowingLess(read);\n      } else if (this._buffered >= read.length) {\n        // ok we can meet some expectations\n\n        this._processRead(read);\n      } else {\n        // not enought data to satisfy first request in queue\n        // so we need to wait for more\n        break;\n      }\n    }\n\n    if (this._buffers && !this.writable) {\n      this._end();\n    }\n  } catch (ex) {\n    this.emit(\"error\", ex);\n  }\n};\n","\"use strict\";\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\nlet imagePasses = [\n  {\n    // pass 1 - 1px\n    x: [0],\n    y: [0],\n  },\n  {\n    // pass 2 - 1px\n    x: [4],\n    y: [0],\n  },\n  {\n    // pass 3 - 2px\n    x: [0, 4],\n    y: [4],\n  },\n  {\n    // pass 4 - 4px\n    x: [2, 6],\n    y: [0, 4],\n  },\n  {\n    // pass 5 - 8px\n    x: [0, 2, 4, 6],\n    y: [2, 6],\n  },\n  {\n    // pass 6 - 16px\n    x: [1, 3, 5, 7],\n    y: [0, 2, 4, 6],\n  },\n  {\n    // pass 7 - 32px\n    x: [0, 1, 2, 3, 4, 5, 6, 7],\n    y: [1, 3, 5, 7],\n  },\n];\n\nexports.getImagePasses = function (width, height) {\n  let images = [];\n  let xLeftOver = width % 8;\n  let yLeftOver = height % 8;\n  let xRepeats = (width - xLeftOver) / 8;\n  let yRepeats = (height - yLeftOver) / 8;\n  for (let i = 0; i < imagePasses.length; i++) {\n    let pass = imagePasses[i];\n    let passWidth = xRepeats * pass.x.length;\n    let passHeight = yRepeats * pass.y.length;\n    for (let j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n    for (let j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({ width: passWidth, height: passHeight, index: i });\n    }\n  }\n  return images;\n};\n\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    let outerXLeftOver = x % imagePasses[pass].x.length;\n    let outerX =\n      ((x - outerXLeftOver) / imagePasses[pass].x.length) * 8 +\n      imagePasses[pass].x[outerXLeftOver];\n    let outerYLeftOver = y % imagePasses[pass].y.length;\n    let outerY =\n      ((y - outerYLeftOver) / imagePasses[pass].y.length) * 8 +\n      imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};\n","\"use strict\";\n\nmodule.exports = function paethPredictor(left, above, upLeft) {\n  let paeth = left + above - upLeft;\n  let pLeft = Math.abs(paeth - left);\n  let pAbove = Math.abs(paeth - above);\n  let pUpLeft = Math.abs(paeth - upLeft);\n\n  if (pLeft <= pAbove && pLeft <= pUpLeft) {\n    return left;\n  }\n  if (pAbove <= pUpLeft) {\n    return above;\n  }\n  return upLeft;\n};\n","\"use strict\";\n\nlet interlaceUtils = require(\"./interlace\");\nlet paethPredictor = require(\"./paeth-predictor\");\n\nfunction getByteWidth(width, bpp, depth) {\n  let byteWidth = width * bpp;\n  if (depth !== 8) {\n    byteWidth = Math.ceil(byteWidth / (8 / depth));\n  }\n  return byteWidth;\n}\n\nlet Filter = (module.exports = function (bitmapInfo, dependencies) {\n  let width = bitmapInfo.width;\n  let height = bitmapInfo.height;\n  let interlace = bitmapInfo.interlace;\n  let bpp = bitmapInfo.bpp;\n  let depth = bitmapInfo.depth;\n\n  this.read = dependencies.read;\n  this.write = dependencies.write;\n  this.complete = dependencies.complete;\n\n  this._imageIndex = 0;\n  this._images = [];\n  if (interlace) {\n    let passes = interlaceUtils.getImagePasses(width, height);\n    for (let i = 0; i < passes.length; i++) {\n      this._images.push({\n        byteWidth: getByteWidth(passes[i].width, bpp, depth),\n        height: passes[i].height,\n        lineIndex: 0,\n      });\n    }\n  } else {\n    this._images.push({\n      byteWidth: getByteWidth(width, bpp, depth),\n      height: height,\n      lineIndex: 0,\n    });\n  }\n\n  // when filtering the line we look at the pixel to the left\n  // the spec also says it is done on a byte level regardless of the number of pixels\n  // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\n  // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\n  if (depth === 8) {\n    this._xComparison = bpp;\n  } else if (depth === 16) {\n    this._xComparison = bpp * 2;\n  } else {\n    this._xComparison = 1;\n  }\n});\n\nFilter.prototype.start = function () {\n  this.read(\n    this._images[this._imageIndex].byteWidth + 1,\n    this._reverseFilterLine.bind(this)\n  );\n};\n\nFilter.prototype._unFilterType1 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    unfilteredLine[x] = rawByte + f1Left;\n  }\n};\n\nFilter.prototype._unFilterType2 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let lastLine = this._lastLine;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f2Up = lastLine ? lastLine[x] : 0;\n    unfilteredLine[x] = rawByte + f2Up;\n  }\n};\n\nFilter.prototype._unFilterType3 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  let lastLine = this._lastLine;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f3Up = lastLine ? lastLine[x] : 0;\n    let f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    let f3Add = Math.floor((f3Left + f3Up) / 2);\n    unfilteredLine[x] = rawByte + f3Add;\n  }\n};\n\nFilter.prototype._unFilterType4 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  let lastLine = this._lastLine;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f4Up = lastLine ? lastLine[x] : 0;\n    let f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    let f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\n    let f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\n    unfilteredLine[x] = rawByte + f4Add;\n  }\n};\n\nFilter.prototype._reverseFilterLine = function (rawData) {\n  let filter = rawData[0];\n  let unfilteredLine;\n  let currentImage = this._images[this._imageIndex];\n  let byteWidth = currentImage.byteWidth;\n\n  if (filter === 0) {\n    unfilteredLine = rawData.slice(1, byteWidth + 1);\n  } else {\n    unfilteredLine = Buffer.alloc(byteWidth);\n\n    switch (filter) {\n      case 1:\n        this._unFilterType1(rawData, unfilteredLine, byteWidth);\n        break;\n      case 2:\n        this._unFilterType2(rawData, unfilteredLine, byteWidth);\n        break;\n      case 3:\n        this._unFilterType3(rawData, unfilteredLine, byteWidth);\n        break;\n      case 4:\n        this._unFilterType4(rawData, unfilteredLine, byteWidth);\n        break;\n      default:\n        throw new Error(\"Unrecognised filter type - \" + filter);\n    }\n  }\n\n  this.write(unfilteredLine);\n\n  currentImage.lineIndex++;\n  if (currentImage.lineIndex >= currentImage.height) {\n    this._lastLine = null;\n    this._imageIndex++;\n    currentImage = this._images[this._imageIndex];\n  } else {\n    this._lastLine = unfilteredLine;\n  }\n\n  if (currentImage) {\n    // read, using the byte width that may be from the new current image\n    this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\n  } else {\n    this._lastLine = null;\n    this.complete();\n  }\n};\n","\"use strict\";\n\nlet util = require(\"util\");\nlet ChunkStream = require(\"./chunkstream\");\nlet Filter = require(\"./filter-parse\");\n\nlet FilterAsync = (module.exports = function (bitmapInfo) {\n  ChunkStream.call(this);\n\n  let buffers = [];\n  let that = this;\n  this._filter = new Filter(bitmapInfo, {\n    read: this.read.bind(this),\n    write: function (buffer) {\n      buffers.push(buffer);\n    },\n    complete: function () {\n      that.emit(\"complete\", Buffer.concat(buffers));\n    },\n  });\n\n  this._filter.start();\n});\nutil.inherits(FilterAsync, ChunkStream);\n","\"use strict\";\n\nmodule.exports = {\n  PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\n\n  TYPE_IHDR: 0x49484452,\n  TYPE_IEND: 0x49454e44,\n  TYPE_IDAT: 0x49444154,\n  TYPE_PLTE: 0x504c5445,\n  TYPE_tRNS: 0x74524e53, // eslint-disable-line camelcase\n  TYPE_gAMA: 0x67414d41, // eslint-disable-line camelcase\n\n  // color-type bits\n  COLORTYPE_GRAYSCALE: 0,\n  COLORTYPE_PALETTE: 1,\n  COLORTYPE_COLOR: 2,\n  COLORTYPE_ALPHA: 4, // e.g. grayscale and alpha\n\n  // color-type combinations\n  COLORTYPE_PALETTE_COLOR: 3,\n  COLORTYPE_COLOR_ALPHA: 6,\n\n  COLORTYPE_TO_BPP_MAP: {\n    0: 1,\n    2: 3,\n    3: 1,\n    4: 2,\n    6: 4,\n  },\n\n  GAMMA_DIVISION: 100000,\n};\n","\"use strict\";\n\nlet crcTable = [];\n\n(function () {\n  for (let i = 0; i < 256; i++) {\n    let currentCrc = i;\n    for (let j = 0; j < 8; j++) {\n      if (currentCrc & 1) {\n        currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\n      } else {\n        currentCrc = currentCrc >>> 1;\n      }\n    }\n    crcTable[i] = currentCrc;\n  }\n})();\n\nlet CrcCalculator = (module.exports = function () {\n  this._crc = -1;\n});\n\nCrcCalculator.prototype.write = function (data) {\n  for (let i = 0; i < data.length; i++) {\n    this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);\n  }\n  return true;\n};\n\nCrcCalculator.prototype.crc32 = function () {\n  return this._crc ^ -1;\n};\n\nCrcCalculator.crc32 = function (buf) {\n  let crc = -1;\n  for (let i = 0; i < buf.length; i++) {\n    crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n  }\n  return crc ^ -1;\n};\n","\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcCalculator = require(\"./crc\");\n\nlet Parser = (module.exports = function (options, dependencies) {\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n  this.headersFinished = dependencies.headersFinished || function () {};\n});\n\nParser.prototype.start = function () {\n  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n};\n\nParser.prototype._parseSignature = function (data) {\n  let signature = constants.PNG_SIGNATURE;\n\n  for (let i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error(\"Invalid file signature\"));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin = function (data) {\n  // chunk content length\n  let length = data.readUInt32BE(0);\n\n  // chunk type\n  let type = data.readUInt32BE(4);\n  let name = \"\";\n  for (let i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  let ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error(\"Expected IHDR on beggining\"));\n    return;\n  }\n\n  this._crc = new CrcCalculator();\n  this._crc.write(Buffer.from(name));\n\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n\n  if (!ancillary) {\n    this.error(new Error(\"Unsupported critical chunk type \" + name));\n    return;\n  }\n\n  this.read(length + 4, this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk = function (/*data*/) {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd = function () {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd = function (data) {\n  let fileCrc = data.readInt32BE(0);\n  let calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error(\"Crc error - \" + fileCrc + \" - \" + calcCrc));\n    return;\n  }\n\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\n\nParser.prototype._handleIHDR = function (length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function (data) {\n  this._crc.write(data);\n\n  let width = data.readUInt32BE(0);\n  let height = data.readUInt32BE(4);\n  let depth = data[8];\n  let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  let compr = data[10];\n  let filter = data[11];\n  let interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (\n    depth !== 8 &&\n    depth !== 4 &&\n    depth !== 2 &&\n    depth !== 1 &&\n    depth !== 16\n  ) {\n    this.error(new Error(\"Unsupported bit depth \" + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error(\"Unsupported color type\"));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error(\"Unsupported compression method\"));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error(\"Unsupported filter method\"));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error(\"Unsupported interlace method\"));\n    return;\n  }\n\n  this._colorType = colorType;\n\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\n  this._hasIHDR = true;\n\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType,\n  });\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handlePLTE = function (length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function (data) {\n  this._crc.write(data);\n\n  let entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (let i = 0; i < entries; i++) {\n    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n  }\n\n  this.palette(this._palette);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS = function (length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function (data) {\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error(\"Transparency chunk must be after palette\"));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error(\"More transparent colors than palette size\"));\n      return;\n    }\n    for (let i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([\n      data.readUInt16BE(0),\n      data.readUInt16BE(2),\n      data.readUInt16BE(4),\n    ]);\n  }\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA = function (length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function (data) {\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT = function (length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function (length, data) {\n  this._crc.write(data);\n\n  if (\n    this._colorType === constants.COLORTYPE_PALETTE_COLOR &&\n    this._palette.length === 0\n  ) {\n    throw new Error(\"Expected palette not found\");\n  }\n\n  this.inflateData(data);\n  let leftOverLength = length - data.length;\n\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  } else {\n    this._handleChunkEnd();\n  }\n};\n\nParser.prototype._handleIEND = function (length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function (data) {\n  this._crc.write(data);\n\n  this._hasIEND = true;\n  this._handleChunkEnd();\n\n  if (this.finished) {\n    this.finished();\n  }\n};\n","\"use strict\";\n\nlet interlaceUtils = require(\"./interlace\");\n\nlet pixelBppMapper = [\n  // 0 - dummy entry\n  function () {},\n\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos === data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    let pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = 0xff;\n  },\n\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 1 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    let pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = data[rawPos + 1];\n  },\n\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 2 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = 0xff;\n  },\n\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 3 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = data[rawPos + 3];\n  },\n];\n\nlet pixelBppCustomMapper = [\n  // 0 - dummy entry\n  function () {},\n\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function (pxData, pixelData, pxPos, maxBit) {\n    let pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = maxBit;\n  },\n\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function (pxData, pixelData, pxPos) {\n    let pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = pixelData[1];\n  },\n\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function (pxData, pixelData, pxPos, maxBit) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = maxBit;\n  },\n\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function (pxData, pixelData, pxPos) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = pixelData[3];\n  },\n];\n\nfunction bitRetriever(data, depth) {\n  let leftOver = [];\n  let i = 0;\n\n  function split() {\n    if (i === data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    let byte = data[i];\n    i++;\n    let byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n    switch (depth) {\n      default:\n        throw new Error(\"unrecognised depth\");\n      case 16:\n        byte2 = data[i];\n        i++;\n        leftOver.push((byte << 8) + byte2);\n        break;\n      case 4:\n        byte2 = byte & 0x0f;\n        byte1 = byte >> 4;\n        leftOver.push(byte1, byte2);\n        break;\n      case 2:\n        byte4 = byte & 3;\n        byte3 = (byte >> 2) & 3;\n        byte2 = (byte >> 4) & 3;\n        byte1 = (byte >> 6) & 3;\n        leftOver.push(byte1, byte2, byte3, byte4);\n        break;\n      case 1:\n        byte8 = byte & 1;\n        byte7 = (byte >> 1) & 1;\n        byte6 = (byte >> 2) & 1;\n        byte5 = (byte >> 3) & 1;\n        byte4 = (byte >> 4) & 1;\n        byte3 = (byte >> 5) & 1;\n        byte2 = (byte >> 6) & 1;\n        byte1 = (byte >> 7) & 1;\n        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n        break;\n    }\n  }\n\n  return {\n    get: function (count) {\n      while (leftOver.length < count) {\n        split();\n      }\n      let returner = leftOver.slice(0, count);\n      leftOver = leftOver.slice(count);\n      return returner;\n    },\n    resetAfterLine: function () {\n      leftOver.length = 0;\n    },\n    end: function () {\n      if (i !== data.length) {\n        throw new Error(\"extra data found\");\n      }\n    },\n  };\n}\n\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {\n  // eslint-disable-line max-params\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  let imagePass = image.index;\n  for (let y = 0; y < imageHeight; y++) {\n    for (let x = 0; x < imageWidth; x++) {\n      let pxPos = getPxPos(x, y, imagePass);\n      pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\n      rawPos += bpp; //eslint-disable-line no-param-reassign\n    }\n  }\n  return rawPos;\n}\n\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {\n  // eslint-disable-line max-params\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  let imagePass = image.index;\n  for (let y = 0; y < imageHeight; y++) {\n    for (let x = 0; x < imageWidth; x++) {\n      let pixelData = bits.get(bpp);\n      let pxPos = getPxPos(x, y, imagePass);\n      pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\n    }\n    bits.resetAfterLine();\n  }\n}\n\nexports.dataToBitMap = function (data, bitmapInfo) {\n  let width = bitmapInfo.width;\n  let height = bitmapInfo.height;\n  let depth = bitmapInfo.depth;\n  let bpp = bitmapInfo.bpp;\n  let interlace = bitmapInfo.interlace;\n  let bits;\n\n  if (depth !== 8) {\n    bits = bitRetriever(data, depth);\n  }\n  let pxData;\n  if (depth <= 8) {\n    pxData = Buffer.alloc(width * height * 4);\n  } else {\n    pxData = new Uint16Array(width * height * 4);\n  }\n  let maxBit = Math.pow(2, depth) - 1;\n  let rawPos = 0;\n  let images;\n  let getPxPos;\n\n  if (interlace) {\n    images = interlaceUtils.getImagePasses(width, height);\n    getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n  } else {\n    let nonInterlacedPxPos = 0;\n    getPxPos = function () {\n      let returner = nonInterlacedPxPos;\n      nonInterlacedPxPos += 4;\n      return returner;\n    };\n    images = [{ width: width, height: height }];\n  }\n\n  for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {\n    if (depth === 8) {\n      rawPos = mapImage8Bit(\n        images[imageIndex],\n        pxData,\n        getPxPos,\n        bpp,\n        data,\n        rawPos\n      );\n    } else {\n      mapImageCustomBit(\n        images[imageIndex],\n        pxData,\n        getPxPos,\n        bpp,\n        bits,\n        maxBit\n      );\n    }\n  }\n  if (depth === 8) {\n    if (rawPos !== data.length) {\n      throw new Error(\"extra data found\");\n    }\n  } else {\n    bits.end();\n  }\n\n  return pxData;\n};\n","\"use strict\";\n\nfunction dePalette(indata, outdata, width, height, palette) {\n  let pxPos = 0;\n  // use values from palette\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let color = palette[indata[pxPos]];\n\n      if (!color) {\n        throw new Error(\"index \" + indata[pxPos] + \" not in palette\");\n      }\n\n      for (let i = 0; i < 4; i++) {\n        outdata[pxPos + i] = color[i];\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nfunction replaceTransparentColor(indata, outdata, width, height, transColor) {\n  let pxPos = 0;\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let makeTrans = false;\n\n      if (transColor.length === 1) {\n        if (transColor[0] === indata[pxPos]) {\n          makeTrans = true;\n        }\n      } else if (\n        transColor[0] === indata[pxPos] &&\n        transColor[1] === indata[pxPos + 1] &&\n        transColor[2] === indata[pxPos + 2]\n      ) {\n        makeTrans = true;\n      }\n      if (makeTrans) {\n        for (let i = 0; i < 4; i++) {\n          outdata[pxPos + i] = 0;\n        }\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nfunction scaleDepth(indata, outdata, width, height, depth) {\n  let maxOutSample = 255;\n  let maxInSample = Math.pow(2, depth) - 1;\n  let pxPos = 0;\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      for (let i = 0; i < 4; i++) {\n        outdata[pxPos + i] = Math.floor(\n          (indata[pxPos + i] * maxOutSample) / maxInSample + 0.5\n        );\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nmodule.exports = function (indata, imageData) {\n  let depth = imageData.depth;\n  let width = imageData.width;\n  let height = imageData.height;\n  let colorType = imageData.colorType;\n  let transColor = imageData.transColor;\n  let palette = imageData.palette;\n\n  let outdata = indata; // only different for 16 bits\n\n  if (colorType === 3) {\n    // paletted\n    dePalette(indata, outdata, width, height, palette);\n  } else {\n    if (transColor) {\n      replaceTransparentColor(indata, outdata, width, height, transColor);\n    }\n    // if it needs scaling\n    if (depth !== 8) {\n      // if we need to change the buffer size\n      if (depth === 16) {\n        outdata = Buffer.alloc(width * height * 4);\n      }\n      scaleDepth(indata, outdata, width, height, depth);\n    }\n  }\n  return outdata;\n};\n","\"use strict\";\n\nlet util = require(\"util\");\nlet zlib = require(\"zlib\");\nlet ChunkStream = require(\"./chunkstream\");\nlet FilterAsync = require(\"./filter-parse-async\");\nlet Parser = require(\"./parser\");\nlet bitmapper = require(\"./bitmapper\");\nlet formatNormaliser = require(\"./format-normaliser\");\n\nlet ParserAsync = (module.exports = function (options) {\n  ChunkStream.call(this);\n\n  this._parser = new Parser(options, {\n    read: this.read.bind(this),\n    error: this._handleError.bind(this),\n    metadata: this._handleMetaData.bind(this),\n    gamma: this.emit.bind(this, \"gamma\"),\n    palette: this._handlePalette.bind(this),\n    transColor: this._handleTransColor.bind(this),\n    finished: this._finished.bind(this),\n    inflateData: this._inflateData.bind(this),\n    simpleTransparency: this._simpleTransparency.bind(this),\n    headersFinished: this._headersFinished.bind(this),\n  });\n  this._options = options;\n  this.writable = true;\n\n  this._parser.start();\n});\nutil.inherits(ParserAsync, ChunkStream);\n\nParserAsync.prototype._handleError = function (err) {\n  this.emit(\"error\", err);\n\n  this.writable = false;\n\n  this.destroy();\n\n  if (this._inflate && this._inflate.destroy) {\n    this._inflate.destroy();\n  }\n\n  if (this._filter) {\n    this._filter.destroy();\n    // For backward compatibility with Node 7 and below.\n    // Suppress errors due to _inflate calling write() even after\n    // it's destroy()'ed.\n    this._filter.on(\"error\", function () {});\n  }\n\n  this.errord = true;\n};\n\nParserAsync.prototype._inflateData = function (data) {\n  if (!this._inflate) {\n    if (this._bitmapInfo.interlace) {\n      this._inflate = zlib.createInflate();\n\n      this._inflate.on(\"error\", this.emit.bind(this, \"error\"));\n      this._filter.on(\"complete\", this._complete.bind(this));\n\n      this._inflate.pipe(this._filter);\n    } else {\n      let rowSize =\n        ((this._bitmapInfo.width *\n          this._bitmapInfo.bpp *\n          this._bitmapInfo.depth +\n          7) >>\n          3) +\n        1;\n      let imageSize = rowSize * this._bitmapInfo.height;\n      let chunkSize = Math.max(imageSize, zlib.Z_MIN_CHUNK);\n\n      this._inflate = zlib.createInflate({ chunkSize: chunkSize });\n      let leftToInflate = imageSize;\n\n      let emitError = this.emit.bind(this, \"error\");\n      this._inflate.on(\"error\", function (err) {\n        if (!leftToInflate) {\n          return;\n        }\n\n        emitError(err);\n      });\n      this._filter.on(\"complete\", this._complete.bind(this));\n\n      let filterWrite = this._filter.write.bind(this._filter);\n      this._inflate.on(\"data\", function (chunk) {\n        if (!leftToInflate) {\n          return;\n        }\n\n        if (chunk.length > leftToInflate) {\n          chunk = chunk.slice(0, leftToInflate);\n        }\n\n        leftToInflate -= chunk.length;\n\n        filterWrite(chunk);\n      });\n\n      this._inflate.on(\"end\", this._filter.end.bind(this._filter));\n    }\n  }\n  this._inflate.write(data);\n};\n\nParserAsync.prototype._handleMetaData = function (metaData) {\n  this._metaData = metaData;\n  this._bitmapInfo = Object.create(metaData);\n\n  this._filter = new FilterAsync(this._bitmapInfo);\n};\n\nParserAsync.prototype._handleTransColor = function (transColor) {\n  this._bitmapInfo.transColor = transColor;\n};\n\nParserAsync.prototype._handlePalette = function (palette) {\n  this._bitmapInfo.palette = palette;\n};\n\nParserAsync.prototype._simpleTransparency = function () {\n  this._metaData.alpha = true;\n};\n\nParserAsync.prototype._headersFinished = function () {\n  // Up until this point, we don't know if we have a tRNS chunk (alpha)\n  // so we can't emit metadata any earlier\n  this.emit(\"metadata\", this._metaData);\n};\n\nParserAsync.prototype._finished = function () {\n  if (this.errord) {\n    return;\n  }\n\n  if (!this._inflate) {\n    this.emit(\"error\", \"No Inflate block\");\n  } else {\n    // no more data to inflate\n    this._inflate.end();\n  }\n};\n\nParserAsync.prototype._complete = function (filteredData) {\n  if (this.errord) {\n    return;\n  }\n\n  let normalisedBitmapData;\n\n  try {\n    let bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n\n    normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\n    bitmapData = null;\n  } catch (ex) {\n    this._handleError(ex);\n    return;\n  }\n\n  this.emit(\"parsed\", normalisedBitmapData);\n};\n","\"use strict\";\n\nlet constants = require(\"./constants\");\n\nmodule.exports = function (dataIn, width, height, options) {\n  let outHasAlpha =\n    [constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(\n      options.colorType\n    ) !== -1;\n  if (options.colorType === options.inputColorType) {\n    let bigEndian = (function () {\n      let buffer = new ArrayBuffer(2);\n      new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n      // Int16Array uses the platform's endianness.\n      return new Int16Array(buffer)[0] !== 256;\n    })();\n    // If no need to convert to grayscale and alpha is present/absent in both, take a fast route\n    if (options.bitDepth === 8 || (options.bitDepth === 16 && bigEndian)) {\n      return dataIn;\n    }\n  }\n\n  // map to a UInt16 array if data is 16bit, fix endianness below\n  let data = options.bitDepth !== 16 ? dataIn : new Uint16Array(dataIn.buffer);\n\n  let maxValue = 255;\n  let inBpp = constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];\n  if (inBpp === 4 && !options.inputHasAlpha) {\n    inBpp = 3;\n  }\n  let outBpp = constants.COLORTYPE_TO_BPP_MAP[options.colorType];\n  if (options.bitDepth === 16) {\n    maxValue = 65535;\n    outBpp *= 2;\n  }\n  let outData = Buffer.alloc(width * height * outBpp);\n\n  let inIndex = 0;\n  let outIndex = 0;\n\n  let bgColor = options.bgColor || {};\n  if (bgColor.red === undefined) {\n    bgColor.red = maxValue;\n  }\n  if (bgColor.green === undefined) {\n    bgColor.green = maxValue;\n  }\n  if (bgColor.blue === undefined) {\n    bgColor.blue = maxValue;\n  }\n\n  function getRGBA() {\n    let red;\n    let green;\n    let blue;\n    let alpha = maxValue;\n    switch (options.inputColorType) {\n      case constants.COLORTYPE_COLOR_ALPHA:\n        alpha = data[inIndex + 3];\n        red = data[inIndex];\n        green = data[inIndex + 1];\n        blue = data[inIndex + 2];\n        break;\n      case constants.COLORTYPE_COLOR:\n        red = data[inIndex];\n        green = data[inIndex + 1];\n        blue = data[inIndex + 2];\n        break;\n      case constants.COLORTYPE_ALPHA:\n        alpha = data[inIndex + 1];\n        red = data[inIndex];\n        green = red;\n        blue = red;\n        break;\n      case constants.COLORTYPE_GRAYSCALE:\n        red = data[inIndex];\n        green = red;\n        blue = red;\n        break;\n      default:\n        throw new Error(\n          \"input color type:\" +\n            options.inputColorType +\n            \" is not supported at present\"\n        );\n    }\n\n    if (options.inputHasAlpha) {\n      if (!outHasAlpha) {\n        alpha /= maxValue;\n        red = Math.min(\n          Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0),\n          maxValue\n        );\n        green = Math.min(\n          Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0),\n          maxValue\n        );\n        blue = Math.min(\n          Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0),\n          maxValue\n        );\n      }\n    }\n    return { red: red, green: green, blue: blue, alpha: alpha };\n  }\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let rgba = getRGBA(data, inIndex);\n\n      switch (options.colorType) {\n        case constants.COLORTYPE_COLOR_ALPHA:\n        case constants.COLORTYPE_COLOR:\n          if (options.bitDepth === 8) {\n            outData[outIndex] = rgba.red;\n            outData[outIndex + 1] = rgba.green;\n            outData[outIndex + 2] = rgba.blue;\n            if (outHasAlpha) {\n              outData[outIndex + 3] = rgba.alpha;\n            }\n          } else {\n            outData.writeUInt16BE(rgba.red, outIndex);\n            outData.writeUInt16BE(rgba.green, outIndex + 2);\n            outData.writeUInt16BE(rgba.blue, outIndex + 4);\n            if (outHasAlpha) {\n              outData.writeUInt16BE(rgba.alpha, outIndex + 6);\n            }\n          }\n          break;\n        case constants.COLORTYPE_ALPHA:\n        case constants.COLORTYPE_GRAYSCALE: {\n          // Convert to grayscale and alpha\n          let grayscale = (rgba.red + rgba.green + rgba.blue) / 3;\n          if (options.bitDepth === 8) {\n            outData[outIndex] = grayscale;\n            if (outHasAlpha) {\n              outData[outIndex + 1] = rgba.alpha;\n            }\n          } else {\n            outData.writeUInt16BE(grayscale, outIndex);\n            if (outHasAlpha) {\n              outData.writeUInt16BE(rgba.alpha, outIndex + 2);\n            }\n          }\n          break;\n        }\n        default:\n          throw new Error(\"unrecognised color Type \" + options.colorType);\n      }\n\n      inIndex += inBpp;\n      outIndex += outBpp;\n    }\n  }\n\n  return outData;\n};\n","\"use strict\";\n\nlet paethPredictor = require(\"./paeth-predictor\");\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (let x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n  let sum = 0;\n  let length = pxPos + byteWidth;\n\n  for (let i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let val = pxData[pxPos + x] - left;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let val = pxData[pxPos + x] - left;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (let x = 0; x < byteWidth; x++) {\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - up;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n  let sum = 0;\n  let length = pxPos + byteWidth;\n  for (let x = pxPos; x < length; x++) {\n    let up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    let val = pxData[x] - up;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let upleft =\n      pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let upleft =\n      pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nlet filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth,\n};\n\nlet filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth,\n};\n\nmodule.exports = function (pxData, width, height, options, bpp) {\n  let filterTypes;\n  if (!(\"filterType\" in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  } else if (typeof options.filterType === \"number\") {\n    filterTypes = [options.filterType];\n  } else {\n    throw new Error(\"unrecognised filter types\");\n  }\n\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n  let byteWidth = width * bpp;\n  let rawPos = 0;\n  let pxPos = 0;\n  let rawData = Buffer.alloc((byteWidth + 1) * height);\n\n  let sel = filterTypes[0];\n\n  for (let y = 0; y < height; y++) {\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      let min = Infinity;\n\n      for (let i = 0; i < filterTypes.length; i++) {\n        let sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};\n","\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcStream = require(\"./crc\");\nlet bitPacker = require(\"./bitpacker\");\nlet filter = require(\"./filter-pack\");\nlet zlib = require(\"zlib\");\n\nlet Packer = (module.exports = function (options) {\n  this._options = options;\n\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel =\n    options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy =\n    options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha =\n    options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  // This is outputColorType\n  options.colorType =\n    typeof options.colorType === \"number\"\n      ? options.colorType\n      : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType =\n    typeof options.inputColorType === \"number\"\n      ? options.inputColorType\n      : constants.COLORTYPE_COLOR_ALPHA;\n\n  if (\n    [\n      constants.COLORTYPE_GRAYSCALE,\n      constants.COLORTYPE_COLOR,\n      constants.COLORTYPE_COLOR_ALPHA,\n      constants.COLORTYPE_ALPHA,\n    ].indexOf(options.colorType) === -1\n  ) {\n    throw new Error(\n      \"option color type:\" + options.colorType + \" is not supported at present\"\n    );\n  }\n  if (\n    [\n      constants.COLORTYPE_GRAYSCALE,\n      constants.COLORTYPE_COLOR,\n      constants.COLORTYPE_COLOR_ALPHA,\n      constants.COLORTYPE_ALPHA,\n    ].indexOf(options.inputColorType) === -1\n  ) {\n    throw new Error(\n      \"option input color type:\" +\n        options.inputColorType +\n        \" is not supported at present\"\n    );\n  }\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error(\n      \"option bit depth:\" + options.bitDepth + \" is not supported at present\"\n    );\n  }\n});\n\nPacker.prototype.getDeflateOptions = function () {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy,\n  };\n};\n\nPacker.prototype.createDeflate = function () {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData = function (data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  let packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  let filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\n\nPacker.prototype._packChunk = function (type, data) {\n  let len = data ? data.length : 0;\n  let buf = Buffer.alloc(len + 12);\n\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n\n  if (data) {\n    data.copy(buf, 8);\n  }\n\n  buf.writeInt32BE(\n    CrcStream.crc32(buf.slice(4, buf.length - 4)),\n    buf.length - 4\n  );\n  return buf;\n};\n\nPacker.prototype.packGAMA = function (gamma) {\n  let buf = Buffer.alloc(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\n\nPacker.prototype.packIHDR = function (width, height) {\n  let buf = Buffer.alloc(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\n\nPacker.prototype.packIDAT = function (data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\n\nPacker.prototype.packIEND = function () {\n  return this._packChunk(constants.TYPE_IEND, null);\n};\n","\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\n\nlet PackerAsync = (module.exports = function (opt) {\n  Stream.call(this);\n\n  let options = opt || {};\n\n  this._packer = new Packer(options);\n  this._deflate = this._packer.createDeflate();\n\n  this.readable = true;\n});\nutil.inherits(PackerAsync, Stream);\n\nPackerAsync.prototype.pack = function (data, width, height, gamma) {\n  // Signature\n  this.emit(\"data\", Buffer.from(constants.PNG_SIGNATURE));\n  this.emit(\"data\", this._packer.packIHDR(width, height));\n\n  if (gamma) {\n    this.emit(\"data\", this._packer.packGAMA(gamma));\n  }\n\n  let filteredData = this._packer.filterData(data, width, height);\n\n  // compress it\n  this._deflate.on(\"error\", this.emit.bind(this, \"error\"));\n\n  this._deflate.on(\n    \"data\",\n    function (compressedData) {\n      this.emit(\"data\", this._packer.packIDAT(compressedData));\n    }.bind(this)\n  );\n\n  this._deflate.on(\n    \"end\",\n    function () {\n      this.emit(\"data\", this._packer.packIEND());\n      this.emit(\"end\");\n    }.bind(this)\n  );\n\n  this._deflate.end(filteredData);\n};\n","\"use strict\";\n\nlet assert = require(\"assert\").ok;\nlet zlib = require(\"zlib\");\nlet util = require(\"util\");\n\nlet kMaxLength = require(\"buffer\").kMaxLength;\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) {\n    return new Inflate(opts);\n  }\n\n  if (opts && opts.chunkSize < zlib.Z_MIN_CHUNK) {\n    opts.chunkSize = zlib.Z_MIN_CHUNK;\n  }\n\n  zlib.Inflate.call(this, opts);\n\n  // Node 8 --> 9 compatibility check\n  this._offset = this._offset === undefined ? this._outOffset : this._offset;\n  this._buffer = this._buffer || this._outBuffer;\n\n  if (opts && opts.maxLength != null) {\n    this._maxLength = opts.maxLength;\n  }\n}\n\nfunction createInflate(opts) {\n  return new Inflate(opts);\n}\n\nfunction _close(engine, callback) {\n  if (callback) {\n    process.nextTick(callback);\n  }\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) {\n    return;\n  }\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nInflate.prototype._processChunk = function (chunk, flushFlag, asyncCb) {\n  if (typeof asyncCb === \"function\") {\n    return zlib.Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);\n  }\n\n  let self = this;\n\n  let availInBefore = chunk && chunk.length;\n  let availOutBefore = this._chunkSize - this._offset;\n  let leftToInflate = this._maxLength;\n  let inOff = 0;\n\n  let buffers = [];\n  let nread = 0;\n\n  let error;\n  this.on(\"error\", function (err) {\n    error = err;\n  });\n\n  function handleChunk(availInAfter, availOutAfter) {\n    if (self._hadError) {\n      return;\n    }\n\n    let have = availOutBefore - availOutAfter;\n    assert(have >= 0, \"have should not go down\");\n\n    if (have > 0) {\n      let out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n\n      if (out.length > leftToInflate) {\n        out = out.slice(0, leftToInflate);\n      }\n\n      buffers.push(out);\n      nread += out.length;\n      leftToInflate -= out.length;\n\n      if (leftToInflate === 0) {\n        return false;\n      }\n    }\n\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  assert(this._handle, \"zlib binding closed\");\n  let res;\n  do {\n    res = this._handle.writeSync(\n      flushFlag,\n      chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore\n    ); // out_len\n    // Node 8 --> 9 compatibility check\n    res = res || this._writeState;\n  } while (!this._hadError && handleChunk(res[0], res[1]));\n\n  if (this._hadError) {\n    throw error;\n  }\n\n  if (nread >= kMaxLength) {\n    _close(this);\n    throw new RangeError(\n      \"Cannot create final Buffer. It would be larger than 0x\" +\n        kMaxLength.toString(16) +\n        \" bytes\"\n    );\n  }\n\n  let buf = Buffer.concat(buffers, nread);\n  _close(this);\n\n  return buf;\n};\n\nutil.inherits(Inflate, zlib.Inflate);\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === \"string\") {\n    buffer = Buffer.from(buffer);\n  }\n  if (!(buffer instanceof Buffer)) {\n    throw new TypeError(\"Not a string or buffer\");\n  }\n\n  let flushFlag = engine._finishFlushFlag;\n  if (flushFlag == null) {\n    flushFlag = zlib.Z_FINISH;\n  }\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\nfunction inflateSync(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n}\n\nmodule.exports = exports = inflateSync;\nexports.Inflate = Inflate;\nexports.createInflate = createInflate;\nexports.inflateSync = inflateSync;\n","\"use strict\";\n\nlet SyncReader = (module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n});\n\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length), // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback,\n  });\n};\n\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    let read = this._reads[0];\n\n    if (\n      this._buffer.length &&\n      (this._buffer.length >= read.length || read.allowLess)\n    ) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      let buf = this._buffer;\n\n      this._buffer = buf.slice(read.length);\n\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n\n  if (this._reads.length > 0) {\n    return new Error(\"There are some read requests waitng on finished stream\");\n  }\n\n  if (this._buffer.length > 0) {\n    return new Error(\"unrecognised content at end of stream\");\n  }\n};\n","\"use strict\";\n\nlet SyncReader = require(\"./sync-reader\");\nlet Filter = require(\"./filter-parse\");\n\nexports.process = function (inBuffer, bitmapInfo) {\n  let outBuffers = [];\n  let reader = new SyncReader(inBuffer);\n  let filter = new Filter(bitmapInfo, {\n    read: reader.read.bind(reader),\n    write: function (bufferPart) {\n      outBuffers.push(bufferPart);\n    },\n    complete: function () {},\n  });\n\n  filter.start();\n  reader.process();\n\n  return Buffer.concat(outBuffers);\n};\n","\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nlet inflateSync = require(\"./sync-inflate\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet SyncReader = require(\"./sync-reader\");\nlet FilterSync = require(\"./filter-parse-sync\");\nlet Parser = require(\"./parser\");\nlet bitmapper = require(\"./bitmapper\");\nlet formatNormaliser = require(\"./format-normaliser\");\n\nmodule.exports = function (buffer, options) {\n  if (!hasSyncZlib) {\n    throw new Error(\n      \"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\"\n    );\n  }\n\n  let err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n\n  let metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n\n  function handleSimpleTransparency() {\n    metaData.alpha = true;\n  }\n\n  let gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n\n  let inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n\n  let reader = new SyncReader(buffer);\n\n  let parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData,\n    simpleTransparency: handleSimpleTransparency,\n  });\n\n  parser.start();\n  reader.process();\n\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  let inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n\n  let inflatedData;\n  if (metaData.interlace) {\n    inflatedData = zlib.inflateSync(inflateData);\n  } else {\n    let rowSize =\n      ((metaData.width * metaData.bpp * metaData.depth + 7) >> 3) + 1;\n    let imageSize = rowSize * metaData.height;\n    inflatedData = inflateSync(inflateData, {\n      chunkSize: imageSize,\n      maxLength: imageSize,\n    });\n  }\n  inflateData = null;\n\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error(\"bad png - invalid inflate data response\");\n  }\n\n  let unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n\n  let bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n\n  let normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n\n  return metaData;\n};\n","\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\n\nmodule.exports = function (metaData, opt) {\n  if (!hasSyncZlib) {\n    throw new Error(\n      \"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\"\n    );\n  }\n\n  let options = opt || {};\n\n  let packer = new Packer(options);\n\n  let chunks = [];\n\n  // Signature\n  chunks.push(Buffer.from(constants.PNG_SIGNATURE));\n\n  // Header\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  let filteredData = packer.filterData(\n    metaData.data,\n    metaData.width,\n    metaData.height\n  );\n\n  // compress it\n  let compressedData = zlib.deflateSync(\n    filteredData,\n    packer.getDeflateOptions()\n  );\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error(\"bad png - invalid compressed data response\");\n  }\n  chunks.push(packer.packIDAT(compressedData));\n\n  // End\n  chunks.push(packer.packIEND());\n\n  return Buffer.concat(chunks);\n};\n","\"use strict\";\n\nlet parse = require(\"./parser-sync\");\nlet pack = require(\"./packer-sync\");\n\nexports.read = function (buffer, options) {\n  return parse(buffer, options || {});\n};\n\nexports.write = function (png, options) {\n  return pack(png, options);\n};\n","\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet Parser = require(\"./parser-async\");\nlet Packer = require(\"./packer-async\");\nlet PNGSync = require(\"./png-sync\");\n\nlet PNG = (exports.PNG = function (options) {\n  Stream.call(this);\n\n  options = options || {}; // eslint-disable-line no-param-reassign\n\n  // coerce pixel dimensions to integers (also coerces undefined -> 0):\n  this.width = options.width | 0;\n  this.height = options.height | 0;\n\n  this.data =\n    this.width > 0 && this.height > 0\n      ? Buffer.alloc(4 * this.width * this.height)\n      : null;\n\n  if (options.fill && this.data) {\n    this.data.fill(0);\n  }\n\n  this.gamma = 0;\n  this.readable = this.writable = true;\n\n  this._parser = new Parser(options);\n\n  this._parser.on(\"error\", this.emit.bind(this, \"error\"));\n  this._parser.on(\"close\", this._handleClose.bind(this));\n  this._parser.on(\"metadata\", this._metadata.bind(this));\n  this._parser.on(\"gamma\", this._gamma.bind(this));\n  this._parser.on(\n    \"parsed\",\n    function (data) {\n      this.data = data;\n      this.emit(\"parsed\", data);\n    }.bind(this)\n  );\n\n  this._packer = new Packer(options);\n  this._packer.on(\"data\", this.emit.bind(this, \"data\"));\n  this._packer.on(\"end\", this.emit.bind(this, \"end\"));\n  this._parser.on(\"close\", this._handleClose.bind(this));\n  this._packer.on(\"error\", this.emit.bind(this, \"error\"));\n});\nutil.inherits(PNG, Stream);\n\nPNG.sync = PNGSync;\n\nPNG.prototype.pack = function () {\n  if (!this.data || !this.data.length) {\n    this.emit(\"error\", \"No data provided\");\n    return this;\n  }\n\n  process.nextTick(\n    function () {\n      this._packer.pack(this.data, this.width, this.height, this.gamma);\n    }.bind(this)\n  );\n\n  return this;\n};\n\nPNG.prototype.parse = function (data, callback) {\n  if (callback) {\n    let onParsed, onError;\n\n    onParsed = function (parsedData) {\n      this.removeListener(\"error\", onError);\n\n      this.data = parsedData;\n      callback(null, this);\n    }.bind(this);\n\n    onError = function (err) {\n      this.removeListener(\"parsed\", onParsed);\n\n      callback(err, null);\n    }.bind(this);\n\n    this.once(\"parsed\", onParsed);\n    this.once(\"error\", onError);\n  }\n\n  this.end(data);\n  return this;\n};\n\nPNG.prototype.write = function (data) {\n  this._parser.write(data);\n  return true;\n};\n\nPNG.prototype.end = function (data) {\n  this._parser.end(data);\n};\n\nPNG.prototype._metadata = function (metadata) {\n  this.width = metadata.width;\n  this.height = metadata.height;\n\n  this.emit(\"metadata\", metadata);\n};\n\nPNG.prototype._gamma = function (gamma) {\n  this.gamma = gamma;\n};\n\nPNG.prototype._handleClose = function () {\n  if (!this._parser.writable && !this._packer.readable) {\n    this.emit(\"close\");\n  }\n};\n\nPNG.bitblt = function (src, dst, srcX, srcY, width, height, deltaX, deltaY) {\n  // eslint-disable-line max-params\n  // coerce pixel dimensions to integers (also coerces undefined -> 0):\n  /* eslint-disable no-param-reassign */\n  srcX |= 0;\n  srcY |= 0;\n  width |= 0;\n  height |= 0;\n  deltaX |= 0;\n  deltaY |= 0;\n  /* eslint-enable no-param-reassign */\n\n  if (\n    srcX > src.width ||\n    srcY > src.height ||\n    srcX + width > src.width ||\n    srcY + height > src.height\n  ) {\n    throw new Error(\"bitblt reading outside image\");\n  }\n\n  if (\n    deltaX > dst.width ||\n    deltaY > dst.height ||\n    deltaX + width > dst.width ||\n    deltaY + height > dst.height\n  ) {\n    throw new Error(\"bitblt writing outside image\");\n  }\n\n  for (let y = 0; y < height; y++) {\n    src.data.copy(\n      dst.data,\n      ((deltaY + y) * dst.width + deltaX) << 2,\n      ((srcY + y) * src.width + srcX) << 2,\n      ((srcY + y) * src.width + srcX + width) << 2\n    );\n  }\n};\n\nPNG.prototype.bitblt = function (\n  dst,\n  srcX,\n  srcY,\n  width,\n  height,\n  deltaX,\n  deltaY\n) {\n  // eslint-disable-line max-params\n\n  PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\n  return this;\n};\n\nPNG.adjustGamma = function (src) {\n  if (src.gamma) {\n    for (let y = 0; y < src.height; y++) {\n      for (let x = 0; x < src.width; x++) {\n        let idx = (src.width * y + x) << 2;\n\n        for (let i = 0; i < 3; i++) {\n          let sample = src.data[idx + i] / 255;\n          sample = Math.pow(sample, 1 / 2.2 / src.gamma);\n          src.data[idx + i] = Math.round(sample * 255);\n        }\n      }\n    }\n    src.gamma = 0;\n  }\n};\n\nPNG.prototype.adjustGamma = function () {\n  PNG.adjustGamma(this);\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.20';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","'use strict';\n\n\nconst _ = require('lodash');\n\n\nfunction set_byte_depth(depth) {\n  return function (byte) {\n    // calculate significant bits, e.g. for depth=2 it's 0, 1, 2 or 3\n    let value = ~~(byte / (256 >> depth));\n\n    // spread those bits around 0..255 range, e.g. for depth=2 it's 0, 85, 170 or 255\n    let scale = (2 << (depth - 1)) - 1;\n\n    return (value * 0xFFFF / scale) >> 8;\n  };\n}\n\n\nmodule.exports.set_depth = function set_depth(glyph, depth) {\n  let pixels = [];\n  let fn = set_byte_depth(depth);\n\n  for (let y = 0; y < glyph.bbox.height; y++) {\n    pixels.push(glyph.pixels[y].map(fn));\n  }\n\n  return Object.assign({}, glyph, { pixels });\n};\n\n\nfunction count_bits(val) {\n  let count = 0;\n  val = ~~val;\n\n  while (val) {\n    count++;\n    val >>= 1;\n  }\n\n  return count;\n}\n\n// Minimal number of bits to store unsigned value\nmodule.exports.unsigned_bits = count_bits;\n\n// Minimal number of bits to store signed value\nmodule.exports.signed_bits = function signed_bits(val) {\n  if (val >= 0) return count_bits(val) + 1;\n\n  return count_bits(Math.abs(val) - 1) + 1;\n};\n\n// Align value to 4x - useful to create word-aligned arrays\nfunction align4(size) {\n  if (size % 4 === 0) return size;\n  return size + 4 - (size % 4);\n}\nmodule.exports.align4 = align4;\n\n// Align buffer length to 4x (returns copy with zero-filled tail)\nmodule.exports.balign4 = function balign4(buf) {\n  let buf_aligned = Buffer.alloc(align4(buf.length));\n  buf.copy(buf_aligned);\n  return buf_aligned;\n};\n\n// Pre-filter image to improve compression ratio\n// In this case - XOR lines, because it's very effective\n// in decompressor and does not depend on bpp.\nmodule.exports.prefilter = function prefilter(pixels) {\n  return pixels.map((line, l_idx, arr) => {\n    if (l_idx === 0) return line.slice();\n\n    return line.map((p, idx) => p ^ arr[l_idx - 1][idx]);\n  });\n};\n\n\n// Convert array with uint16 data to buffer\nmodule.exports.bFromA16 = function bFromA16(arr) {\n  const buf = Buffer.alloc(arr.length * 2);\n\n  for (let i = 0; i < arr.length; i++) buf.writeUInt16LE(arr[i], i * 2);\n\n  return buf;\n};\n\n// Convert array with uint32 data to buffer\nmodule.exports.bFromA32 = function bFromA32(arr) {\n  const buf = Buffer.alloc(arr.length * 4);\n\n  for (let i = 0; i < arr.length; i++) buf.writeUInt32LE(arr[i], i * 4);\n\n  return buf;\n};\n\n// Dump long array to multiline format with X columns and Y indent\nmodule.exports.long_dump = function long_dump(arr, options = {}) {\n  const defaults = {\n    col: 8,\n    indent: 4,\n    hex: false\n  };\n\n  let opts = Object.assign({}, defaults, options);\n  let indent = _.repeat(' ', opts.indent);\n\n  return _.chunk(arr, opts.col)\n    .map(l => l.map(v => (opts.hex ? `0x${v.toString(16)}` : v.toString())))\n    .map(l => `${indent}${l.join(', ')}`)\n    .join(',\\n');\n};\n","// Write font data into png images\n\n'use strict';\n\n\nconst path     = require('path');\nconst { PNG }  = require('pngjs');\nconst AppError = require('../app_error');\nconst utils    = require('../utils');\n\nconst normal_color  = [ 255, 255, 255 ];\nconst outside_color = [ 255, 127, 184 ];\n\n\nmodule.exports = function write_images(args, font) {\n  if (!args.output) throw new AppError('Output is required for \"dump\" writer');\n\n  let files = {};\n\n  let glyphs = font.glyphs.map(glyph => utils.set_depth(glyph, args.bpp));\n\n  for (let glyph of glyphs) {\n    let { code, advanceWidth, bbox, pixels } = glyph;\n\n    advanceWidth = Math.round(advanceWidth);\n\n    let minX = bbox.x;\n    let maxX = Math.max(bbox.x + bbox.width - 1, bbox.x);\n    let minY = Math.min(bbox.y, font.typoDescent);\n    let maxY = Math.max(bbox.y + bbox.height - 1, font.typoAscent);\n\n    let png = new PNG({ width: maxX - minX + 1, height: maxY - minY + 1 });\n\n    /* eslint-disable max-depth */\n    for (let pos = 0, y = maxY; y >= minY; y--) {\n      for (let x = minX; x <= maxX; x++) {\n        let value = 0;\n\n        if (x >= bbox.x && x < bbox.x + bbox.width && y >= bbox.y && y < bbox.y + bbox.height) {\n          value = pixels[bbox.height - (y - bbox.y) - 1][x - bbox.x];\n        }\n\n        let r, g, b;\n\n        if (x < 0 || x >= advanceWidth || y < font.typoDescent || y > font.typoAscent) {\n          [ r, g, b ] = outside_color;\n        } else {\n          [ r, g, b ] = normal_color;\n        }\n\n        png.data[pos++] = (255 - value) * r / 255;\n        png.data[pos++] = (255 - value) * g / 255;\n        png.data[pos++] = (255 - value) * b / 255;\n        png.data[pos++] = 255;\n      }\n    }\n\n\n    files[path.join(args.output, `${code.toString(16)}.png`)]  = PNG.sync.write(png);\n  }\n\n  files[path.join(args.output, 'font_info.json')] = JSON.stringify(\n    font,\n    (k, v) => (k === 'pixels' && !args.full_info ? undefined : v),\n    2);\n\n  return files;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\n\nconst u = require('../utils');\nconst debug = require('debug')('font.table.head');\n\nconst O_SIZE = 0;\nconst O_LABEL = O_SIZE + 4;\nconst O_VERSION = O_LABEL + 4;\nconst O_TABLES = O_VERSION + 4;\nconst O_FONT_SIZE = O_TABLES + 2;\nconst O_ASCENT = O_FONT_SIZE + 2;\nconst O_DESCENT = O_ASCENT + 2;\nconst O_TYPO_ASCENT = O_DESCENT + 2;\nconst O_TYPO_DESCENT = O_TYPO_ASCENT + 2;\nconst O_TYPO_LINE_GAP = O_TYPO_DESCENT + 2;\nconst O_MIN_Y = O_TYPO_LINE_GAP + 2;\nconst O_MAX_Y = O_MIN_Y + 2;\nconst O_DEF_ADVANCE_WIDTH = O_MAX_Y + 2;\nconst O_KERNING_SCALE = O_DEF_ADVANCE_WIDTH + 2;\nconst O_INDEX_TO_LOC_FORMAT = O_KERNING_SCALE + 2;\nconst O_GLYPH_ID_FORMAT = O_INDEX_TO_LOC_FORMAT + 1;\nconst O_ADVANCE_WIDTH_FORMAT = O_GLYPH_ID_FORMAT + 1;\nconst O_BITS_PER_PIXEL = O_ADVANCE_WIDTH_FORMAT + 1;\nconst O_XY_BITS = O_BITS_PER_PIXEL + 1;\nconst O_WH_BITS = O_XY_BITS + 1;\nconst O_ADVANCE_WIDTH_BITS = O_WH_BITS + 1;\nconst O_COMPRESSION_ID = O_ADVANCE_WIDTH_BITS + 1;\nconst O_SUBPIXELS_MODE = O_COMPRESSION_ID + 1;\nconst O_TMP_RESERVED1 = O_SUBPIXELS_MODE + 1;\nconst O_UNDERLINE_POSITION = O_TMP_RESERVED1 + 1;\nconst O_UNDERLINE_THICKNESS = O_UNDERLINE_POSITION + 2;\nconst HEAD_LENGTH = u.align4(O_UNDERLINE_THICKNESS + 2);\n\n\nclass Head {\n  constructor(font) {\n    this.font = font;\n    this.label = 'head';\n    this.version = 1;\n  }\n\n  toBin() {\n    const buf = Buffer.alloc(HEAD_LENGTH);\n    debug(`table size = ${buf.length}`);\n\n    buf.writeUInt32LE(HEAD_LENGTH, O_SIZE);\n    buf.write(this.label, O_LABEL);\n    buf.writeUInt32LE(this.version, O_VERSION);\n\n    const f = this.font;\n\n    const tables_count = f.hasKerning() ? 4 : 3;\n\n    buf.writeUInt16LE(tables_count, O_TABLES);\n\n    buf.writeUInt16LE(f.src.size, O_FONT_SIZE);\n    buf.writeUInt16LE(f.src.ascent, O_ASCENT);\n    buf.writeInt16LE(f.src.descent, O_DESCENT);\n\n    buf.writeUInt16LE(f.src.typoAscent, O_TYPO_ASCENT);\n    buf.writeInt16LE(f.src.typoDescent, O_TYPO_DESCENT);\n    buf.writeUInt16LE(f.src.typoLineGap, O_TYPO_LINE_GAP);\n\n    buf.writeInt16LE(f.minY, O_MIN_Y);\n    buf.writeInt16LE(f.maxY, O_MAX_Y);\n\n    if (f.monospaced) {\n      buf.writeUInt16LE(f.widthToInt(f.src.glyphs[0].advanceWidth), O_DEF_ADVANCE_WIDTH);\n    } else {\n      buf.writeUInt16LE(0, O_DEF_ADVANCE_WIDTH);\n    }\n\n    buf.writeUInt16LE(Math.round(f.kerningScale * 16), O_KERNING_SCALE); // FP12.4\n\n    buf.writeUInt8(f.indexToLocFormat, O_INDEX_TO_LOC_FORMAT);\n    buf.writeUInt8(f.glyphIdFormat, O_GLYPH_ID_FORMAT);\n    buf.writeUInt8(f.advanceWidthFormat, O_ADVANCE_WIDTH_FORMAT);\n\n    buf.writeUInt8(f.opts.bpp, O_BITS_PER_PIXEL);\n    buf.writeUInt8(f.xy_bits, O_XY_BITS);\n    buf.writeUInt8(f.wh_bits, O_WH_BITS);\n\n    if (f.monospaced) buf.writeUInt8(0, O_ADVANCE_WIDTH_BITS);\n    else buf.writeUInt8(f.advanceWidthBits, O_ADVANCE_WIDTH_BITS);\n\n    buf.writeUInt8(f.glyf.getCompressionCode(), O_COMPRESSION_ID);\n\n    buf.writeUInt8(f.subpixels_mode, O_SUBPIXELS_MODE);\n\n    buf.writeInt16LE(f.src.underlinePosition, O_UNDERLINE_POSITION);\n    buf.writeUInt16LE(f.src.underlineThickness, O_UNDERLINE_POSITION);\n\n    return buf;\n  }\n}\n\n\nmodule.exports = Head;\n","// Find an optimal configuration of cmap tables representing set of codepoints,\n// using simple breadth-first algorithm\n//\n// It assumes that codepoints have one-to-one correspondence to glyph ids,\n// and glyph ids are always bigger for bigger codepoints (this way we can omit\n// glyph ids from all calculations entirely: if codepoints fit in format0,\n// then glyph ids also will).\n//\n// format6 is not considered, because if glyph ids can be delta-coded,\n// multiple format0 tables are guaranteed to be smaller than a single format6.\n//\n\n'use strict';\n\n\nfunction estimate_format0_tiny_size(/*start_code, end_code*/) {\n  return 16;\n}\n\nfunction estimate_format0_size(start_code, end_code) {\n  return 16 + (end_code - start_code + 1);\n}\n\nfunction estimate_sparse_size(count) {\n  return 16 + count * 4;\n}\n\nfunction estimate_sparse_tiny_size(count) {\n  return 16 + count * 2;\n}\n\nmodule.exports = function cmap_split(all_codepoints) {\n  all_codepoints = all_codepoints.sort((a, b) => a - b);\n\n  let min_paths = [];\n\n  for (let i = 0; i < all_codepoints.length; i++) {\n    let min = { dist: Infinity };\n\n    for (let j = 0; j <= i; j++) {\n      let prev_dist = (j - 1 >= 0) ? min_paths[j - 1].dist : 0;\n      let s;\n\n      if (all_codepoints[i] - all_codepoints[j] < 256) {\n        s = estimate_format0_size(all_codepoints[j], all_codepoints[i]);\n\n        /* eslint-disable max-depth */\n        if (prev_dist + s < min.dist) {\n          min = {\n            dist: prev_dist + s,\n            start: j,\n            end: i,\n            format: 'format0'\n          };\n        }\n      }\n\n      if (all_codepoints[i] - all_codepoints[j] < 256 && all_codepoints[i] - i === all_codepoints[j] - j) {\n        s = estimate_format0_tiny_size(all_codepoints[j], all_codepoints[i]);\n\n        /* eslint-disable max-depth */\n        if (prev_dist + s < min.dist) {\n          min = {\n            dist: prev_dist + s,\n            start: j,\n            end: i,\n            format: 'format0_tiny'\n          };\n        }\n      }\n\n      s = estimate_sparse_size(i - j + 1);\n\n      if (prev_dist + s < min.dist) {\n        min = {\n          dist: prev_dist + s,\n          start: j,\n          end: i,\n          format: 'sparse'\n        };\n      }\n\n      s = estimate_sparse_tiny_size(i - j + 1);\n\n      if (prev_dist + s < min.dist) {\n        min = {\n          dist: prev_dist + s,\n          start: j,\n          end: i,\n          format: 'sparse_tiny'\n        };\n      }\n    }\n\n    min_paths[i] = min;\n  }\n\n  let result = [];\n\n  for (let i = all_codepoints.length - 1; i >= 0;) {\n    let path = min_paths[i];\n    result.unshift([ path.format, all_codepoints.slice(path.start, path.end + 1) ]);\n    i = path.start - 1;\n  }\n\n  return result;\n};\n","'use strict';\n\n\nconst _ = require('lodash');\nconst build_subtables = require('./cmap_build_subtables');\nconst u = require('../utils');\nconst debug = require('debug')('font.table.cmap');\n\n\nconst O_SIZE = 0;\nconst O_LABEL = O_SIZE + 4;\nconst O_COUNT = O_LABEL + 4;\n\nconst HEAD_LENGTH = O_COUNT + 4;\n\nconst SUB_FORMAT_0 = 0;\nconst SUB_FORMAT_0_TINY = 2;\nconst SUB_FORMAT_SPARSE = 1;\nconst SUB_FORMAT_SPARSE_TINY = 3;\n\n\nclass Cmap {\n  constructor(font) {\n    this.font = font;\n    this.label = 'cmap';\n\n    this.sub_heads = [];\n    this.sub_data = [];\n\n    this.compiled = false;\n  }\n\n  compile() {\n    if (this.compiled) return;\n    this.compiled = true;\n\n    const f = this.font;\n\n    let subtables_plan = build_subtables(f.src.glyphs.map(g => g.code));\n\n    const count_format0 = subtables_plan.filter(s => s[0] === 'format0').length;\n    const count_sparse = subtables_plan.length - count_format0;\n    debug(`${subtables_plan.length} subtable(s): ${count_format0} \"format 0\", ${count_sparse} \"sparse\"`);\n\n    for (let [ format, codepoints ] of subtables_plan) {\n      let g = this.glyphByCode(codepoints[0]);\n      let start_glyph_id = f.glyph_id[g.code];\n      let min_code = codepoints[0];\n      let max_code = codepoints[codepoints.length - 1];\n      let entries_count = max_code - min_code + 1;\n      let format_code = 0;\n\n      if (format === 'format0_tiny') {\n        format_code = SUB_FORMAT_0_TINY;\n        this.sub_data.push(Buffer.alloc(0));\n      } else if (format === 'format0') {\n        format_code = SUB_FORMAT_0;\n        this.sub_data.push(this.create_format0_data(min_code, max_code, start_glyph_id));\n      } else if (format === 'sparse_tiny') {\n        entries_count = codepoints.length;\n        format_code = SUB_FORMAT_SPARSE_TINY;\n        this.sub_data.push(this.create_sparse_tiny_data(codepoints, start_glyph_id));\n      } else { // assume format === 'sparse'\n        entries_count = codepoints.length;\n        format_code = SUB_FORMAT_SPARSE;\n        this.sub_data.push(this.create_sparse_data(codepoints, start_glyph_id));\n      }\n\n      this.sub_heads.push(this.createSubHeader(\n        min_code,\n        max_code - min_code + 1,\n        start_glyph_id,\n        entries_count,\n        format_code\n      ));\n    }\n\n    this.subHeaderUpdateAllOffsets();\n  }\n\n  createSubHeader(rangeStart, rangeLen, glyphIdOffset, total, type) {\n    const buf = Buffer.alloc(16);\n\n    // buf.writeUInt32LE(offset, 0); offset unknown at this moment\n    buf.writeUInt32LE(rangeStart, 4);\n    buf.writeUInt16LE(rangeLen, 8);\n    buf.writeUInt16LE(glyphIdOffset, 10);\n    buf.writeUInt16LE(total, 12);\n    buf.writeUInt8(type, 14);\n\n    return buf;\n  }\n\n  subHeaderUpdateOffset(header, val) {\n    header.writeUInt32LE(val, 0);\n  }\n\n  subHeaderUpdateAllOffsets() {\n    for (let i = 0; i < this.sub_heads.length; i++) {\n      const offset = HEAD_LENGTH +\n        _.sum(this.sub_heads.map(h => h.length)) +\n        _.sum(this.sub_data.slice(0, i).map(d => d.length));\n\n      this.subHeaderUpdateOffset(this.sub_heads[i], offset);\n    }\n  }\n\n  glyphByCode(code) {\n    for (let g of this.font.src.glyphs) {\n      if (g.code === code) return g;\n    }\n\n    return null;\n  }\n\n\n  collect_format0_data(min_code, max_code, start_glyph_id) {\n    let data = [];\n\n    for (let i = min_code; i <= max_code; i++) {\n      const g = this.glyphByCode(i);\n\n      if (!g) {\n        data.push(0);\n        continue;\n      }\n\n      const id_delta = this.font.glyph_id[g.code] - start_glyph_id;\n\n      if (id_delta < 0 || id_delta > 255) throw new Error('Glyph ID delta out of Format 0 range');\n\n      data.push(id_delta);\n    }\n\n    return data;\n  }\n\n  create_format0_data(min_code, max_code, start_glyph_id) {\n    const data = this.collect_format0_data(min_code, max_code, start_glyph_id);\n\n    return u.balign4(Buffer.from(data));\n  }\n\n  collect_sparse_data(codepoints, start_glyph_id) {\n    let codepoints_list = [];\n    let ids_list = [];\n\n    for (let code of codepoints) {\n      let g = this.glyphByCode(code);\n      let id = this.font.glyph_id[g.code];\n\n      let code_delta = code - codepoints[0];\n      let id_delta   = id - start_glyph_id;\n\n      if (code_delta < 0 || code_delta > 65535) throw new Error('Codepoint delta out of range');\n      if (id_delta < 0 || id_delta > 65535) throw new Error('Glyph ID delta out of range');\n\n      codepoints_list.push(code_delta);\n      ids_list.push(id_delta);\n    }\n\n    return {\n      codes: codepoints_list,\n      ids: ids_list\n    };\n  }\n\n  create_sparse_data(codepoints, start_glyph_id) {\n    const data = this.collect_sparse_data(codepoints, start_glyph_id);\n\n    return u.balign4(Buffer.concat([\n      u.bFromA16(data.codes),\n      u.bFromA16(data.ids)\n    ]));\n  }\n\n  create_sparse_tiny_data(codepoints, start_glyph_id) {\n    const data = this.collect_sparse_data(codepoints, start_glyph_id);\n\n    return u.balign4(u.bFromA16(data.codes));\n  }\n\n  toBin() {\n    if (!this.compiled) this.compile();\n\n    const buf = Buffer.concat([\n      Buffer.alloc(HEAD_LENGTH),\n      Buffer.concat(this.sub_heads),\n      Buffer.concat(this.sub_data)\n    ]);\n    debug(`table size = ${buf.length}`);\n\n    buf.writeUInt32LE(buf.length, O_SIZE);\n    buf.write(this.label, O_LABEL);\n    buf.writeUInt32LE(this.sub_heads.length, O_COUNT);\n\n    return buf;\n  }\n}\n\n\nmodule.exports = Cmap;\n","(function (root) {\n\n/**********************************************************\n *\n * BitView\n *\n * BitView provides a similar interface to the standard\n * DataView, but with support for bit-level reads / writes.\n *\n **********************************************************/\nvar BitView = function (source, byteOffset, byteLength) {\n\tvar isBuffer = source instanceof ArrayBuffer ||\n\t\t(typeof Buffer !== 'undefined' && source instanceof Buffer);\n\n\tif (!isBuffer) {\n\t\tthrow new Error('Must specify a valid ArrayBuffer or Buffer.');\n\t}\n\n\tbyteOffset = byteOffset || 0;\n\tbyteLength = byteLength || source.byteLength /* ArrayBuffer */ || source.length /* Buffer */;\n\n\tthis._view = new Uint8Array(source.buffer || source, byteOffset, byteLength);\n\n\tthis.bigEndian = false;\n};\n\n// Used to massage fp values so we can operate on them\n// at the bit level.\nBitView._scratch = new DataView(new ArrayBuffer(8));\n\nObject.defineProperty(BitView.prototype, 'buffer', {\n\tget: function () { return typeof Buffer !== 'undefined' ?  Buffer.from(this._view.buffer) : this._view.buffer; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nObject.defineProperty(BitView.prototype, 'byteLength', {\n\tget: function () { return this._view.length; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nBitView.prototype._setBit = function (offset, on) {\n\tif (on) {\n\t\tthis._view[offset >> 3] |= 1 << (offset & 7);\n\t} else {\n\t\tthis._view[offset >> 3] &= ~(1 << (offset & 7));\n\t}\n};\n\nBitView.prototype.getBits = function (offset, bits, signed) {\n\tvar available = (this._view.length * 8 - offset);\n\n\tif (bits > available) {\n\t\tthrow new Error('Cannot get ' + bits + ' bit(s) from offset ' + offset + ', ' + available + ' available');\n\t}\n\n\tvar value = 0;\n\tfor (var i = 0; i < bits;) {\n\t\tvar remaining = bits - i;\n\t\tvar bitOffset = offset & 7;\n\t\tvar currentByte = this._view[offset >> 3];\n\n\t\t// the max number of bits we can read from the current byte\n\t\tvar read = Math.min(remaining, 8 - bitOffset);\n\n\t\tvar mask, readBits;\n\t\tif (this.bigEndian) {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(0xFF << read);\n\t\t\t// shift the bits we want to the start of the byte and mask of the rest\n\t\t\treadBits = (currentByte >> (8 - read - bitOffset)) & mask;\n\n\t\t\tvalue <<= read;\n\t\t\tvalue |= readBits;\n\t\t} else {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(0xFF << read);\n\t\t\t// shift the bits we want to the start of the byte and mask off the rest\n\t\t\treadBits = (currentByte >> bitOffset) & mask;\n\n\t\t\tvalue |= readBits << i;\n\t\t}\n\n\t\toffset += read;\n\t\ti += read;\n\t}\n\n\tif (signed) {\n\t\t// If we're not working with a full 32 bits, check the\n\t\t// imaginary MSB for this bit count and convert to a\n\t\t// valid 32-bit signed value if set.\n\t\tif (bits !== 32 && value & (1 << (bits - 1))) {\n\t\t\tvalue |= -1 ^ ((1 << bits) - 1);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\treturn value >>> 0;\n};\n\nBitView.prototype.setBits = function (offset, value, bits) {\n\tvar available = (this._view.length * 8 - offset);\n\n\tif (bits > available) {\n\t\tthrow new Error('Cannot set ' + bits + ' bit(s) from offset ' + offset + ', ' + available + ' available');\n\t}\n\n\tfor (var i = 0; i < bits;) {\n\t\tvar remaining = bits - i;\n\t\tvar bitOffset = offset & 7;\n\t\tvar byteOffset = offset >> 3;\n\t\tvar wrote = Math.min(remaining, 8 - bitOffset);\n\n\t\tvar mask, writeBits, destMask;\n\t\tif (this.bigEndian) {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(~0 << wrote);\n\t\t\t// shift the bits we want to the start of the byte and mask of the rest\n\t\t\twriteBits = (value >> (bits - i - wrote)) & mask;\n\n\t\t\tvar destShift = 8 - bitOffset - wrote;\n\t\t\t// destination mask to zero all the bits we're changing first\n\t\t\tdestMask = ~(mask << destShift);\n\n\t\t\tthis._view[byteOffset] =\n\t\t\t\t(this._view[byteOffset] & destMask)\n\t\t\t\t| (writeBits << destShift);\n\n\t\t} else {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(0xFF << wrote);\n\t\t\t// shift the bits we want to the start of the byte and mask of the rest\n\t\t\twriteBits = value & mask;\n\t\t\tvalue >>= wrote;\n\n\t\t\t// destination mask to zero all the bits we're changing first\n\t\t\tdestMask = ~(mask << bitOffset);\n\n\t\t\tthis._view[byteOffset] =\n\t\t\t\t(this._view[byteOffset] & destMask)\n\t\t\t\t| (writeBits << bitOffset);\n\t\t}\n\n\t\toffset += wrote;\n\t\ti += wrote;\n\t}\n};\n\nBitView.prototype.getBoolean = function (offset) {\n\treturn this.getBits(offset, 1, false) !== 0;\n};\nBitView.prototype.getInt8 = function (offset) {\n\treturn this.getBits(offset, 8, true);\n};\nBitView.prototype.getUint8 = function (offset) {\n\treturn this.getBits(offset, 8, false);\n};\nBitView.prototype.getInt16 = function (offset) {\n\treturn this.getBits(offset, 16, true);\n};\nBitView.prototype.getUint16 = function (offset) {\n\treturn this.getBits(offset, 16, false);\n};\nBitView.prototype.getInt32 = function (offset) {\n\treturn this.getBits(offset, 32, true);\n};\nBitView.prototype.getUint32 = function (offset) {\n\treturn this.getBits(offset, 32, false);\n};\nBitView.prototype.getFloat32 = function (offset) {\n\tBitView._scratch.setUint32(0, this.getUint32(offset));\n\treturn BitView._scratch.getFloat32(0);\n};\nBitView.prototype.getFloat64 = function (offset) {\n\tBitView._scratch.setUint32(0, this.getUint32(offset));\n\t// DataView offset is in bytes.\n\tBitView._scratch.setUint32(4, this.getUint32(offset+32));\n\treturn BitView._scratch.getFloat64(0);\n};\n\nBitView.prototype.setBoolean = function (offset, value) {\n\tthis.setBits(offset, value ? 1 : 0, 1);\n};\nBitView.prototype.setInt8  =\nBitView.prototype.setUint8 = function (offset, value) {\n\tthis.setBits(offset, value, 8);\n};\nBitView.prototype.setInt16  =\nBitView.prototype.setUint16 = function (offset, value) {\n\tthis.setBits(offset, value, 16);\n};\nBitView.prototype.setInt32  =\nBitView.prototype.setUint32 = function (offset, value) {\n\tthis.setBits(offset, value, 32);\n};\nBitView.prototype.setFloat32 = function (offset, value) {\n\tBitView._scratch.setFloat32(0, value);\n\tthis.setBits(offset, BitView._scratch.getUint32(0), 32);\n};\nBitView.prototype.setFloat64 = function (offset, value) {\n\tBitView._scratch.setFloat64(0, value);\n\tthis.setBits(offset, BitView._scratch.getUint32(0), 32);\n\tthis.setBits(offset+32, BitView._scratch.getUint32(4), 32);\n};\nBitView.prototype.getArrayBuffer = function (offset, byteLength) {\n\tvar buffer = new Uint8Array(byteLength);\n\tfor (var i = 0; i < byteLength; i++) {\n\t\tbuffer[i] = this.getUint8(offset + (i * 8));\n\t}\n\treturn buffer;\n};\n\n/**********************************************************\n *\n * BitStream\n *\n * Small wrapper for a BitView to maintain your position,\n * as well as to handle reading / writing of string data\n * to the underlying buffer.\n *\n **********************************************************/\nvar reader = function (name, size) {\n\treturn function () {\n\t\tif (this._index + size > this._length) {\n\t\t\tthrow new Error('Trying to read past the end of the stream');\n\t\t}\n\t\tvar val = this._view[name](this._index);\n\t\tthis._index += size;\n\t\treturn val;\n\t};\n};\n\nvar writer = function (name, size) {\n\treturn function (value) {\n\t\tthis._view[name](this._index, value);\n\t\tthis._index += size;\n\t};\n};\n\nfunction readASCIIString(stream, bytes) {\n\treturn readString(stream, bytes, false);\n}\n\nfunction readUTF8String(stream, bytes) {\n\treturn readString(stream, bytes, true);\n}\n\nfunction readString(stream, bytes, utf8) {\n\tif (bytes === 0) {\n\t\treturn '';\n\t}\n\tvar i = 0;\n\tvar chars = [];\n\tvar append = true;\n\tvar fixedLength = !!bytes;\n\tif (!bytes) {\n\t\tbytes = Math.floor((stream._length - stream._index) / 8);\n\t}\n\n\t// Read while we still have space available, or until we've\n\t// hit the fixed byte length passed in.\n\twhile (i < bytes) {\n\t\tvar c = stream.readUint8();\n\n\t\t// Stop appending chars once we hit 0x00\n\t\tif (c === 0x00) {\n\t\t\tappend = false;\n\n\t\t\t// If we don't have a fixed length to read, break out now.\n\t\t\tif (!fixedLength) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (append) {\n\t\t\tchars.push(c);\n\t\t}\n\n\t\ti++;\n\t}\n\n\tvar string = String.fromCharCode.apply(null, chars);\n\tif (utf8) {\n\t\ttry {\n\t\t\treturn decodeURIComponent(escape(string)); // https://stackoverflow.com/a/17192845\n\t\t} catch (e) {\n\t\t\treturn string;\n\t\t}\n\t} else {\n\t\treturn string;\n\t}\n}\n\nfunction writeASCIIString(stream, string, bytes) {\n\tvar length = bytes || string.length + 1;  // + 1 for NULL\n\n\tfor (var i = 0; i < length; i++) {\n\t\tstream.writeUint8(i < string.length ? string.charCodeAt(i) : 0x00);\n\t}\n}\n\nfunction writeUTF8String(stream, string, bytes) {\n\tvar byteArray = stringToByteArray(string);\n\n\tvar length = bytes || byteArray.length + 1;  // + 1 for NULL\n\tfor (var i = 0; i < length; i++) {\n\t\tstream.writeUint8(i < byteArray.length ? byteArray[i] : 0x00);\n\t}\n}\n\nfunction stringToByteArray(str) { // https://gist.github.com/volodymyr-mykhailyk/2923227\n\tvar b = [], i, unicode;\n\tfor (i = 0; i < str.length; i++) {\n\t\tunicode = str.charCodeAt(i);\n\t\t// 0x00000000 - 0x0000007f -> 0xxxxxxx\n\t\tif (unicode <= 0x7f) {\n\t\t\tb.push(unicode);\n\t\t\t// 0x00000080 - 0x000007ff -> 110xxxxx 10xxxxxx\n\t\t} else if (unicode <= 0x7ff) {\n\t\t\tb.push((unicode >> 6) | 0xc0);\n\t\t\tb.push((unicode & 0x3F) | 0x80);\n\t\t\t// 0x00000800 - 0x0000ffff -> 1110xxxx 10xxxxxx 10xxxxxx\n\t\t} else if (unicode <= 0xffff) {\n\t\t\tb.push((unicode >> 12) | 0xe0);\n\t\t\tb.push(((unicode >> 6) & 0x3f) | 0x80);\n\t\t\tb.push((unicode & 0x3f) | 0x80);\n\t\t\t// 0x00010000 - 0x001fffff -> 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\t\t} else {\n\t\t\tb.push((unicode >> 18) | 0xf0);\n\t\t\tb.push(((unicode >> 12) & 0x3f) | 0x80);\n\t\t\tb.push(((unicode >> 6) & 0x3f) | 0x80);\n\t\t\tb.push((unicode & 0x3f) | 0x80);\n\t\t}\n\t}\n\n\treturn b;\n}\n\nvar BitStream = function (source, byteOffset, byteLength) {\n\tvar isBuffer = source instanceof ArrayBuffer ||\n\t\t(typeof Buffer !== 'undefined' && source instanceof Buffer);\n\n\tif (!(source instanceof BitView) && !isBuffer) {\n\t\tthrow new Error('Must specify a valid BitView, ArrayBuffer or Buffer');\n\t}\n\n\tif (isBuffer) {\n\t\tthis._view = new BitView(source, byteOffset, byteLength);\n\t} else {\n\t\tthis._view = source;\n\t}\n\n\tthis._index = 0;\n\tthis._startIndex = 0;\n\tthis._length = this._view.byteLength * 8;\n};\n\nObject.defineProperty(BitStream.prototype, 'index', {\n\tget: function () { return this._index - this._startIndex; },\n\tset: function (val) { this._index = val + this._startIndex; },\n\tenumerable: true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'length', {\n\tget: function () { return this._length - this._startIndex; },\n\tset: function (val) { this._length = val + this._startIndex; },\n\tenumerable  : true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'bitsLeft', {\n\tget: function () { return this._length - this._index; },\n\tenumerable  : true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'byteIndex', {\n\t// Ceil the returned value, over compensating for the amount of\n\t// bits written to the stream.\n\tget: function () { return Math.ceil(this._index / 8); },\n\tset: function (val) { this._index = val * 8; },\n\tenumerable: true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'buffer', {\n\tget: function () { return this._view.buffer; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nObject.defineProperty(BitStream.prototype, 'view', {\n\tget: function () { return this._view; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nObject.defineProperty(BitStream.prototype, 'bigEndian', {\n\tget: function () { return this._view.bigEndian; },\n\tset: function (val) { this._view.bigEndian = val; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nBitStream.prototype.readBits = function (bits, signed) {\n\tvar val = this._view.getBits(this._index, bits, signed);\n\tthis._index += bits;\n\treturn val;\n};\n\nBitStream.prototype.writeBits = function (value, bits) {\n\tthis._view.setBits(this._index, value, bits);\n\tthis._index += bits;\n};\n\nBitStream.prototype.readBoolean = reader('getBoolean', 1);\nBitStream.prototype.readInt8 = reader('getInt8', 8);\nBitStream.prototype.readUint8 = reader('getUint8', 8);\nBitStream.prototype.readInt16 = reader('getInt16', 16);\nBitStream.prototype.readUint16 = reader('getUint16', 16);\nBitStream.prototype.readInt32 = reader('getInt32', 32);\nBitStream.prototype.readUint32 = reader('getUint32', 32);\nBitStream.prototype.readFloat32 = reader('getFloat32', 32);\nBitStream.prototype.readFloat64 = reader('getFloat64', 64);\n\nBitStream.prototype.writeBoolean = writer('setBoolean', 1);\nBitStream.prototype.writeInt8 = writer('setInt8', 8);\nBitStream.prototype.writeUint8 = writer('setUint8', 8);\nBitStream.prototype.writeInt16 = writer('setInt16', 16);\nBitStream.prototype.writeUint16 = writer('setUint16', 16);\nBitStream.prototype.writeInt32 = writer('setInt32', 32);\nBitStream.prototype.writeUint32 = writer('setUint32', 32);\nBitStream.prototype.writeFloat32 = writer('setFloat32', 32);\nBitStream.prototype.writeFloat64 = writer('setFloat64', 64);\n\nBitStream.prototype.readASCIIString = function (bytes) {\n\treturn readASCIIString(this, bytes);\n};\n\nBitStream.prototype.readUTF8String = function (bytes) {\n\treturn readUTF8String(this, bytes);\n};\n\nBitStream.prototype.writeASCIIString = function (string, bytes) {\n\twriteASCIIString(this, string, bytes);\n};\n\nBitStream.prototype.writeUTF8String = function (string, bytes) {\n\twriteUTF8String(this, string, bytes);\n};\nBitStream.prototype.readBitStream = function(bitLength) {\n\tvar slice = new BitStream(this._view);\n\tslice._startIndex = this._index;\n\tslice._index = this._index;\n\tslice.length = bitLength;\n\tthis._index += bitLength;\n\treturn slice;\n};\n\nBitStream.prototype.writeBitStream = function(stream, length) {\n\tif (!length) {\n\t\tlength = stream.bitsLeft;\n\t}\n\n\tvar bitsToWrite;\n\twhile (length > 0) {\n\t\tbitsToWrite = Math.min(length, 32);\n\t\tthis.writeBits(stream.readBits(bitsToWrite), bitsToWrite);\n\t\tlength -= bitsToWrite;\n\t}\n};\n\nBitStream.prototype.readArrayBuffer = function(byteLength) {\n\tvar buffer = this._view.getArrayBuffer(this._index, byteLength);\n\tthis._index += (byteLength * 8);\n\treturn buffer;\n};\n\nBitStream.prototype.writeArrayBuffer = function(buffer, byteLength) {\n\tthis.writeBitStream(new BitStream(buffer), byteLength * 8);\n};\n\n// AMD / RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n\tdefine(function () {\n\t\treturn {\n\t\t\tBitView: BitView,\n\t\t\tBitStream: BitStream\n\t\t};\n\t});\n}\n// Node.js\nelse if (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = {\n\t\tBitView: BitView,\n\t\tBitStream: BitStream\n\t};\n}\n\n}(this));\n","'use strict';\n\n//const debug = require('debug')('compress');\n\nfunction count_same(arr, offset) {\n  let same = 1;\n  let val = arr[offset];\n\n  for (let i = offset + 1; i < arr.length; i++) {\n    if (arr[i] !== val) break;\n    same++;\n  }\n\n  return same;\n}\n\n//\n// Compress pixels with RLE-like algorythm (modified I3BN)\n//\n// 1. Require minimal repeat count (1) to enter I3BN mode\n// 2. Increased 1-bit-replaced repeat limit (2 => 10)\n// 3. Length of direct repetition counter reduced (8 => 6 bits).\n//\n// pixels - flat array of pixels (one per entry)\n// options.bpp - bits per pixels\n//\nmodule.exports = function compress(bitStream, pixels, options) {\n  const opts = Object.assign({}, { repeat: 1 }, options);\n\n  // Minimal repetitions count to enable RLE mode.\n  const RLE_SKIP_COUNT = 1;\n  // Number of repeats, when `1` used to replace data\n  // If more - write as number\n  const RLE_BIT_COLLAPSED_COUNT = 10;\n\n  const RLE_COUNTER_BITS = 6; // (2^bits - 1) - max value\n  const RLE_COUNTER_MAX = (1 << RLE_COUNTER_BITS) - 1;\n  // Force flush if counter dencity exceeded.\n  const RLE_MAX_REPEATS = RLE_COUNTER_MAX + RLE_BIT_COLLAPSED_COUNT + 1;\n\n  //let bits_start_offset = bitStream.index;\n\n  let offset = 0;\n\n  while (offset < pixels.length) {\n    const p = pixels[offset];\n\n    let same = count_same(pixels, offset);\n\n    // Clamp value because RLE counter density is limited\n    if (same > RLE_MAX_REPEATS + RLE_SKIP_COUNT) {\n      same = RLE_MAX_REPEATS + RLE_SKIP_COUNT;\n    }\n\n    //debug(`offset: ${offset}, count: ${same}, pixel: ${p}`);\n\n    offset += same;\n\n    // If not enough for RLE - write as is.\n    if (same <= RLE_SKIP_COUNT) {\n      for (let i = 0; i < same; i++) {\n        bitStream.writeBits(p, opts.bpp);\n        //debug(`==> ${opts.bpp} bits`);\n      }\n      continue;\n    }\n\n    // First, write \"skipped\" head as is.\n    for (let i = 0; i < RLE_SKIP_COUNT; i++) {\n      bitStream.writeBits(p, opts.bpp);\n      //debug(`==> ${opts.bpp} bits`);\n    }\n\n    same -= RLE_SKIP_COUNT;\n\n    // Not reached state to use counter => dump bit-extended\n    if (same <= RLE_BIT_COLLAPSED_COUNT) {\n      bitStream.writeBits(p, opts.bpp);\n      //debug(`==> ${opts.bpp} bits (val)`);\n      for (let i = 0; i < same; i++) {\n        /*eslint-disable max-depth*/\n        if (i < same - 1) {\n          bitStream.writeBits(1, 1);\n          //debug('==> 1 bit (rle repeat)');\n        } else {\n          bitStream.writeBits(0, 1);\n          //debug('==> 1 bit (rle repeat last)');\n        }\n      }\n      continue;\n    }\n\n    same -= RLE_BIT_COLLAPSED_COUNT + 1;\n\n    bitStream.writeBits(p, opts.bpp);\n    //debug(`==> ${opts.bpp} bits (val)`);\n\n    for (let i = 0; i < RLE_BIT_COLLAPSED_COUNT + 1; i++) {\n      bitStream.writeBits(1, 1);\n      //debug('==> 1 bit (rle repeat)');\n    }\n    bitStream.writeBits(same, RLE_COUNTER_BITS);\n    //debug(`==> 4 bits (rle repeat count ${same})`);\n  }\n\n  //debug(`output bits: ${bitStream.index - bits_start_offset}`);\n};\n","'use strict';\n\nconst _ = require('lodash');\nconst u = require('../utils');\nconst { BitStream } = require('bit-buffer');\nconst debug = require('debug')('font.table.glyf');\nconst compress = require('./compress');\n\n\nconst O_SIZE = 0;\nconst O_LABEL = O_SIZE + 4;\n\nconst HEAD_LENGTH = O_LABEL + 4;\n\n\nclass Glyf {\n  constructor(font) {\n    this.font = font;\n    this.label = 'glyf';\n\n    this.compiled = false;\n\n    this.binData = [];\n  }\n\n  // convert 8-bit opacity to bpp-bit\n  pixelsToBpp(pixels) {\n    const bpp = this.font.opts.bpp;\n    return pixels.map(line => line.map(p => (p >>> (8 - bpp))));\n  }\n\n  // Returns \"binary stream\" (Buffer) of compiled glyph data\n  compileGlyph(glyph) {\n    // Allocate memory, enough for eny storage formats\n    const buf = Buffer.alloc(100 + glyph.bbox.width * glyph.bbox.height * 4);\n    const bs = new BitStream(buf);\n    bs.bigEndian = true;\n    const f = this.font;\n\n    // Store Width\n    if (!f.monospaced) {\n      let w = f.widthToInt(glyph.advanceWidth);\n      bs.writeBits(w, f.advanceWidthBits);\n    }\n\n    // Store X, Y\n    bs.writeBits(glyph.bbox.x, f.xy_bits);\n    bs.writeBits(glyph.bbox.y, f.xy_bits);\n    bs.writeBits(glyph.bbox.width, f.wh_bits);\n    bs.writeBits(glyph.bbox.height, f.wh_bits);\n\n    const pixels = this.pixelsToBpp(glyph.pixels);\n\n    this.storePixels(bs, pixels);\n\n    // Shrink size\n    const result = Buffer.alloc(bs.byteIndex);\n    buf.copy(result, 0, 0, bs.byteIndex);\n\n    return result;\n  }\n\n  storePixels(bitStream, pixels) {\n    if (this.getCompressionCode() === 0) this.storePixelsRaw(bitStream, pixels);\n    else this.storePixelsCompressed(bitStream, pixels);\n  }\n\n  storePixelsRaw(bitStream, pixels) {\n    const bpp = this.font.opts.bpp;\n\n    for (let y = 0; y < pixels.length; y++) {\n      const line = pixels[y];\n      for (let x = 0; x < line.length; x++) {\n        bitStream.writeBits(line[x], bpp);\n      }\n    }\n  }\n\n  storePixelsCompressed(bitStream, pixels) {\n    let p;\n\n    if (this.font.opts.no_prefilter) p = _.flatten(pixels);\n    else p = _.flatten(u.prefilter(pixels));\n\n    compress(bitStream, p, this.font.opts);\n  }\n\n  // Create internal struct with binary data for each glyph\n  // Needed to calculate offsets & build final result\n  compile() {\n    this.compiled = true;\n\n    this.binData = [\n      Buffer.alloc(0) // Reserve id 0\n    ];\n\n    const f = this.font;\n\n    f.src.glyphs.forEach(g => {\n      const id = f.glyph_id[g.code];\n\n      this.binData[id] = this.compileGlyph(g);\n    });\n  }\n\n  toBin() {\n    if (!this.compiled) this.compile();\n\n    const buf = u.balign4(Buffer.concat([\n      Buffer.alloc(HEAD_LENGTH),\n      Buffer.concat(this.binData)\n    ]));\n\n    buf.writeUInt32LE(buf.length, O_SIZE);\n    buf.write(this.label, O_LABEL);\n\n    debug(`table size = ${buf.length}`);\n\n    return buf;\n  }\n\n  getSize() {\n    if (!this.compiled) this.compile();\n\n    return u.align4(HEAD_LENGTH + _.sum(this.binData.map(b => b.length)));\n  }\n\n  getOffset(id) {\n    if (!this.compiled) this.compile();\n\n    let offset = HEAD_LENGTH;\n\n    for (let i = 0; i < id; i++) offset += this.binData[i].length;\n\n    return offset;\n  }\n\n  getCompressionCode() {\n    if (this.font.opts.no_compress) return 0;\n    if (this.font.opts.bpp === 1) return 0;\n\n    if (this.font.opts.no_prefilter) return 2;\n    return 1;\n  }\n}\n\n\nmodule.exports = Glyf;\n","'use strict';\n\n\nconst _ = require('lodash');\nconst u = require('../utils');\nconst debug = require('debug')('font.table.loca');\n\n\nconst O_SIZE = 0;\nconst O_LABEL = O_SIZE + 4;\nconst O_COUNT = O_LABEL + 4;\n\nconst HEAD_LENGTH = O_COUNT + 4;\n\n\nclass Loca {\n  constructor(font) {\n    this.font = font;\n    this.label = 'loca';\n  }\n\n  toBin() {\n    const f = this.font;\n\n    const offsets = _.range(f.last_id).map(i => f.glyf.getOffset(i));\n\n    const buf = u.balign4(Buffer.concat([\n      Buffer.alloc(HEAD_LENGTH),\n      f.indexToLocFormat ? u.bFromA32(offsets) : u.bFromA16(offsets)\n    ]));\n\n    buf.writeUInt32LE(buf.length, O_SIZE);\n    buf.write(this.label, O_LABEL);\n    buf.writeUInt32LE(f.last_id, O_COUNT);\n\n    debug(`table size = ${buf.length}`);\n\n    return buf;\n  }\n}\n\n\nmodule.exports = Loca;\n","'use strict';\n\nconst _ = require('lodash');\nconst u = require('../utils');\nconst debug = require('debug')('font.table.kern');\n\n\nconst O_SIZE = 0;\nconst O_LABEL = O_SIZE + 4;\nconst O_FORMAT = O_LABEL + 4;\n\nconst HEAD_LENGTH = u.align4(O_FORMAT + 1);\n\n\nclass Kern {\n  constructor(font) {\n    this.font = font;\n    this.label = 'kern';\n    this.format3_forced = false;\n  }\n\n  collect_format0_data() {\n    const f = this.font;\n    const glyphs = _.sortBy(this.font.src.glyphs, g => f.glyph_id[g.code]);\n    const kernSorted = [];\n\n    for (let g of glyphs) {\n      if (_.isEmpty(g.kerning)) continue;\n\n      const glyph_id = f.glyph_id[g.code];\n      const paired = _.sortBy(Object.keys(g.kerning), code => f.glyph_id[code]);\n\n      for (let code of paired) {\n        const glyph_id2 = f.glyph_id[code];\n        kernSorted.push([ glyph_id, glyph_id2, g.kerning[code] ]);\n      }\n    }\n\n    return kernSorted;\n  }\n\n  create_format0_data() {\n    const f = this.font;\n    const glyphs = this.font.src.glyphs;\n    const kernSorted = this.collect_format0_data();\n\n    const count = kernSorted.length;\n\n    const kerned_glyphs = glyphs.filter(g => Object.keys(g.kerning).length).length;\n    const kerning_list_max = _.max(glyphs.map(g => Object.keys(g.kerning).length));\n    debug(`${kerned_glyphs} kerned glyphs of ${glyphs.length}, ${kerning_list_max} max list, ${count} total pairs`);\n\n    const subheader = Buffer.alloc(4);\n\n    subheader.writeUInt32LE(count, 0);\n\n    const pairs_buf = Buffer.alloc((f.glyphIdFormat ? 4 : 2) * count);\n\n    // Write kerning pairs\n    for (let i = 0; i < count; i++) {\n      if (f.glyphIdFormat === 0) {\n        pairs_buf.writeUInt8(kernSorted[i][0], 2 * i);\n        pairs_buf.writeUInt8(kernSorted[i][1], 2 * i + 1);\n      } else {\n        pairs_buf.writeUInt16LE(kernSorted[i][0], 4 * i);\n        pairs_buf.writeUInt16LE(kernSorted[i][1], 4 * i + 2);\n      }\n    }\n\n    const values_buf = Buffer.alloc(count);\n\n    // Write kerning values\n    for (let i = 0; i < count; i++) {\n      values_buf.writeInt8(f.kernToFP(kernSorted[i][2]), i); // FP4.4\n    }\n\n    let buf = Buffer.concat([\n      subheader,\n      pairs_buf,\n      values_buf\n    ]);\n\n    let buf_aligned = u.balign4(buf);\n\n    debug(`table format0 size = ${buf_aligned.length}`);\n    return buf_aligned;\n  }\n\n  collect_format3_data() {\n    const f = this.font;\n    const glyphs = _.sortBy(this.font.src.glyphs, g => f.glyph_id[g.code]);\n\n    // extract kerning pairs for each character;\n    // left kernings are kerning values based on left char (already there),\n    // right kernings are kerning values based on right char (extracted from left)\n    const left_kernings = {};\n    const right_kernings = {};\n\n    for (let g of glyphs) {\n      if (_.isEmpty(g.kerning)) continue;\n\n      const paired = Object.keys(g.kerning);\n\n      left_kernings[g.code] = g.kerning;\n\n      for (let code of paired) {\n        right_kernings[code] = right_kernings[code] || {};\n        right_kernings[code][g.code] = g.kerning[code];\n      }\n    }\n\n    // input:\n    //  - kernings, char => { hash: String, [char1]: Number, [char2]: Number, ... }\n    //\n    // returns:\n    //  - array of [ char1, char2, ... ]\n    //\n    function build_classes(kernings) {\n      const classes = [];\n\n      for (let code of Object.keys(kernings)) {\n        // for each kerning table calculate unique value representing it;\n        // keys needs to be sorted for this (but we're using numeric keys, so\n        // sorting happens automatically and can't be changed)\n        const hash = JSON.stringify(kernings[code]);\n\n        classes[hash] = classes[hash] || [];\n        classes[hash].push(Number(code));\n      }\n\n      return Object.values(classes);\n    }\n\n    const left_classes = build_classes(left_kernings);\n    debug(`unique left classes: ${left_classes.length}`);\n\n    const right_classes = build_classes(right_kernings);\n    debug(`unique right classes: ${right_classes.length}`);\n\n    if (left_classes.length >= 255 || right_classes.length >= 255) {\n      debug('too many classes for format3 subtable');\n      return null;\n    }\n\n    function kern_class_mapping(classes) {\n      const arr = Array(f.last_id).fill(0);\n\n      classes.forEach((members, idx) => {\n        for (let code of members) {\n          arr[f.glyph_id[code]] = idx + 1;\n        }\n      });\n\n      return arr;\n    }\n\n    function kern_class_values() {\n      const arr = [];\n\n      for (let left_class of left_classes) {\n        for (let right_class of right_classes) {\n          let code1 = left_class[0];\n          let code2 = right_class[0];\n          arr.push(left_kernings[code1][code2] || 0);\n        }\n      }\n\n      return arr;\n    }\n\n    return {\n      left_classes:  left_classes.length,\n      right_classes: right_classes.length,\n      left_mapping:  kern_class_mapping(left_classes),\n      right_mapping: kern_class_mapping(right_classes),\n      values:        kern_class_values()\n    };\n  }\n\n  create_format3_data() {\n    const f = this.font;\n    const {\n      left_classes,\n      right_classes,\n      left_mapping,\n      right_mapping,\n      values\n    } = this.collect_format3_data();\n\n    const subheader = Buffer.alloc(4);\n    subheader.writeUInt16LE(f.last_id);\n    subheader.writeUInt8(left_classes, 2);\n    subheader.writeUInt8(right_classes, 3);\n\n    let buf = Buffer.concat([\n      subheader,\n      Buffer.from(left_mapping),\n      Buffer.from(right_mapping),\n      Buffer.from(values.map(v => f.kernToFP(v)))\n    ]);\n\n    let buf_aligned = u.balign4(buf);\n\n    debug(`table format3 size = ${buf_aligned.length}`);\n    return buf_aligned;\n  }\n\n  should_use_format3() {\n    if (!this.font.hasKerning()) return false;\n\n    const format0_data = this.create_format0_data();\n    const format3_data = this.create_format3_data();\n\n    if (format3_data && format3_data.length <= format0_data.length) return true;\n\n    if (this.font.opts.fast_kerning && format3_data) {\n      this.format3_forced = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  toBin() {\n    if (!this.font.hasKerning()) return Buffer.alloc(0);\n\n    const format0_data = this.create_format0_data();\n    const format3_data = this.create_format3_data();\n\n    let header = Buffer.alloc(HEAD_LENGTH);\n\n    let data = format0_data;\n    header.writeUInt8(0, O_FORMAT);\n\n    /* eslint-disable no-console */\n\n    if (this.should_use_format3()) {\n      data = format3_data;\n      header.writeUInt8(3, O_FORMAT);\n\n      if (this.format3_forced) {\n        let diff = format3_data.length - format0_data.length;\n        console.log(`Forced faster kerning format (via classes). Size increase is ${diff} bytes.`);\n      }\n    } else if (this.font.opts.fast_kerning) {\n      console.log('Forced faster kerning format (via classes), but data exceeds it\\'s limits. Continue use pairs.');\n    }\n\n    header.writeUInt32LE(header.length + data.length, O_SIZE);\n    header.write(this.label, O_LABEL);\n\n    return Buffer.concat([ header, data ]);\n  }\n}\n\n\nmodule.exports = Kern;\n","// Font class to generate tables\n'use strict';\n\nconst _ = require('lodash');\nconst u = require('../utils');\nconst debug = require('debug')('font');\nconst Head = require('./table_head');\nconst Cmap = require('./table_cmap');\nconst Glyf = require('./table_glyf');\nconst Loca = require('./table_loca');\nconst Kern = require('./table_kern');\n\nclass Font {\n  constructor(fontData, options) {\n    this.src = _.cloneDeep(fontData);\n\n    this.opts = options;\n\n    // Map chars to IDs (zero is reserved)\n    this.glyph_id = { 0: 0 };\n\n    this.last_id = 1;\n    this.createIDs();\n    debug(`last_id: ${this.last_id}`);\n\n    this.init_tables();\n\n    this.minY = _.min(this.src.glyphs.map(g => g.bbox.y));\n    debug(`minY: ${this.minY}`);\n    this.maxY = _.max(this.src.glyphs.map(g => g.bbox.y + g.bbox.height));\n    debug(`maxY: ${this.maxY}`);\n\n    // 0 => 1 byte, 1 => 2 bytes\n    this.glyphIdFormat = _.max(_.values(this.glyph_id)) > 255 ? 1 : 0;\n    debug(`glyphIdFormat: ${this.glyphIdFormat}`);\n\n    // 1.0 by default, will be stored in font as FP12.4\n    this.kerningScale = 1.0;\n    let kerningMax = _.max(_.flatten(this.src.glyphs.map(g => _.values(g.kerning).map(Math.abs))));\n    if (kerningMax >= 7.5) this.kerningScale = Math.round(kerningMax / 7.5 * 16) / 16;\n    debug(`kerningScale: ${this.kerningScale}`);\n\n    // 0 => int, 1 => FP4\n    this.advanceWidthFormat = this.hasKerning() ? 1 : 0;\n    debug(`advanceWidthFormat: ${this.advanceWidthFormat}`);\n\n    this.xy_bits = _.max(this.src.glyphs.map(g => Math.max(\n      u.signed_bits(g.bbox.x), u.signed_bits(g.bbox.y)\n    )));\n    debug(`xy_bits: ${this.xy_bits}`);\n\n    this.wh_bits = _.max(this.src.glyphs.map(g => Math.max(\n      u.unsigned_bits(g.bbox.width), u.unsigned_bits(g.bbox.height)\n    )));\n    debug(`wh_bits: ${this.wh_bits}`);\n\n    this.advanceWidthBits = _.max(this.src.glyphs.map(\n      g => u.signed_bits(this.widthToInt(g.advanceWidth))\n    ));\n    debug(`advanceWidthBits: ${this.advanceWidthBits}`);\n\n    let glyphs = this.src.glyphs;\n\n    this.monospaced = glyphs.every((v, i, arr) => v.advanceWidth === arr[0].advanceWidth);\n    debug(`monospaced: ${this.monospaced}`);\n\n    // This should stay in the end, because depends on previous variables\n    // 0 => 2 bytes, 1 => 4 bytes\n    this.indexToLocFormat = this.glyf.getSize() > 65535 ? 1 : 0;\n    debug(`indexToLocFormat: ${this.indexToLocFormat}`);\n\n    this.subpixels_mode = options.lcd ? 1 : (options.lcd_v ? 2 : 0);\n    debug(`subpixels_mode: ${this.subpixels_mode}`);\n  }\n\n  init_tables() {\n    this.head = new Head(this);\n    this.glyf = new Glyf(this);\n    this.cmap = new Cmap(this);\n    this.loca = new Loca(this);\n    this.kern = new Kern(this);\n  }\n\n  createIDs() {\n    // Simplified, don't check dupes\n    this.last_id = 1;\n\n    for (let i = 0; i < this.src.glyphs.length; i++) {\n      // reserve zero for special cases\n      this.glyph_id[this.src.glyphs[i].code] = this.last_id;\n      this.last_id++;\n    }\n  }\n\n  hasKerning() {\n    if (this.opts.no_kerning) return false;\n\n    for (let glyph of this.src.glyphs) {\n      if (glyph.kerning && Object.keys(glyph.kerning).length) return true;\n    }\n    return false;\n  }\n\n  // Returns integer width, depending on format\n  widthToInt(val) {\n    if (this.advanceWidthFormat === 0) return Math.round(val);\n\n    return Math.round(val * 16);\n  }\n\n  // Convert kerning to FP4.4, useable for writer. Apply `kerningScale`.\n  kernToFP(val) {\n    return Math.round(val / this.kerningScale * 16);\n  }\n\n  toBin() {\n    const result = Buffer.concat([\n      this.head.toBin(),\n      this.cmap.toBin(),\n      this.loca.toBin(),\n      this.glyf.toBin(),\n      this.kern.toBin()\n    ]);\n\n    debug(`font size: ${result.length}`);\n\n    return result;\n  }\n}\n\n\nmodule.exports = Font;\n","// Write font in binary format\n'use strict';\n\n\nconst AppError = require('../app_error');\nconst Font     = require('../font/font');\n\n\nmodule.exports = function write_images(args, fontData) {\n  if (!args.output) throw new AppError('Output is required for \"bin\" writer');\n\n  const font = new Font(fontData, args);\n\n  return {\n    [args.output]: font.toBin()\n  };\n};\n","'use strict';\n\n\nconst Head = require('../../font/table_head');\n\n\nclass LvHead extends Head {\n  constructor(font) {\n    super(font);\n  }\n\n  kern_ref() {\n    const f = this.font;\n\n    if (!f.hasKerning()) {\n      return {\n        scale:   '0',\n        dsc:     'NULL',\n        classes: '0'\n      };\n    }\n\n    if (!f.kern.should_use_format3()) {\n      return {\n        scale: `${Math.round(f.kerningScale * 16)}`,\n        dsc: '&kern_pairs',\n        classes: '0'\n      };\n    }\n\n    return {\n      scale: `${Math.round(f.kerningScale * 16)}`,\n      dsc: '&kern_classes',\n      classes: '1'\n    };\n  }\n\n  toLVGL() {\n    const f = this.font;\n    const kern = this.kern_ref();\n    const subpixels = (f.subpixels_mode === 0) ? 'LV_FONT_SUBPX_NONE' :\n      (f.subpixels_mode === 1) ? 'LV_FONT_SUBPX_HOR' : 'LV_FONT_SUBPX_VER';\n\n    return `\n/*--------------------\n *  ALL CUSTOM DATA\n *--------------------*/\n\n/*Store all the custom data of the font*/\nstatic lv_font_fmt_txt_dsc_t font_dsc = {\n    .glyph_bitmap = gylph_bitmap,\n    .glyph_dsc = glyph_dsc,\n    .cmaps = cmaps,\n    .kern_dsc = ${kern.dsc},\n    .kern_scale = ${kern.scale},\n    .cmap_num = ${f.cmap.toBin().readUInt32LE(8)},\n    .bpp = ${f.opts.bpp},\n    .kern_classes = ${kern.classes},\n    .bitmap_format = ${f.glyf.getCompressionCode()}\n};\n\n\n/*-----------------\n *  PUBLIC FONT\n *----------------*/\n\n/*Initialize a public general font descriptor*/\nlv_font_t ${f.font_name} = {\n    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/\n    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/\n    .line_height = ${f.src.ascent - f.src.descent},          /*The maximum line height required by the font*/\n    .base_line = ${-f.src.descent},             /*Baseline measured from the bottom of the line*/\n#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)\n    .subpx = ${subpixels},\n#endif\n#if LV_VERSION_CHECK(7, 4, 0)\n    .underline_position = ${f.src.underlinePosition},\n    .underline_thickness = ${f.src.underlineThickness},\n#endif\n    .dsc = &font_dsc           /*The custom font data. Will be accessed by \\`get_glyph_bitmap/dsc\\` */\n};\n`.trim();\n  }\n}\n\n\nmodule.exports = LvHead;\n","'use strict';\n\n\nconst u = require('../../utils');\nconst build_subtables = require('../../font/cmap_build_subtables');\nconst Cmap = require('../../font/table_cmap');\n\n\nclass LvCmap extends Cmap {\n  constructor(font) {\n    super(font);\n\n    this.lv_compiled = false;\n    this.lv_subtables = [];\n  }\n\n  lv_format2enum(name) {\n    switch (name) {\n      case 'format0_tiny': return 'LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY';\n      case 'format0': return 'LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL';\n      case 'sparse_tiny': return 'LV_FONT_FMT_TXT_CMAP_SPARSE_TINY';\n      case 'sparse': return 'LV_FONT_FMT_TXT_CMAP_SPARSE_FULL';\n      default: throw new Error('Unknown subtable format');\n    }\n  }\n\n  lv_compile() {\n    if (this.lv_compiled) return;\n    this.lv_compiled = true;\n\n    const f = this.font;\n\n    let subtables_plan = build_subtables(f.src.glyphs.map(g => g.code));\n    let idx = 0;\n\n    for (let [ format, codepoints ] of subtables_plan) {\n      let g = this.glyphByCode(codepoints[0]);\n      let start_glyph_id = f.glyph_id[g.code];\n      let min_code = codepoints[0];\n      let max_code = codepoints[codepoints.length - 1];\n\n      let has_charcodes = false;\n      let has_ids = false;\n      let defs = '';\n      let entries_count = 0;\n\n      if (format === 'format0_tiny') {\n        // use default empty values\n      } else if (format === 'format0') {\n        has_ids = true;\n        let d = this.collect_format0_data(min_code, max_code, start_glyph_id);\n        entries_count = d.length;\n\n        defs = `\nstatic const uint8_t glyph_id_ofs_list_${idx}[] = {\n${u.long_dump(d)}\n};\n`.trim();\n\n      } else if (format === 'sparse_tiny') {\n        has_charcodes = true;\n        let d = this.collect_sparse_data(codepoints, start_glyph_id);\n        entries_count = d.codes.length;\n\n        defs = `\nstatic const uint16_t unicode_list_${idx}[] = {\n${u.long_dump(d.codes, { hex: true })}\n};\n`.trim();\n\n      } else { // assume format === 'sparse'\n        has_charcodes = true;\n        has_ids = true;\n        let d = this.collect_sparse_data(codepoints, start_glyph_id);\n        entries_count = d.codes.length;\n\n        defs = `\nstatic const uint16_t unicode_list_${idx}[] = {\n${u.long_dump(d.codes, { hex: true })}\n};\nstatic const uint16_t glyph_id_ofs_list_${idx}[] = {\n${u.long_dump(d.ids)}\n};\n`.trim();\n      }\n\n      const u_list = has_charcodes ? `unicode_list_${idx}` : 'NULL';\n      const id_list = has_ids ? `glyph_id_ofs_list_${idx}` : 'NULL';\n\n      /* eslint-disable max-len */\n      const head = `    {\n        .range_start = ${min_code}, .range_length = ${max_code - min_code + 1}, .glyph_id_start = ${start_glyph_id},\n        .unicode_list = ${u_list}, .glyph_id_ofs_list = ${id_list}, .list_length = ${entries_count}, .type = ${this.lv_format2enum(format)}\n    }`;\n\n      this.lv_subtables.push({\n        defs,\n        head\n      });\n\n      idx++;\n    }\n  }\n\n  toLVGL() {\n    this.lv_compile();\n\n    return `\n/*---------------------\n *  CHARACTER MAPPING\n *--------------------*/\n\n${this.lv_subtables.map(d => d.defs).filter(Boolean).join('\\n\\n')}\n\n/*Collect the unicode lists and glyph_id offsets*/\nstatic const lv_font_fmt_txt_cmap_t cmaps[] =\n{\n${this.lv_subtables.map(d => d.head).join(',\\n')}\n};\n `.trim();\n  }\n}\n\n\nmodule.exports = LvCmap;\n","'use strict';\n\n\nconst { BitStream } = require('bit-buffer');\nconst u = require('../../utils');\nconst Glyf = require('../../font/table_glyf');\n\n\nclass LvGlyf extends Glyf {\n  constructor(font) {\n    super(font);\n\n    this.lv_data = [];\n    this.lv_compiled = false;\n  }\n\n  lv_bitmap(glyph) {\n    const buf = Buffer.alloc(100 + glyph.bbox.width * glyph.bbox.height * 4);\n    const bs = new BitStream(buf);\n    bs.bigEndian = true;\n\n    const pixels = this.font.glyf.pixelsToBpp(glyph.pixels);\n\n    this.font.glyf.storePixels(bs, pixels);\n\n    const glyph_bitmap = Buffer.alloc(bs.byteIndex);\n    buf.copy(glyph_bitmap, 0, 0, bs.byteIndex);\n\n    return glyph_bitmap;\n  }\n\n  lv_compile() {\n    if (this.lv_compiled) return;\n\n    this.lv_compiled = true;\n\n    const f = this.font;\n    this.lv_data = [];\n    let offset = 0;\n\n    f.src.glyphs.forEach(g => {\n      const id = f.glyph_id[g.code];\n      const bin = this.lv_bitmap(g);\n      this.lv_data[id] = {\n        bin,\n        offset,\n        glyph: g\n      };\n      offset += bin.length;\n    });\n  }\n\n  to_lv_bitmaps() {\n    this.lv_compile();\n\n    let result = [];\n    this.lv_data.forEach((d, idx) => {\n      if (idx === 0) return;\n      const code_hex = d.glyph.code.toString(16).toUpperCase();\n      const code_str = JSON.stringify(String.fromCodePoint(d.glyph.code));\n\n      let txt = `    /* U+${code_hex} ${code_str} */\n${u.long_dump(d.bin, { hex: true })}`;\n\n      if (idx < this.lv_data.length - 1) {\n        // skip comma for zero data\n        txt += d.bin.length ? ',\\n\\n' : '\\n';\n      }\n\n      result.push(txt);\n    });\n\n    return result.join('');\n  }\n\n  to_lv_glyph_dsc() {\n    this.lv_compile();\n\n    /* eslint-disable max-len */\n\n    let result = [ '    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */' ];\n\n    this.lv_data.forEach(d => {\n      const idx = d.offset,\n            adv_w = Math.round(d.glyph.advanceWidth * 16),\n            h = d.glyph.bbox.height,\n            w = d.glyph.bbox.width,\n            x = d.glyph.bbox.x,\n            y = d.glyph.bbox.y;\n      result.push(`    {.bitmap_index = ${idx}, .adv_w = ${adv_w}, .box_w = ${w}, .box_h = ${h}, .ofs_x = ${x}, .ofs_y = ${y}}`);\n    });\n\n    return result.join(',\\n');\n  }\n\n\n  toLVGL() {\n    return `\n/*-----------------\n *    BITMAPS\n *----------------*/\n\n/*Store the image of the glyphs*/\nstatic LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {\n${this.to_lv_bitmaps()}\n};\n\n\n/*---------------------\n *  GLYPH DESCRIPTION\n *--------------------*/\n\nstatic const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {\n${this.to_lv_glyph_dsc()}\n};\n`.trim();\n  }\n}\n\n\nmodule.exports = LvGlyf;\n","'use strict';\n\n\nconst u = require('../../utils');\nconst Kern = require('../../font/table_kern');\n\n\nclass LvKern extends Kern {\n  constructor(font) {\n    super(font);\n  }\n\n  to_lv_format0() {\n    const f = this.font;\n    let kern_pairs = this.collect_format0_data();\n\n    return `\n/*-----------------\n *    KERNING\n *----------------*/\n\n\n/*Pair left and right glyphs for kerning*/\nstatic const ${f.glyphIdFormat ? 'uint16_t' : 'uint8_t'} kern_pair_glyph_ids[] =\n{\n${kern_pairs.map(pair => `    ${pair[0]}, ${pair[1]}`).join(',\\n')}\n};\n\n/* Kerning between the respective left and right glyphs\n * 4.4 format which needs to scaled with \\`kern_scale\\`*/\nstatic const int8_t kern_pair_values[] =\n{\n${u.long_dump(kern_pairs.map(pair => f.kernToFP(pair[2])))}\n};\n\n/*Collect the kern pair's data in one place*/\nstatic const lv_font_fmt_txt_kern_pair_t kern_pairs =\n{\n    .glyph_ids = kern_pair_glyph_ids,\n    .values = kern_pair_values,\n    .pair_cnt = ${kern_pairs.length},\n    .glyph_ids_size = ${f.glyphIdFormat}\n};\n\n\n`.trim();\n  }\n\n  to_lv_format3() {\n    const f = this.font;\n    const {\n      left_classes,\n      right_classes,\n      left_mapping,\n      right_mapping,\n      values\n    } = this.collect_format3_data();\n\n    return `\n/*-----------------\n *    KERNING\n *----------------*/\n\n\n/*Map glyph_ids to kern left classes*/\nstatic const uint8_t kern_left_class_mapping[] =\n{\n${u.long_dump(left_mapping)}\n};\n\n/*Map glyph_ids to kern right classes*/\nstatic const uint8_t kern_right_class_mapping[] =\n{\n${u.long_dump(right_mapping)}\n};\n\n/*Kern values between classes*/\nstatic const int8_t kern_class_values[] =\n{\n${u.long_dump(values.map(v => f.kernToFP(v)))}\n};\n\n\n/*Collect the kern class' data in one place*/\nstatic const lv_font_fmt_txt_kern_classes_t kern_classes =\n{\n    .class_pair_values   = kern_class_values,\n    .left_class_mapping  = kern_left_class_mapping,\n    .right_class_mapping = kern_right_class_mapping,\n    .left_class_cnt      = ${left_classes},\n    .right_class_cnt     = ${right_classes},\n};\n\n\n`.trim();\n  }\n\n  toLVGL() {\n    const f = this.font;\n\n    if (!f.hasKerning()) return '';\n\n    /* eslint-disable no-console */\n\n    if (f.kern.should_use_format3()) {\n      if (f.kern.format3_forced) {\n        let diff = this.create_format3_data().length - this.create_format0_data().length;\n        console.log(`Forced faster kerning format (via classes). Size increase is ${diff} bytes.`);\n      }\n      return this.to_lv_format3();\n    }\n\n    if (this.font.opts.fast_kerning) {\n      console.log('Forced faster kerning format (via classes), but data exceeds it\\'s limits. Continue use pairs.');\n    }\n    return this.to_lv_format0();\n  }\n}\n\n\nmodule.exports = LvKern;\n","'use strict';\n\n\nconst path = require('path');\n\nconst Font = require('../../font/font');\nconst Head = require('./lv_table_head');\nconst Cmap = require('./lv_table_cmap');\nconst Glyf = require('./lv_table_glyf');\nconst Kern = require('./lv_table_kern');\nconst AppError = require('../../app_error');\n\n\nclass LvFont extends Font {\n  constructor(fontData, options) {\n    super(fontData, options);\n\n    const ext = path.extname(options.output);\n    this.font_name = path.basename(options.output, ext);\n\n    if (options.bpp === 3 & options.no_compress) {\n      throw new AppError('LittlevGL supports \"--bpp 3\" with compression only');\n    }\n  }\n\n  init_tables() {\n    this.head = new Head(this);\n    this.glyf = new Glyf(this);\n    this.cmap = new Cmap(this);\n    this.kern = new Kern(this);\n  }\n\n\n  toLVGL() {\n    let guard_name =  this.font_name.toUpperCase();\n\n    return `#include \"${this.opts.lv_include || 'lvgl/lvgl.h'}\"\n\n/*******************************************************************************\n * Size: ${this.src.size} px\n * Bpp: ${this.opts.bpp}\n * Opts: ${process.argv.slice(2).join(' ')}\n ******************************************************************************/\n\n#ifndef ${guard_name}\n#define ${guard_name} 1\n#endif\n\n#if ${guard_name}\n\n${this.glyf.toLVGL()}\n\n${this.cmap.toLVGL()}\n\n${this.kern.toLVGL()}\n\n${this.head.toLVGL()}\n\n#endif /*#if ${guard_name}*/\n\n`;\n  }\n}\n\n\nmodule.exports = LvFont;\n","// Write font in lvgl format\n'use strict';\n\n\nconst AppError = require('../../app_error');\nconst Font     = require('./lv_font');\n\n\nmodule.exports = function write_images(args, fontData) {\n  if (!args.output) throw new AppError('Output is required for \"lvgl\" writer');\n\n  const font = new Font(fontData, args);\n\n  return {\n    [args.output]: font.toLVGL()\n  };\n};\n","// Internal API to convert input data into output font data\n// Used by both CLI and Web wrappers.\n'use strict';\n\nconst collect_font_data = require('./collect_font_data');\n\nlet writers = {\n  dump: require('./writers/dump'),\n  bin: require('./writers/bin'),\n  lvgl: require('./writers/lvgl')\n};\n\n\n//\n// Input:\n// - args like from CLI (optionally extended with binary content of files)\n//\n// Output:\n// - { name1: bin_data1, name2: bin_data2, ... }\n//\n// returns hash with files to write\n//\nmodule.exports = async function convert(args) {\n  let font_data = await collect_font_data(args);\n  let files = writers[args.format](args, font_data);\n\n  return files;\n};\n\nmodule.exports.formats = Object.keys(writers);\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","const convert = require('../lib/convert');\nconst FileSaver = require('file-saver');\n\n/*eslint-env jquery*/\n\n\nfunction handleFiles() {\n  const fileList = this.files;\n\n  const $fontControls = $(this).closest('.font-controls');\n\n  if (!fileList.length) {\n    $fontControls.data('selected-file', null);\n    return;\n  }\n\n  const file = fileList[0];\n\n  const reader = new FileReader();\n  reader.onload = e => {\n    $(this).closest('.font-controls').data('selected-file', {\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      data: e.target.result\n    });\n  };\n  reader.readAsArrayBuffer(file);\n}\n\n\nfunction addFontFileChangeHandlers() {\n  $('.font_file').off('change', handleFiles);\n  $('.font_file').on('change', handleFiles);\n}\n\nfunction resetInput($e) {\n  $e.wrap('<form>').closest('form').get(0).reset();\n  $e.unwrap();\n}\n\nfunction addFont() {\n  let $clone = $('#font-controls-clone-source').clone(false);\n  resetInput($clone.find('.font_file'));\n  resetInput($clone.find('.font_range'));\n  resetInput($clone.find('.font_symbols'));\n  $clone.data('selected-file', null); /* just to be sure */\n  $clone.insertBefore($('#insert-button'));\n  $('<button></button>').addClass('btn btn-primary btn-md').text('Remove this font').click(function () {\n    $(this).parent().remove();\n  }).insertBefore($clone.find('hr'));\n  addFontFileChangeHandlers();\n}\n\n$('#insert-button').click(addFont);\n\naddFontFileChangeHandlers();\n\ndocument.querySelector('#converterForm').addEventListener('submit', function handleSubmit(e) {\n  e.preventDefault();\n\n  var _name = document.getElementById('name').value;\n  var _size = document.getElementById('height').value;\n  var _bpp = document.getElementById('bpp').value;\n  /* eslint-disable max-depth, radix */\n  let fcnt = 0;\n  let fonts = [];\n  let r_str;\n  let syms;\n  $('.font-controls').each(function (index, el) {\n    let $fontControls = $(el);\n    r_str = $fontControls.find('.font_range').val();\n    syms = $fontControls.find('.font_symbols').val();\n    let selectedFile = $fontControls.data('selected-file');\n    if (selectedFile && (r_str.length || syms.length)) {\n      fonts[fcnt] = {\n        source_path: selectedFile.name,\n        source_bin: Buffer.from(selectedFile.data),\n        ranges: [ { range : [], symbols:'' } ] };\n      fonts[fcnt].ranges[0].symbols = syms;\n      let r_sub = r_str.split(',');\n      if (r_str.length) {\n        // Parse the ranges. A range is array with 3 elements:\n        //[range start, range end, range remap start]\n        // Multiple ranges just means\n        //an other 3 element in the array\n        for (let i = 0; i < r_sub.length; i++) {\n          let r = r_sub[i].split('-');\n          fonts[fcnt].ranges[0].range[i * 3 + 0] = parseInt(r[0]);\n          if (r[1]) {\n            fonts[fcnt].ranges[0].range[i * 3 + 1] = parseInt(r[1]);\n          } else {\n            fonts[fcnt].ranges[0].range[i * 3 + 1] = parseInt(r[0]);\n          }\n          fonts[fcnt].ranges[0].range[i * 3 + 2] = parseInt(r[0]);\n        }\n      }\n      fcnt++;\n    }\n  });\n\n  const AppError = require('../lib/app_error');\n\n  const args = {\n    font: fonts,\n    size: parseInt(_size, 10),\n    bpp: parseInt(_bpp, 10),\n    no_compress : !(document.getElementById('compression').checked),\n    lcd: document.getElementById('subpixel2').checked,\n    lcd_v: document.getElementById('subpixel3').checked,\n    format: 'lvgl',\n    output: _name\n  };\n\n  convert(args).then(result => {\n    const blob = new Blob([ result[_name] ], { type: 'text/plain;charset=utf-8' });\n\n    FileSaver.saveAs(blob, _name + '.c');\n  }).catch(err => {\n    /*eslint-disable no-alert*/\n    // Try to beautify normal errors\n    if (err instanceof AppError) {\n      alert(err.message.trim());\n      return;\n    }\n\n    alert(err);\n\n    /* eslint-disable no-console */\n    console.error(err);\n  });\n}, false);\n"]}